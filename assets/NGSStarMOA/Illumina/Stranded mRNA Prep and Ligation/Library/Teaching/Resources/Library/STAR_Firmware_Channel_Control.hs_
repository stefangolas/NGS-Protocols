
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 4/1/2021 1:07:10 PM

#pragma once
#ifndef HSL_RUNTIME
namespace STAR_FIRMWARE_CHANNEL_CONTROL {
function _InitLibrary() { }
function _ExitLibrary() { }
function Abstract(  ) void { }
function CheckPlateWithTwoChannels( device & ML_STAR, variable i_flt_XCenter, variable i_flt_YCenter, variable i_flt_ZMinimumSearchHeight, variable i_flt_ZSpeed, variable i_flt_SearchWidth, variable i_flt_MinimumTraverseHeightBegining, variable i_flt_MinimumTraverseHeightEnding, variable i_int_BackChannel, variable i_int_FrontChannel ) variable {  return (0); }
function Create_Maximum_Y_for_Channel( device & ML_STAR, variable i_int_CurrentChannel ) void { }
function Find_Well_Center( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_MinSearchZ, variable i_flt_TipLength, variable i_flt_SafeHeight, variable & o_flt_X_Center, variable & o_flt_Y_Center, variable & o_flt_ContainerZMax ) void { }
function Find_Well_Center_2( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_MinSearchZ, variable i_flt_TipLength, variable i_flt_SafeHeight, variable i_flt_WellWidth, variable & o_flt_X_Center, variable & o_flt_Y_Center, variable & o_flt_ContainerZMax ) void { }
function Find_Well_Center_3( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_MinSearchZ, variable i_flt_TipLength, variable i_flt_SafeHeight, variable i_flt_WellWidth, variable i_flt_InitialSearchIncrement, variable i_flt_FineTuneIncrement, variable & o_flt_X_Center, variable & o_flt_Y_Center, variable & o_flt_ContainerZMax, variable & o_flt_X_Width, variable & o_flt_Y_Width ) void { }
function GetCLLDStatus( device & ML_STAR, variable i_int_ChannelNumber, variable & o_int_CLLDStatus ) void { }
function GetStopDiskZCoord( device & ML_STAR, variable i_int_CurrentChannel, variable & o_flt_ZCoord ) void { }
function Get_Channel_Position( device & ML_STAR, variable i_int_CurrentChannel, variable & o_X_Coord, variable & o_Y_Coord, variable & o_Z_Coord ) void { }
function Measure_Well_Center( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_MinSearchZ, variable i_flt_TipLength, variable i_flt_SafeHeight, variable & o_flt_X_Center, variable & o_flt_Y_Center, variable & o_flt_X_Width, variable & o_flt_Y_Width, variable & o_flt_ContainerZMax ) void { }
function MoveMPH384ToBack( device & ML_STAR ) void { }
function MoveMPH96ToBack( device & ML_STAR ) void { }
function Move_Channel_To_Absolute_Position( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_X_Position, variable i_flt_Y_Position, variable i_flt_Z_Position ) void { }
function Move_Channels_To_Absolute_Position( device & ML_STAR, variable i_str_ChannelPattern, variable i_flt_MinimumZHeightAtBegining, variable i_flt_X_Position, variable & i_arr_Y_Position[], variable & i_arr_Z_Position[] ) void { }
function Move_X_Relative( device & ML_STAR, variable i_int_MoveDirection, variable i_flt_RelativeDistance ) void { }
function Move_Y_Relative( device & ML_STAR, variable i_int_CurrentChannel, variable i_int_MoveDirection, variable i_flt_RelativeDistance ) void { }
function Move_Z_Relative( device & ML_STAR, variable i_int_CurrentChannel, variable i_int_MoveDirection, variable i_flt_RelativeDistance ) void { }
function Request_X_Ranges( device & ML_STAR, variable & o_flt_LeftXMin, variable & o_flt_LeftXMax, variable & o_flt_RightXMin, variable & o_flt_RightXMax ) void { }
function Reset_Search_Z( device & ML_STAR ) void { }
function SearchForCLLD_X( device & ML_STAR, variable i_int_Channel, variable i_flt_DistanceToSearch, variable i_int_DirectionToSearch, variable & o_flt_XCoordinateFound ) variable {  return (0); }
function SearchForCLLD_Y( device & ML_STAR, variable i_int_Channel, variable i_flt_DistanceToSearch, variable i_int_DirectionToSearch, variable & o_flt_YCoordinateFound ) variable {  return (0); }
function SearchForCLLD_Z( device & ML_STAR, variable i_int_Channel, variable i_flt_TipLength, variable i_flt_ZMin, variable i_flt_LLDSearchHeight, variable i_flt_ImmersionDepth, variable i_int_ImmersionDirection, variable i_int_ZLimit, variable & o_flt_ZCoordinateFound ) void { }
function Search_Z( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_Z_Min, variable i_flt_TipLength, variable i_int_Sensitivity, variable & o_flt_Z_Found ) variable {  return (0); }
function Search_Z_Slow( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_Z_Min, variable i_flt_TipLength, variable i_int_Sensitivity, variable & o_flt_Z_Found ) variable {  return (0); }
function SwitchLLDMeasurement( device & ML_STAR, variable i_bln_TurnOn ) void { }
function _CheckForError( variable i_str_FunctionName, variable i_str_ReturnValue, variable i_bool_RaiseError ) void { }
function _GetSlaveError( variable i_str_ReturnValue, variable & o_arr_Channels[], variable & o_arr_SlaveErrors[], variable & o_arr_ErrorDescription[] ) void { }
function _MoveRightArmXAbsolute( device & ML_STAR, variable i_flt_X_Position ) void { }
function _MoveXAbsolute( device & ML_STAR, variable i_flt_X_Position ) void { }
function _MoveYAbsolute( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_Y_Position ) void { }
function _MoveZAbsolute( device & ML_STAR, variable i_int_CurrentChannel, variable i_flt_Z_Position ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Orr_B$$valid=0$$time=2022-08-02 15:42$$checksum=5decf4dd$$length=082$$

// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 3/25/2025 12:12:19 PM

#pragma once
#ifndef HSL_RUNTIME
namespace LOADINGDIALOG_CONTROLLER {
function _InitLibrary() { }
function _ExitLibrary() { }
function Add_LabwareForCurrentProcess( device & ML_STAR, variable i_str_LabwareName, variable i_str_LabwareDescription, variable i_int_NumberOfUnits, sequence & i_seqTemplate, variable i_var_PositionInSequence ) variable {  return (0); }
function CalculateTotalVolumeAndSequenceToAspirate( variable i_strLiquidName, variable i_intNumberOfSamples, variable i_fltDeadVolumeLabware, variable i_fltDeadVolumeLiquid, variable i_fltMaximumVolumePerContainer, variable i_intMinimumNumberOfContainers, sequence & i_seqTemplate, variable i_intStartingPositionInSeqTemplate, sequence & o_seqToAspirate, variable & o_arr_fltVolumePerContainer[], device & ML_STAR, variable i_bln_ShowDataInLoadingDialog ) variable {  return (0); }
function Deck_Visualize( device & ML_STAR, variable i_Labware_ID, variable i_State ) variable {  return (0); }
function Deck_Visualize_fromArray( device & ML_STAR, variable & i_arrLabware_ID[], variable i_State ) variable {  return (0); }
function Define_VolumePerWell( variable i_str_LiquidName, variable & i_flt_VolumePerSample ) variable {  return (0); }
function Define_VolumePerWell_MastermixComponent( variable i_str_MastermixLiquidName, variable i_str_ComponentLiquidName, variable i_flt_VolumePerSample ) variable {  return (0); }
function DisplayDialog_DataInput( variable i_strTopText, variable i_strMainText, variable i_strDescription, variable i_strCustomToolTip, variable i_intDataType, variable i_strRange, variable & o_varOutput, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_Error( variable i_str_Message, variable i_str_ImagePath, variable i_int_Timeout, variable i_str_SoundFilePath, variable i_int_SoundLoop ) void { }
function DisplayDialog_Information( variable i_str_Message, variable i_str_ImagePath, variable i_int_Timeout, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_LoadCarrier( variable i_strCarrierName, variable i_strFilePath_MainImage, variable i_strFilePath_SubImage, variable i_int_Timeout, device & ML_STAR, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_LoadList_SingleStep( variable i_strTopMessage, variable i_strFilePath_MainImage, variable i_strFilePath_SubImage, variable i_int_Timeout, variable i_str_SoundFilePath, variable i_int_SoundLoop, variable i_str_HeaderColumn1, variable & i_arr_str_Column1[], variable i_str_HeaderColumn2, variable & i_arr_str_Column2[], variable i_str_HeaderColumn3, variable & i_arr_str_Column3[] ) variable {  return (0); }
function DisplayDialog_MastermixRecipe( variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_Question( variable i_str_Message, variable i_str_ImagePath, variable & o_int_OptionSelected, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_SelectEmailAddress( variable & o_str_EmailAddress, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_SelectInputWorklist( variable & o_str_FileWorklistFullPath, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_Tips( variable i_strFilePath_MainImage, variable i_strTextMessage, variable i_int_Timeout, device & ML_STAR, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function DisplayDialog_Warning( variable i_str_Message, variable i_str_ImagePath, variable i_int_Timeout, variable i_str_SoundFilePath, variable i_int_SoundLoop ) variable {  return (0); }
function Display_ResourcesPDF(  ) void { }
function Evaluate_ResourcesByCarrier( device & ML_STAR, variable & o_arr_strTemplateIds_ToLoad[], variable & o_arr_strTemplateIds_AllCarriers[] ) variable {  return (0); }
function Get_NumberOfUnits_ByLabwareName( variable i_str_LabwareName, variable i_str_CarrierName, variable & o_int_NumberOfUnits ) variable {  return (0); }
function Init( device & ML_STAR, variable i_strKit_FolderPath, variable i_strProtocolVersion, variable & o_str_ControllerNameAndVersion, variable & o_str_RunDataReportFilePath ) variable {  return (0); }
function MultipleChoiceDialog_DefineChoiceElement( variable i_int_DialogId, variable i_str_GroupName, variable i_str_Label, variable i_bln_PreSelected ) variable {  return (0); }
function MultipleChoiceDialog_DisplayDialog( variable i_int_DialogID ) variable {  return (0); }
function MultipleChoiceDialog_RetrieveUserSelection( variable i_int_DialogID, variable i_str_GroupName, variable & o_int_OptionSelected ) variable {  return (0); }
function SelectProcesses_DisplayDialog( variable & i_arr_strProcessId[], variable & i_arr_strProcessCombinations[], variable & i_arr_intProcessDeactivatedStartPoints[], variable & i_arr_intProcessDeactivatedStopPoints[], variable & o_int_StartProcess, variable & o_int_StopProcess, variable & o_arr_blnProcessActivationStatus[] ) variable {  return (0); }
function Terminate(  ) variable {  return (0); }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Orr_B$$valid=0$$time=2025-03-25 12:12$$checksum=3b093d42$$length=082$$
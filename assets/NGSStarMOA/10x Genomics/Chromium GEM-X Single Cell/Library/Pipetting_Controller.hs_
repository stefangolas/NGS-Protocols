
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 5/10/2025 7:40:56 PM

#pragma once
#ifndef HSL_RUNTIME
namespace PIPETTING_CONTROLLER {
function _InitLibrary() { }
function _ExitLibrary() { }
function Init( device & ML_STAR, variable i_blnDeactivatePipettingStepsForTransportTests, variable i_strFullPathReportFile, sequence i_seqWasteChannels, variable i_intMPH96PickUpSide, variable i_ActivateIntegratedAbortHandler, variable & o_strNameAndVersion ) variable {  return (0); }
function PIP_Channels( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnTipExchangeDuringTransfer, variable i_blnIncrementAspirationSequence, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_intPrewetCycles ) variable {  return (0); }
function PIP_Channels_DefragmentTipRacks( device & ML_STAR, variable i_strTipCounterName ) variable {  return (0); }
function PIP_Channels_DoubleAspiration( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume1stTransfer, variable i_fltVolume2ndTransfer, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom1stTransfer, variable i_fltAspirateHeightFromBottom2ndTransfer, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense ) variable {  return (0); }
function PIP_Channels_ExpandedMix( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCyclesAspiration, variable i_intMixCyclesDispense, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnTipExchangeDuringTransfer, variable i_blnIncrementAspirationSequence, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_intPrewetCycles ) variable {  return (0); }
function PIP_Channels_MixBeadsByOverturn( device & ML_STAR, sequence & io_seqMix, variable i_strLiquidClassName, variable i_intOverturnCycles, variable i_intMixCycles, variable i_fltOverturnVolume, variable i_fltMixVolume, variable i_fltImmersionDepth, variable i_fltMixHeight, variable i_fltAspirationHeight, variable & o_strOutputErrorString ) variable {  return (0); }
function PIP_Channels_MixOnly( device & ML_STAR, sequence i_seqAspirationPosition, variable i_fltAspirateHeightFromBottom, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltMixingVolume, variable i_blnPerformMixWithcLLDandFixheight ) variable {  return (0); }
function PIP_Channels_Multidispense( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltDispenseHeightFromBottom, variable i_fltVolume, variable i_fltVolumePreAliquot, variable i_fltVolumePostAliquot, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_blnActivateMeasurementOfContainerVolume ) variable {  return (0); }
function PIP_Channels_WithVolumeArray( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable & i_arrFltVolume[], variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnTipExchangeDuringTransfer, variable i_blnIncrementAspirationSequence, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_intPrewetCycles ) variable {  return (0); }
function PIP_Channels_WithVolumeArray_1by1_MultiDispense( device & ML_STAR, sequence & i_arr_seqAspirationPosition[], sequence i_seqDispensePosition, variable & i_arr_fltVolumeAspiration[], variable & i_arr_fltVolumeDispense[], variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnTipExchangeDuringTransfer, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_intPrewetCycles, variable & i_arr_blnConsecutiveAspiration[] ) variable {  return (0); }
function PIP_Channels_WithVolumeArray_1by1_SingleDispense( device & ML_STAR, sequence & i_arr_seqAspirationPosition[], sequence i_seqDispensePosition, variable & i_arr_fltVolumeAspiration[], variable & i_arr_fltVolumeDispense[], variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnTipExchangeDuringTransfer, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_intPrewetCycles, variable & i_arr_blnConsecutiveAspiration[] ) variable {  return (0); }
function PIP_Channels_WithVolumeArray_ExpandedMix( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable & i_arrFltVolume[], variable i_strLiquidClassNameTransfer, variable i_intAspirateMixCycles, variable i_intDispenseMixCycles, variable & i_arrFltAspirateMixVolume[], variable & i_arrFltDispenseMixVolume[], variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnTipExchangeDuringTransfer, variable i_blnIncrementAspirationSequence, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_intPrewetCycles ) variable {  return (0); }
function PIP_GetDetectedVolumes( variable & o_arrFltVolumesAspirationSequence[], variable & o_arrFltVolumesDispenseSequence[] ) variable {  return (0); }
function PIP_MPH( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense ) variable {  return (0); }
function PIP_MPH_CleanUpTipSupport( device & ML_STAR, variable i_blnStoreTipsBackToSequence ) variable {  return (0); }
function PIP_MPH_DoubleAspiration( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume1stTransfer, variable i_fltVolume2ndTransfer, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom1stTransfer, variable i_fltAspirateHeightFromBottom2ndTransfer, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense ) variable {  return (0); }
function PIP_MPH_DoubleAspiration_TipControl( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume1stTransfer, variable i_fltVolume2ndTransfer, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom1stTransfer, variable i_fltAspirateHeightFromBottom2ndTransfer, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_blnPickUpTips, variable i_blnEjectTips ) variable {  return (0); }
function PIP_MPH_MixOnly( device & ML_STAR, sequence i_seqMixingPosition, variable i_fltAspirateHeightFromBottom, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltMixingVolume, variable i_blnPerformMixWithcLLDandFixheight, variable i_blnUse96XTipsInsteadOfNumberPerSamplesXTips ) variable {  return (0); }
function PIP_MPH_StampAdvance( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense ) variable {  return (0); }
function PIP_MPH_StampAdvance_ExpandedMix( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCyclesAspiration, variable i_intMixCyclesDispense, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense ) variable {  return (0); }
function PIP_MPH_TipControl( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCycles, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_blnPickUpTips, variable i_blnEjectTips ) variable {  return (0); }
function PIP_MPH_TipControl_ExpandedMix( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCyclesAspiration, variable i_intMixCyclesDispense, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_blnPickUpTips, variable i_blnEjectTips ) variable {  return (0); }
function PIP_MPH_TipControl_ExpandedMix_AspirateAll( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClassNameTransfer, variable i_intMixCyclesAspiration, variable i_intMixCyclesDispense, variable i_fltVolumeMixAspiration, variable i_fltVolumeMixDispense, variable i_fltAspirateHeightFromBottom, variable i_fltDispenseHeightFromBottom, variable i_blnActivateLiquidFollowingAtAspiration, variable i_blnActivateLiquidFollowingAtDispense, variable i_blnPickUpTips, variable i_blnEjectTips ) variable {  return (0); }
global variable g_strFullPathReportFile;
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Orr_B$$valid=0$$time=2025-05-10 19:40$$checksum=2aa1d96a$$length=082$$
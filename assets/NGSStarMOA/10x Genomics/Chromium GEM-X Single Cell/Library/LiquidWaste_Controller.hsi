// {{{ 2 "IncludeGuard" "PragmaOnce"
#pragma once
// }} ""
#include "HSLStrLib.hsl"
#include "VectorCustomDialogs\\VectorCustomDialogs.hsl"
#include "ASWStandard\\TraceLevel\\TraceLevel.hsl"
#include "HSLDevLib.hsl"
#include "InstrumentTypeHelper.hsl"
#include "HSLSensorLib.hsl"
#include "ASWStandard\\ASWGlobal\\ASWGlobal.hsl"
#include "HSLUtilLib.hsl"
#include "HSLExtensions\\File.hsl"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
#include "HSLMETEDLib.hs_"
#include "HSLMECCLib.hs_"
#include "HSLPTLLib.hsl"
// }} ""
// {{{ 2 "LibraryNamespace" "Begin"
namespace LIQUIDWASTE_CONTROLLER {
// }} ""
variable t_intTraceLevel;
variable t_intPlatformType;
variable t_strLibraryName;
variable t_activateIntegratedAbortHandler;
variable t_strFunctionName;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{{ 2 "SubmethodForwardDeclaration" ""
function Init( device & ML_STAR, variable i_blnSimulationModeON, variable i_intComPortSensor, variable i_ActivateIntegratedAbortHandler, variable & o_strNameAndVersion ) variable ;
private function _CheckSytemConnected( device & ML_STAR ) void ;
private function _DATA_AppendStatusWindow( variable i_strMessageToAppend ) void ;
private function _DATA_IntegratedAbortHandler( variable i_strFunctionName, variable i_strAbortMessage ) void ;
private function _DATA_ShowListDialog( variable i_strLastErrorMessage, variable i_strTopText, variable i_strBottomText, variable i_strDeviceName ) void ;
private function _VersionHistory(  ) void ;
// }} ""
function _InitLibrary() {
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
// }} ""
}
function _ExitLibrary() {
// {{ 2 "AutoExitBlock" ""
// }} ""
}
// {{{ 5 "Init" "Begin"
function Init( device & ML_STAR, variable i_blnSimulationModeON, variable i_intComPortSensor, variable i_ActivateIntegratedAbortHandler, variable & o_strNameAndVersion ) variable {
// }} ""
private variable l_strReturnValueFillingState;
private variable l_strReturnValueCapMounting;
private variable l_blnStatusBottleFilling;
private variable l_blnStatusCapMounting;
private variable l_intInitTrials;
private variable l_blnSuccess;
private variable l_str_ReturnNameAndVersion;
private variable l_strControllerVersion;
private variable l_strComment;
private variable t_blnSimulationModeON;
private variable l_strDescription;
private variable t_strLibraryNameWithoutExtension;
// {{ 5 "Init" "InitLocals"
o_strNameAndVersion = 0;
// }} ""
// {{{ 1 1 0 "d60e1f43_8e50_4b1f_b249c2b06b91ce8e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
t_intTraceLevel = TRACELEVEL::GetTraceLevel();
// }} ""
// {{{ 2 1 0 "a902bb93_9d8d_4b2a_b4eefdc28ef1085a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("t_intTraceLevel : "), t_intTraceLevel);
// }} ""
// {{ 3 1 0 "48cc0dc1_9748_4c7a_80320e50bf56b3ba" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 4 1 0 "95a9a5bb_6e8a_4e1f_ba647705eb6f6ad1" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
t_strLibraryName = Translate("");
// }} ""
// {{ 5 1 0 "a877895b_9bd4_4c2a_bc9ec63da9fdcf65" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
t_strFunctionName = Translate("");
// }} ""
// {{ 6 1 0 "62cec37e_42b8_4678_adf55061ddcdb12f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
l_strControllerVersion = Translate("");
// }} ""
// {{ 7 1 0 "e3823851_bc58_4648_a06c2442b6e6d794" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
l_str_ReturnNameAndVersion = Translate("");
// }} ""
t_strFunctionName = GetFunctionName();
t_strLibraryName = GetFileName();
l_strControllerVersion = "0.4.5";
// {{{ 9 1 0 "320753bd_9b56_41d6_8867a6290dd8c190" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
t_strLibraryNameWithoutExtension = HSLExtensions::File::GetFileNameWithoutExtension(t_strLibraryName);
// }} ""
// {{{ 10 1 0 "b52e26a1_fccf_4c25_9f5990fa5f69fef7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
o_strNameAndVersion = StrConcat4(t_strLibraryNameWithoutExtension, Translate(" "), l_strControllerVersion, Translate(""));
// }} ""
// {{ 11 1 0 "dc925d11_594a_4319_9d2fe45a108728c3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
l_strDescription = o_strNameAndVersion;
// }} ""
// {{{ 12 1 0 "0c56f84c_e8ce_462b_af23f34fdfd79709" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::START, t_strFunctionName, t_strLibraryName, l_strDescription);
// }} ""
// {{ 13 1 0 "48cc0dc1_9748_4c7a_80320e50bf56b3ba" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 14 1 0 "831a8fa1_5ea9_4c59_a228bda44b8e2f06" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(t_strFunctionName);
// }} ""
// {{ 15 1 0 "1234c01a_1d7b_4759_aca84833324bd101" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
t_activateIntegratedAbortHandler = i_ActivateIntegratedAbortHandler;
// }} ""
// {{{ 16 1 0 "7d9a7b45_ef07_434b_b267771778341a3f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("i_ActivateIntegratedAbortHandler : "), t_activateIntegratedAbortHandler);
// }} ""
// {{{ 17 1 0 "b124e2f2_c3f4_402b_8010c613e778a09a" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CheckSytemConnected(ML_STAR);
// }} ""
// {{{ 18 1 0 "79c4bb77_ef30_46c1_aecc9b4a9903d10d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
t_blnSimulationModeON = Util::GetSimulationMode();
// }} ""
// {{ 19 1 0 "1911ff38_2a2a_429b_8db242c3932c740e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (t_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{ 20 1 0 "b888263d_62f2_4e17_a92e2b9d76d639a7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
t_blnSimulationModeON = i_blnSimulationModeON;
// }} ""
// {{ 21 1 0 "1911ff38_2a2a_429b_8db242c3932c740e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 22 1 0 "8e7d4b49_5faf_4761_b268aba3674b7f73" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("t_blnSimulationModeON : "), t_blnSimulationModeON);
// }} ""
// {{ 23 1 0 "c2612045_59f3_42a5_bac969a1fd1dc1c3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (t_blnSimulationModeON == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
// {{ 24 1 0 "c4913568_f093_481b_b13b6e921aba0e71" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\nLiquid waste system simulated.....\n\n"));
// }} ""
// {{{ 25 1 0 "199b518e_7f23_4b2b_acd64a5a39018923" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste simulated."));
// }} ""
// {{ 26 1 0 "c2612045_59f3_42a5_bac969a1fd1dc1c3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 27 1 0 "fe6ae043_2df5_4ff3_877dbe84b77ae357" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (t_intPlatformType == 0)
{
// }} ""
// {{ 28 1 0 "0efc3b70_3413_4da4_821657d2cc5a0fd6" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(l_intInitTrials = 0; l_intInitTrials < 2;)
{
l_intInitTrials = l_intInitTrials + 1;
// }} ""
// {{ 29 1 0 "825c21e5_6faa_44c4_ab54fe248fab35cd" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Platform type detection responds a STARline based platform."));
// }} ""
// {{{ 30 1 0 "142563d6_108b_471c_a4e28fdda0ad0adf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnSuccess = SensorLib::Initialize(i_intComPortSensor);
// }} ""
// {{ 31 1 0 "47b006ba_8a4d_4134_b743faf41f2b49d0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnSuccess == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
// {{{ 32 1 0 "860142b0_5e46_415f_a10458a600fe188e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusBottleFilling = SensorLib::CheckLiquid();
// }} ""
// {{ 33 1 0 "e184d8b2_e4b7_40ee_b4f86a21061cb26f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 34 1 0 "e663e6b2_125e_42d0_99e725fcb3a9fdc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnStatusBottleFilling == 0)
{
// }} ""
// {{ 35 1 0 "f097520e_fdd5_4989_b773b9f15a7e60c4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("liquid waste bottle full and needs to be emptied"));
// }} ""
// {{{ 36 1 0 "63b4ef2d_d388_400b_ab138b9b16b76ba6" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste bottle full and needs to be emptied"));
// }} ""
// {{{ 37 1 0 "17ad8f20_ae32_4d96_889cefa489356e67" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_ShowListDialog(Translate("Filling state error"), Translate("Liquid waste check"), Translate("check bottle and empty it"), Translate("Liquid waste system"));
// }} ""
// {{{ 38 1 0 "df3b9872_dc20_41b9_975ba1e4ba873753" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusBottleFilling = SensorLib::CheckLiquid();
// }} ""
// {{ 39 1 0 "8c5aba14_56c9_4c6d_b686f44bd2c41897" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnStatusBottleFilling == 0)
{
// }} ""
// {{{ 40 1 0 "1c2edbff_8372_4f8a_bfd59ed869a2f0ce" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_IntegratedAbortHandler(Translate("Liquid waste bottle filling state"), Translate("The bottle is still filled - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 41 1 0 "9467ddf1_ba2a_476d_b68fa6c686ae3dbf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::COMPLETE_WITH_ERROR, t_strFunctionName, t_strLibraryName, Translate("The bottle is still filled - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 42 1 0 "fab8a311_51a7_4717_9990c35ff12c7d4c" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return (ASWGLOBAL::BOOL::FALSE);
// }} ""
// {{ 43 1 0 "8c5aba14_56c9_4c6d_b686f44bd2c41897" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 44 1 0 "e663e6b2_125e_42d0_99e725fcb3a9fdc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 45 1 0 "25a42464_d96a_4380_86d547c47be51fe9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("liquid waste bottle empty"));
// }} ""
// {{ 46 1 0 "2f468b7a_c285_41bf_879c64991b975696" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 47 1 0 "fd16096f_d848_48b5_9af9be62d9b1a1f6" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste bottle empty"));
// }} ""
// {{ 48 1 0 "e663e6b2_125e_42d0_99e725fcb3a9fdc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 49 1 0 "07d2f95e_738e_47e2_bb001100af27d8fa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("l_blnStatusBottleFilling : "), l_blnStatusBottleFilling);
// }} ""
// {{ 50 1 0 "6da7bc29_ef67_4597_8e9550f3f896ffb7" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 51 1 0 "47b006ba_8a4d_4134_b743faf41f2b49d0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{{ 52 1 0 "b11d97e0_b4e1_4af2_9e421dd392320550" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Init of HSL SensorLib failed - check COM port settings within code Or cable connection."));
// }} ""
// {{{ 53 1 0 "1dc60bd1_24b1_4d2c_a5a93472bf5ccab1" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_ShowListDialog(Translate("INIT error"), Translate("Liquid waste check"), Translate("Init of HSL SensorLib failed - check COM port settings within code Or cable connection."), Translate("Liquid waste system"));
// }} ""
// {{ 54 1 0 "709adf32_d929_4276_b863da8ace3043c2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_intInitTrials == 2)
{
// }} ""
// {{{ 55 1 0 "156947ba_44ba_4253_9f54992423cfc841" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_IntegratedAbortHandler(Translate("Liquid waste INIT"), Translate("The INIT of the sensor failed - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 56 1 0 "e576c16a_6333_432c_a0b432e58921cafb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::COMPLETE_WITH_ERROR, t_strFunctionName, t_strLibraryName, Translate("The INIT of the sensor failed - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 57 1 0 "9aa0df33_3b62_45ef_9159433e7587c5e8" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return (ASWGLOBAL::BOOL::FALSE);
// }} ""
// {{ 58 1 0 "709adf32_d929_4276_b863da8ace3043c2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 59 1 0 "47b006ba_8a4d_4134_b743faf41f2b49d0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 60 1 0 "0efc3b70_3413_4da4_821657d2cc5a0fd6" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 61 1 0 "fe6ae043_2df5_4ff3_877dbe84b77ae357" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 62 1 0 "ddea6a8c_d61f_4b96_bd3534cf7517aea9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (t_intPlatformType == 1)
{
// }} ""
// {{ 63 1 0 "8b9ca8d9_8d04_40b0_85a2760656971abf" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Platform type detection responds a STARVline based platform."));
// }} ""
// {{ 64 1 0 "fb8bae5f_e373_4846_be2f2d5e4653e00d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 65 1 0 "e0e6c875_dfde_4816_ab656a60c2fccb5f" "ML_STAR:{1FB5DA01-3ACB-11d4-AE1F-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1FB5DA01_3ACB_11d4_AE1F_0004ACB1DCB2("e0e6c875_dfde_4816_ab656a60c2fccb5f"); // FirmwareCommand
	l_strReturnValueCapMounting = arrRetValues[3];
}
// }} ""
// {{{ 66 1 0 "c5734148_824d_4a60_a2bbe8a22c82d8af" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusCapMounting = StrRight(l_strReturnValueCapMounting, 1);
// }} ""
// {{{ 67 1 0 "b8ae223d_b564_4e23_8a68d1bb4b4e77da" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusCapMounting = StrIVal(l_blnStatusCapMounting);
// }} ""
// {{ 68 1 0 "5f220650_9dc7_42a0_a8b01081eeaef669" "ML_STAR:{1FB5DA01-3ACB-11d4-AE1F-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1FB5DA01_3ACB_11d4_AE1F_0004ACB1DCB2("5f220650_9dc7_42a0_a8b01081eeaef669"); // FirmwareCommand
	l_strReturnValueFillingState = arrRetValues[3];
}
// }} ""
// {{{ 69 1 0 "78c225cd_d604_4a02_82fd4a7b49616d75" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusBottleFilling = StrRight(l_strReturnValueFillingState, 1);
// }} ""
// {{{ 70 1 0 "217f4edb_a144_4ef7_81a33361fb3800ed" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusBottleFilling = StrIVal(l_blnStatusBottleFilling);
// }} ""
// {{ 71 1 0 "c1bc458a_7d5a_4078_a314870fe69f4c76" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnStatusCapMounting == 1)
{
// }} ""
// {{ 72 1 0 "6f9b9dc3_1bd1_41d4_bd01a64705bec437" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Cap mounted correct at liquid waste"));
// }} ""
// {{{ 73 1 0 "8f81867e_a8cc_4600_8fab61c775c2e235" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste cap detected"));
// }} ""
// {{ 74 1 0 "c1bc458a_7d5a_4078_a314870fe69f4c76" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 75 1 0 "3c9dc005_dd47_4aff_8af90ad3698f9801" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Cap mounted incorrect at liquid waste"));
// }} ""
// {{{ 76 1 0 "9d2f53f5_9918_4804_a038129154705bec" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste cap not detected"));
// }} ""
// {{{ 77 1 0 "81c1f280_a0ec_47ca_8f685b16a4bac4bd" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_ShowListDialog(Translate("Cap mounting error"), Translate("Liquid waste check"), Translate("check mountig of cap"), Translate("Liquid waste system"));
// }} ""
// {{ 78 1 0 "bea22ad1_9abc_40b3_8598ef5048fe345a" "ML_STAR:{1FB5DA01-3ACB-11d4-AE1F-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1FB5DA01_3ACB_11d4_AE1F_0004ACB1DCB2("bea22ad1_9abc_40b3_8598ef5048fe345a"); // FirmwareCommand
	l_strReturnValueCapMounting = arrRetValues[3];
}
// }} ""
// {{{ 79 1 0 "cff71503_ca79_4824_91fe89cfb4fb9e1a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusCapMounting = StrRight(l_strReturnValueCapMounting, 1);
// }} ""
// {{{ 80 1 0 "a1c0f625_1a5a_42d6_b194fe3edf1d70e0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusCapMounting = StrIVal(l_blnStatusCapMounting);
// }} ""
// {{ 81 1 0 "a575a932_f02b_4ee5_b677e32657d92d2c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnStatusCapMounting == 0)
{
// }} ""
// {{{ 82 1 0 "71527f94_8862_434c_9fb2b8798cf1a35b" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_IntegratedAbortHandler(Translate("Liquid waste cap mounting"), Translate("The cap is not correctly mounted - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 83 1 0 "71c9b62e_bb21_4d3a_b23f8314b3aa422f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::COMPLETE_WITH_ERROR, t_strFunctionName, t_strLibraryName, Translate("The cap is not correctly mounted - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 84 1 0 "6a1b328f_5bbb_4cc4_87c9974846267941" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return (ASWGLOBAL::BOOL::FALSE);
// }} ""
// {{ 85 1 0 "a575a932_f02b_4ee5_b677e32657d92d2c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 86 1 0 "c1bc458a_7d5a_4078_a314870fe69f4c76" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 87 1 0 "e7b81092_ead9_481e_961fdb480dc79fdd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnStatusBottleFilling == 1)
{
// }} ""
// {{ 88 1 0 "6c3a26ef_8292_40f5_bf4956d8edc86992" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("liquid waste bottle full and needs to be emptied"));
// }} ""
// {{{ 89 1 0 "87c0b818_763e_42ec_93b71756a550bcb3" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste bottle full and needs to be emptied"));
// }} ""
// {{{ 90 1 0 "28a03358_7c5d_4537_9ebcdd3d0c1a3cfd" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_ShowListDialog(Translate("Filling state error"), Translate("Liquid waste check"), Translate("check bottle and empty it"), Translate("Liquid waste system"));
// }} ""
// {{ 91 1 0 "d2f1de95_cb6d_46a8_86873e7e222f7dd9" "ML_STAR:{1FB5DA01-3ACB-11d4-AE1F-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1FB5DA01_3ACB_11d4_AE1F_0004ACB1DCB2("d2f1de95_cb6d_46a8_86873e7e222f7dd9"); // FirmwareCommand
	l_strReturnValueFillingState = arrRetValues[3];
}
// }} ""
// {{{ 92 1 0 "2ebc392f_25e4_44d2_a911d4bc6d173643" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusBottleFilling = StrRight(l_strReturnValueFillingState, 1);
// }} ""
// {{{ 93 1 0 "bb2d4995_6539_4c45_9100625cddf91ecd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_blnStatusBottleFilling = StrIVal(l_blnStatusBottleFilling);
// }} ""
// {{ 94 1 0 "9fbf5c38_3292_436b_9d48387e5c27f5cf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_blnStatusBottleFilling == 1)
{
// }} ""
// {{{ 95 1 0 "4e24075e_5829_4db3_bd5cd1669ffbe069" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_IntegratedAbortHandler(Translate("Liquid waste bottle filling state"), Translate("The bottle is still filled - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 96 1 0 "a532b641_3dfb_44f7_9ef48653c1ff2765" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::COMPLETE_WITH_ERROR, t_strFunctionName, t_strLibraryName, Translate("The bottle is still filled - check your system. The method will abort after pressing OK"));
// }} ""
// {{{ 97 1 0 "61d14deb_bd32_4309_9631bdfc6ea820f3" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return (ASWGLOBAL::BOOL::FALSE);
// }} ""
// {{ 98 1 0 "9fbf5c38_3292_436b_9d48387e5c27f5cf" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 99 1 0 "e7b81092_ead9_481e_961fdb480dc79fdd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 100 1 0 "d33cd3ea_8703_4678_a368aa6a94957d9d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("liquid waste bottle empty"));
// }} ""
// {{{ 101 1 0 "f88517a0_92c1_467b_ad26cb06267fd53c" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_DATA_AppendStatusWindow(Translate("Liquid waste bottle empty"));
// }} ""
// {{ 102 1 0 "e7b81092_ead9_481e_961fdb480dc79fdd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 103 1 0 "cc30311c_389f_46b9_b95bfe3865bd0be7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("Cap mounting state l_strReturnValueCapMounting : "), l_strReturnValueCapMounting);
// }} ""
// {{{ 104 1 0 "eed5f0d8_b14b_453f_808f9b0ccfc9ccb9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("Cap mounted - l_blnStatusCapMounting : "), l_blnStatusCapMounting);
// }} ""
// {{{ 105 1 0 "a95d0e7c_f02a_4c3a_81479ae3aa51f56b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("l_strReturnValueFillingState : "), l_strReturnValueFillingState);
// }} ""
// {{{ 106 1 0 "89f4adec_63a1_46b1_9446ddb2db32d80f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_RELEASE, Translate("l_blnStatusBottleFilling : "), l_blnStatusBottleFilling);
// }} ""
// {{ 107 1 0 "ddea6a8c_d61f_4b96_bd3534cf7517aea9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 108 1 0 "c2612045_59f3_42a5_bac969a1fd1dc1c3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 109 1 0 "b4915f9a_9138_40b1_9d0651b836346f24" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 110 1 0 "db4f669f_f539_4878_84342fe7080a2f24" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::COMPLETE, t_strFunctionName, t_strLibraryName, l_strComment);
// }} ""
// {{ 111 1 0 "1f65d5e2_d04b_4bd1_9b8fb191bd86952f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
t_strFunctionName = Translate("");
// }} ""
// {{{ 112 1 0 "4d461f74_5ce0_4ab0_91b65301c73bfe09" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return (ASWGLOBAL::BOOL::TRUE);
// }} ""
// {{ 113 1 0 "b4915f9a_9138_40b1_9d0651b836346f24" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 5 "Init" "End"
}
// }} ""
// {{{ 5 "_DATA_IntegratedAbortHandler" "Begin"
private function _DATA_IntegratedAbortHandler( variable i_strFunctionName, variable i_strAbortMessage ) void {
// }} ""
private variable l_strAffectedLibrary;
private variable l_strAbortMessage;
private variable l_arrListAbortHandlerMessage[];
private variable l_strFunctionName;
private variable l_strComment;
// {{ 5 "_DATA_IntegratedAbortHandler" "InitLocals"
// }} ""
// {{ 130 1 0 "38578cb4_3462_4862_98ad437e6e5347ad" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (t_activateIntegratedAbortHandler == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 131 1 0 "02bbd5fb_7614_4e27_a332557b27a42532" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return;
// }} ""
// {{ 132 1 0 "38578cb4_3462_4862_98ad437e6e5347ad" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 133 1 0 "d788e4d6_c83c_4f26_bbeff5d7880cd2bf" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 134 1 0 "6d597532_db9a_4352_837e523af27cafcb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
l_strFunctionName = Translate("");
// }} ""
// {{ 135 1 0 "ccb15c6b_ff1f_409c_afbff65622eaa7c3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
l_strComment = Translate("");
// }} ""
l_strFunctionName = GetFunctionName();
// {{{ 137 1 0 "6b4efbc2_8c51_409d_87ab706f220684ca" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::START, l_strFunctionName, t_strLibraryName, l_strComment);
// }} ""
// {{ 138 1 0 "d788e4d6_c83c_4f26_bbeff5d7880cd2bf" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 139 1 0 "406ae245_1532_44fd_9a4c6cb207f884e4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::Initialize();
// }} ""
// {{{ 140 1 0 "e93e9b3b_c5c3_4af8_99b173c51d4e9d76" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_strAffectedLibrary = StrConcat2(Translate("Affected library :    "), i_strFunctionName);
// }} ""
// {{{ 141 1 0 "de8b570a_ce79_4063_859623e3b03bd3f2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_strAbortMessage = StrConcat2(Translate("Message : "), i_strAbortMessage);
// }} ""
// {{ 142 1 0 "fed1ebfc_75ab_4c12_9d92b8c39636701a" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
l_arrListAbortHandlerMessage.SetSize(0);
// }} ""
// {{ 143 1 0 "a987006b_766f_4870_8f02478d172fa8aa" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
l_arrListAbortHandlerMessage.AddAsLast(l_strAffectedLibrary);
// }} ""
// {{ 144 1 0 "695df30a_4773_4032_8f0c059093947bca" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
l_arrListAbortHandlerMessage.AddAsLast(l_strAbortMessage);
// }} ""
// {{{ 145 1 0 "b377906c_d754_45d6_850d81f49f6796b7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::ListDialog(Translate(""), VectorCustomDialogs::IconType::Warning, VectorCustomDialogs::ButtonType::Ok, 0, 0, 0, Translate("Internal abort handler activated - error occurred - abort routine started"), Translate("Press OK to Abort the run."), l_arrListAbortHandlerMessage);
// }} ""
// {{ 146 1 0 "8f6df49a_6cc6_48c6_bb8346ccac15ab0e" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 147 1 0 "66ae6cf6_7bef_4985_b15d3a14eabeaaca" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceAction(TRACE_LEVEL_RELEASE, TRACELEVEL::ACTION::COMPLETE_WITH_ERROR, t_strFunctionName, t_strLibraryName, i_strAbortMessage);
// }} ""
// {{ 148 1 0 "8f6df49a_6cc6_48c6_bb8346ccac15ab0e" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 149 1 0 "665cf691_5ea3_4921_a047ab4c5566dcab" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{{ 5 "_DATA_IntegratedAbortHandler" "End"
}
// }} ""
// {{{ 5 "_DATA_AppendStatusWindow" "Begin"
private function _DATA_AppendStatusWindow( variable i_strMessageToAppend ) void {
// }} ""
// {{ 5 "_DATA_AppendStatusWindow" "InitLocals"
// }} ""
// {{ 122 1 0 "553ab45e_c4b6_41ce_8a2e8a25f9367251" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_116FFB5705C44e49AEA39CE6AB80B9A2 ;
err.Clear();
// }} ""
// {{{ 123 1 0 "5c78964f_d562_4471_a5c55afb84142698" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::AppendStatusText(i_strMessageToAppend);
// }} ""
// {{ 124 1 0 "553ab45e_c4b6_41ce_8a2e8a25f9367251" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_116FFB5705C44e49AEA39CE6AB80B9A2 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{{ 125 1 0 "496dcf91_100b_4452_bce0cd3c83010ea3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::Initialize();
// }} ""
// {{{ 126 1 0 "c39f428c_acc8_49e8_89c125096109e4aa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::ShowStatusDialog(Translate("Liquid waste controller"));
// }} ""
// {{{ 127 1 0 "3c8b7155_87b5_4b48_a80d79cde3f51d55" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::AppendStatusText(i_strMessageToAppend);
// }} ""
// {{ 128 1 0 "553ab45e_c4b6_41ce_8a2e8a25f9367251" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{{ 5 "_DATA_AppendStatusWindow" "End"
}
// }} ""
// {{{ 5 "_DATA_ShowListDialog" "Begin"
private function _DATA_ShowListDialog( variable i_strLastErrorMessage, variable i_strTopText, variable i_strBottomText, variable i_strDeviceName ) void {
// }} ""
private variable l_strLastError;
private variable l_strDialogTitle;
private variable l_intReturnValueDialog;
private variable l_arrListTECMessage[];
// {{ 5 "_DATA_ShowListDialog" "InitLocals"
// }} ""
// {{{ 151 1 0 "f5242357_3abf_4e19_abc5d07736237ccf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_strDialogTitle = StrConcat2(i_strDeviceName, Translate(" - inferface "));
// }} ""
// {{{ 152 1 0 "bcc60e12_324c_44bb_8aa33b8f94f6b930" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_strLastError = StrConcat2(Translate("Liquid waste error description : "), i_strLastErrorMessage);
// }} ""
// {{ 153 1 0 "3dec497b_f4ad_4d60_b7d984b64d43bb30" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
l_arrListTECMessage.SetSize(0);
// }} ""
// {{ 154 1 0 "72d83a95_4be0_44aa_9c769cef1715dacc" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
l_arrListTECMessage.AddAsLast(l_strLastError);
// }} ""
// {{ 155 1 0 "4d84d308_2151_4b96_81ae748d0c611c85" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_D16A7F43C4F64e43AD0C3EA39B73E780 ;
err.Clear();
// }} ""
// {{{ 156 1 0 "f6583e3d_f260_44b8_b4af100c98b6390f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_intReturnValueDialog = VectorCustomDialogs::ListDialog(l_strDialogTitle, VectorCustomDialogs::IconType::Information, VectorCustomDialogs::ButtonType::OkCancel, 0, 0, 0, i_strTopText, i_strBottomText, l_arrListTECMessage);
// }} ""
// {{ 157 1 0 "4d84d308_2151_4b96_81ae748d0c611c85" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_D16A7F43C4F64e43AD0C3EA39B73E780 : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{{ 158 1 0 "fc22ec78_12c4_4588_bc487907b94079c0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
VectorCustomDialogs::Initialize();
// }} ""
// {{{ 159 1 0 "c446c222_ee3f_4572_81d69ea6c98c789d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_intReturnValueDialog = VectorCustomDialogs::ListDialog(l_strDialogTitle, VectorCustomDialogs::IconType::Information, VectorCustomDialogs::ButtonType::OkCancel, 0, 0, 0, i_strTopText, i_strBottomText, l_arrListTECMessage);
// }} ""
// {{ 160 1 0 "4d84d308_2151_4b96_81ae748d0c611c85" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 161 1 0 "86040fcf_84fd_4805_a92bda39608e8115" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_intReturnValueDialog == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 162 1 0 "aff564f7_1849_4700_b2050eafe1f2f070" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 163 1 0 "86040fcf_84fd_4805_a92bda39608e8115" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 164 1 0 "4ba9425d_3925_4ee4_8dad0688dfaa97ab" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (l_intReturnValueDialog == ASWGLOBAL::DIALOG::OK)
{
// }} ""
// {{ 165 1 0 "56a761b5_ba40_4047_a97d222b85ba44b8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("************  Method will continue - USER confirmed dialog with OK ************"));
// }} ""
// {{ 166 1 0 "4ba9425d_3925_4ee4_8dad0688dfaa97ab" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "_DATA_ShowListDialog" "End"
}
// }} ""
// {{{ 5 "_VersionHistory" "Begin"
private function _VersionHistory(  ) void {
// }} ""
// {{ 5 "_VersionHistory" "InitLocals"
// }} ""
// {{ 168 1 0 "eca7a3fb_782e_4c05_90dee94da727fdf5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      January  31, 2022\nVersion:  0.1\n,\n\n\nVersion Notes:\n\n1. Method created to test Submethod Library\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 169 1 0 "77fae0b1_5f57_4ea5_90a58efca8d12f53" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      May  15, 2023\nVersion:  0.2\n,\n\n\nVersion Notes:\n\n1. traces optimized using ASW trace library\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 170 1 0 "612ed5fc_bebd_4b50_8da433ff752e236a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      August  04, 2023\nVersion:  0.3\n,\n\n\nVersion Notes:\n\n1. introduced legacy HSLSensorLib to adress STARline based systems with HSL Senors\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 171 1 0 "deeeaf8a_ce82_4428_a8b39c0144aa7b0b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      January  02, 2024\nVersion:  0.4.1\n,\n\n\nVersion Notes:\n\n1. cleaned traces\n2. i_ActivateIntegratedAbortHandler integrated in INIT step to define usage of abort handler within the controller\n3. introduced bln success return value to be handed over to the main method\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 172 1 0 "eafb0f48_dd7e_426a_820d88c08a4bfe64" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      January  05, 2024\nVersion:  0.4.2\n,\n\n\nVersion Notes:\n\n1. changed traces in start stop function\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 173 1 0 "7fda2824_4eef_4807_a63dc5c48cae1e4b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      January  05, 2024\nVersion:  0.4.3\n,\n\n\nVersion Notes:\n\n1. insert check simulation mode venus\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 174 1 0 "40765853_15fb_4c0c_8eec017b03e10e19" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      March  06, 2024\nVersion:  0.4.4\n,\n\n\nVersion Notes:\n\n1. new output variable without extension for versioning in Init tab\n\n\n*************************************************************************************************************************************"));
// }} ""
// {{ 175 1 0 "565aad71_4e06_49c8_a9c9d1d9cc4c2fc4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*************************************************************************************************************************************\nMethod:  LiquidWaste_Controller\nBy:          Stephan Grosch, Hamilton Bonaduz AG, Ch\nDate:      March  11, 2024\nVersion:  0.4.5\n,\n\n\nVersion Notes:\n\n1.modyfied tracing of version used\n\n\n*************************************************************************************************************************************"));
// }} ""
// {{{ 5 "_VersionHistory" "End"
}
// }} ""
// {{{ 5 "_CheckSytemConnected" "Begin"
private function _CheckSytemConnected( device & ML_STAR ) void {
// }} ""
private variable l_strDeviceName;
private variable l_strDeviceViewName;
// {{ 5 "_CheckSytemConnected" "InitLocals"
// }} ""
// {{{ 115 1 0 "1088497e_9f65_4f2c_91cecd1f14e1c765" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_strDeviceName = DevGetInstrumentName(ML_STAR);
// }} ""
// {{{ 116 1 0 "5cf09eee_20e1_424e_b59e7b0fff46f56b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
l_strDeviceViewName = DevGetInstrumentViewName(ML_STAR);
// }} ""
// {{ 117 1 0 "b5c56a22_00fd_48c7_b21233d4261e17d5" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
t_intPlatformType = 0;
// }} ""
// {{{ 118 1 0 "56d5e0dc_4440_487d_9c75e27867030fbd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
InstrumentTypeHelper::GetStarType(t_intPlatformType);
// }} ""
// {{{ 119 1 0 "a1c19b5d_a8bf_4681_b67f40cd492c4b2f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_04(TRACE_LEVEL_DEBUG, Translate("l_strDeviceName : "), l_strDeviceName, Translate(" - l_strDeviceViewName : "), l_strDeviceViewName);
// }} ""
// {{{ 120 1 0 "b4f4a2b7_4d3e_464b_b3fa587c35201c15" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::Trace_02(TRACE_LEVEL_DEBUG, Translate(" Platform type 0 = STARline; 1 = STARVline"), t_intPlatformType);
// }} ""
// {{{ 5 "_CheckSytemConnected" "End"
}
// }} ""
/* {{ 2 "SubmethodInsertLine" "" */ // }} ""
// {{{ 2 "LibraryNamespace" "End"
} // library namespace
// }} ""
// $$author=orr_b$$valid=0$$time=2024-10-04 07:18$$checksum=51d76451$$length=082$$
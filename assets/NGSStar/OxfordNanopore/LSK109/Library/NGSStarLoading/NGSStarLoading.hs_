
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 7/21/2020 7:49:29 PM

#pragma once
#ifndef HSL_RUNTIME
namespace NGSSTARLOADING {
function _InitLibrary() { }
function _ExitLibrary() { }
function Add_Indexes_ToCurrentProcess( device & ML_STAR, variable & i_arr_Index1_Name[], variable & i_arr_Index2_Name[], variable & i_arr_Index1_Positions[], variable & i_arr_Index2_Positions[], sequence & i_seq_Template ) void { }
function Add_InputPlate_LoadingPositionOnDeck_ToCurrentProcess( variable i_str_Plate_Name, sequence i_seq_Template, device & ML_STAR ) void { }
function Add_TipsPlatesAndComfortlids_ToCurrentProcess( variable i_int_NumberOfPlates_MIDI, variable i_int_NumberOfPlates_HSP, variable i_int_NumberOfComfortlids, variable i_int_NumberOfTips_1000, variable i_int_NumberOfTips_300, variable i_int_NumberOfTips_50 ) void { }
function Calculate_TotalVolumeAndSequenceToAspirate( device & ML_STAR, variable i_str_ReagentName, variable i_str_ReagentType, variable i_int_NumberOfSamples, variable i_str_LabwareTypeId, variable i_flt_MaximumContainerVolume, variable i_flt_DeadVolumeLabware, variable i_flt_DeadVolumeReagent, sequence & i_seq_Template, variable i_int_StartingPoint, variable i_int_MinimumNumberOfContainers, sequence & o_seqCreated ) void { }
function DATA_HandOverDataToSMT( variable i_strFullPathReportFile, variable i_intARWPlatformUsed, variable i_strKitProvider, variable i_strKitName ) void { }
function Define_VolumePerWell( variable i_str_LiquidName, variable i_flt_VolumePerSample ) variable {  return (0); }
function Define_VolumePerWell_MastermixComponent( variable i_str_MastermixLiquidName, variable i_str_ComponentLiquidName, variable i_flt_VolumePerSample ) void { }
function Display_Error_Dialog( variable i_str_ErrorMessage ) void { }
function Display_InputWorklist_Dialog( variable & o_str_FileWorklistFullPath ) void { }
function Display_Mastermix_Dialog(  ) void { }
function Display_Message_Dialog( variable i_str_ErrorMessage ) void { }
function Display_MultipleChoice_Dialog( variable i_int_DialogID ) void { }
function Display_SelectEmailAddress_Dialog( variable & o_str_EmailAddress ) void { }
function Display_SelectProcesses_Dialog( variable & i_arr_strProcessId[], variable & o_int_StartProcess, variable & o_int_StopProcess, variable & o_arr_blnProcessActivationStatus[] ) void { }
function Display_SelectProcesses_Dialog_BKP( variable & i_arr_strProcessId[], variable & o_int_StartProcess, variable & o_int_StopProcess, variable & o_arr_blnProcessActivationStatus[] ) void { }
function Evaluate_ResourcesByCarrier( device & ML_STAR ) void { }
function Load_Carrier( device & ML_STAR, variable i_str_CarrierID, variable i_bln_SkipLoadingRoutine, variable i_bln_IsItLoadable, variable i_str_ImageFullPath ) variable {  return (0); }
function Load_TipCarrierOnly( device & ML_STAR, variable i_str_CarrierID, variable i_bln_SkipLoadingRoutine ) void { }
function MultipleChoiceDialog_DefineChoiceElement( variable i_int_DialogId, variable i_str_GroupName, variable i_str_Label, variable i_str_ImageFilePath ) void { }
function MultipleChoiceDialog_RetrieveUserSelection( variable i_int_DialogID, variable i_str_GroupName, variable & o_int_OptionSelected ) void { }
function Read_InputWorklist_ExcelOrCSVFormat( variable i_strSamplePlateFile, sequence i_seqSourceALPTemplate, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & o_arrIndex1SeqPositions[], variable & o_arrIndex1IDs[], variable & o_arrIndex2SeqPositions[], variable & o_arrIndex2IDs[], variable & o_arrALPseqLabID[], variable & o_arrALPseqPositions[], variable & o_strIndexLabwareFormat ) void { }
function Retrieve_20mlTrough_ReagentsVolumesAndSequences( variable & o_arr_ReagentNames[], variable & o_arr_ReagentTotalVolumes[], sequence & o_arr_ReagentSequences[] ) void { }
function Retrieve_50mlTrough_ReagentsVolumesAndSequences( variable & o_arr_ReagentNames[], variable & o_arr_ReagentTotalVolumes[], sequence & o_arr_ReagentSequences[] ) void { }
global variable g_arr_DB_fltVolumePerContainer[];
global variable g_arr_DB_strNameForEachReagent[];
global variable g_arr_MastermixComponentsVolumesForDialog[];
global variable g_int_TotalNumberOf1000Tips;
global variable g_arr_strMastermixComponentNames[];
global variable g_arr_DB_MultipleChoiceDialog_ToolTips[];
global variable g_arr_MastermixComponentNamesForDialog[];
global variable g_arr_DB_MultipleChoiceDialog_Labels[];
global variable g_bln_ODTCInUse;
global variable g_int_TotalNumberOfHSP;
global variable g_arr_blnActivationProcessStatus[];
global variable g_arr_DB_strCarrierNamePerContainer[];
global variable g_arr_DB_strReagentTypePerContainer[];
global variable g_arr_fltMastermixComponentsVolumes[];
global sequence g_arr_DB_seqSequenceToAspirateForEachReagent[];
global variable g_str_InputWorklistFilePath;
global variable g_arr_DB_MultipleChoiceDialog_ImageFilePathsPerLabel[];
global variable g_arr_DefineVolume_TotalVolumePerSample[];
global variable g_arr_DB_MultipleChoiceDialog_ImageHeight[];
global variable g_arr_DB_MultipleChoiceDialog_Index[];
global variable g_arr_DB_strLabwareTypePerContainer[];
global variable g_bln_IndexesAreNeeded(0);
global variable g_int_TotalNumberOfComfortLid;
global variable g_arr_DB_strDescriptionVolumePerContainer[];
global variable g_arr_DB_MultipleChoiceDialog_IsSelected[];
global variable g_arr_MastermixNamesForDialog[];
global variable g_arr_DB_MultipleChoiceDialog_LabelIndex[];
global variable g_arr_DB_strPositionIdPerContainer[];
global variable g_arr_DB_MultipleChoiceDialog_ImageWidth[];
global variable g_int_DB_MultipleChoiceDialog_LabelIndex;
global variable g_int_TotalNumberOf300Tips;
global variable g_arr_DB_strReagentNameLabwareTypePerContainer[];
global variable g_arr_DB_MultipleChoiceDialog_IsEditable[];
global variable g_arr_CarrierName[];
global variable g_arr_DB_MultipleChoiceDialog_DialogID[];
global variable g_int_TotalNumberOf50Tips;
global variable g_str_KitProvider;
global variable g_arr_DB_strReagentNamePerContainer[];
global variable g_arr_DB_fltTotalVolumeRequiredForEachReagent[];
global variable g_arr_DefineVolume_LiquidNames[];
global variable g_bln_IndexesOnPlate(0);
global variable g_int_TotalNumberOfMIDI;
global variable g_arr_strMastermixNames[];
global variable g_arr_DB_strLabwareTypeForEachReagent[];
global variable g_arr_CarrierLoadingCondition[];
global variable g_arr_DB_MultipleChoiceDialog_GroupNames[];
global variable g_arr_DB_MultipleChoiceDialog_IsTempSelected[];
global variable g_str_KitName;
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Hamilton$$valid=0$$time=2020-07-21 19:49$$checksum=80d614da$$length=085$$
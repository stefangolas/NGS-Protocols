
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 7/10/2024 1:28:19 PM

#pragma once
#ifndef HSL_RUNTIME
namespace STAR_VOV_GENERIC_FRAMEWORK_V0_2_1 {
function _InitLibrary() { }
function _ExitLibrary() { }
function DATA_ReagentVolumeVerification( device & ML_STAR, sequence & i_arrInputSequences[], variable & o_arrVolumesmeasured[] ) void { }
function INIT_InitializeController( device & ML_STAR, variable i_blnTraceLevel, variable i_blnSkipPipetting, variable i_intReaderPosition, variable i_blnSimulationMode, variable i_strMappingFilePath, variable i_blnSkipTimers ) void { }
function PIP_CleanUpTipAdapter( device & ML_STAR ) void { }
function PIP_MPH_AspirateAll( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent, variable i_fltSpeedFactor ) void { }
function PIP_MPH_AspirateAllForStamp( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent, variable i_fltSpeedFactor ) void { }
function PIP_MPH_EthanolWash( device & ML_STAR, sequence i_seqEthanolPosition, sequence i_seqMIDIPlatePosition, sequence i_seqLiquidWastePosition, variable i_fltEthanolVolume, variable i_fltExtraVolume, variable i_strLiquidClassEthanolAddition, variable i_strLiquidClassFirstRemoval, variable i_strLiquidClassSecondRemoval, variable i_strTrackingFileStatus ) void { }
function PIP_MPH_EthanolWashV2( device & ML_STAR, sequence i_seqEthanolPosition, sequence i_seqMIDIPlatePosition, sequence i_seqLiquidWastePosition, variable i_fltEthanolAdditionVolume, variable i_fltEthanolTotalRemovalVolume, variable i_fltAdditionalRemoval, variable i_strLiquidClassEthanolAddition, variable i_strLiquidClassFirstRemoval, variable i_strLiquidClassSecondRemoval, variable i_strTrackingFileStatus ) void { }
function PIP_MPH_EthanolWashV2_HSP( device & ML_STAR, sequence i_seqEthanolPosition, sequence i_seqMIDIPlatePosition, sequence i_seqLiquidWastePosition, variable i_fltEthanolAdditionVolume, variable i_fltEthanolTotalRemovalVolume, variable i_fltAdditionalRemoval, variable i_strLiquidClassEthanolAddition, variable i_strLiquidClassFirstRemoval, variable i_strLiquidClassSecondRemoval, variable i_strTrackingFileStatus ) void { }
function PIP_MPH_MixPlate( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MPH_MixPlateV2( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intMixCount, variable i_intMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MPH_MixPlateV3( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MPH_MixPlateV4( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent, variable i_intLoopCount ) void { }
function PIP_MPH_RemoveAndSaveSupernatant( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqLiquidWastePosition, variable i_strLiquidClass1, variable i_strLiquidClass2, variable i_fltTotalVolumeInWells, variable i_fltAdditionalRemoval, variable i_strTrackingFileStatus ) void { }
function PIP_MPH_RemoveAndSaveSupernatant_v2( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass1, variable i_fltTotalVolumeInWells, variable i_strTrackingFileStatus ) void { }
function PIP_MPH_RemoveSupernatant( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqLiquidWastePosition, variable i_strLiquidClass1, variable i_strLiquidClass2, variable i_fltTotalVolumeInWells, variable i_fltAdditionalRemoval, variable i_strTrackingFileStatus ) void { }
function PIP_MPH_ShearPlate( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent, variable & i_intLoopCount ) void { }
function PIP_MPH_ShearPlateV2( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent, variable i_intLoopCount ) void { }
function PIP_MPH_SingleDispense( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MPH_SingleDispenseLowElution( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MPH_SingleDispenseSRE( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MPH_TransferAdapters( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_blnLiquidFollowingAspiration, variable i_blnLiquidFollowingDispense, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_strTrackingFileStatus, variable i_blnTransferSampleOrReagent ) void { }
function PIP_MixLiquid( device & iML_Star, variable i_intTipType, sequence iSeq_MixingSequence, variable iAspirationVolume, variable iAspirationSpeed, variable iLoopCycles, variable iWaitingTimeBetweenCyles, variable iMixVolume, variable iMixSpeed, variable iMixCycles ) void { }
function PIP_MixTubes( device & ML_STAR, variable i_intAspirationMode, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltTransferVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_blnReuseTips, variable i_strTrackingFileStatus, variable i_blnIsSampleOrReagent ) void { }
function PIP_MultiDispense( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass, variable i_fltVolume, variable i_fltPreDispenseVolume, variable i_fltPostDispenseVolume, variable i_fltDispenseHeight, variable i_strTrackingFileStatus ) void { }
function PIP_MultiDispense_V2( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass, variable i_fltVolume, variable i_fltPreDispenseVolume, variable i_fltPostDispenseVolume, variable i_fltDispenseHeight, variable i_strTrackingFileStatus, variable i_intDispenseToSource ) void { }
function PIP_MultiDsp_OneChannel( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass, variable i_fltVolume, variable i_fltPreDispenseVolume, variable i_fltPostDispenseVolume, variable i_fltDispenseHeight, variable i_strTrackingFileStatus ) void { }
function PIP_ShearPlate( device & ML_STAR, variable i_intAspirationMode, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltTransferVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_blnReuseTips, variable i_strTrackingFileStatus, variable i_blnIsSampleOrReagent ) void { }
function PIP_SingleDispense( device & ML_STAR, variable i_intAspirationMode, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltTransferVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_blnReuseTips, variable i_strTrackingFileStatus, variable i_blnIsSampleOrReagent ) void { }
function PIP_SingleDispenseLowElution( device & ML_STAR, variable i_intAspirationMode, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltTransferVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_blnReuseTips, variable i_strTrackingFileStatus, variable i_blnIsSampleOrReagent ) void { }
function PIP_SingleDispensePooling( device & ML_STAR, variable i_intAspirationMode, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltTransferVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_blnReuseTips, variable i_strTrackingFileStatus, variable i_blnIsSampleOrReagent, variable i_fltAspVolume, variable i_fltDspVolume ) void { }
function PIP_SingleDispense_pLLD( device & ML_STAR, variable i_intAspirationMode, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_fltTransferVolume, variable i_strLiquidClass, variable i_fltAspirationHeight, variable i_fltDispenseHeight, variable i_intAspirationMixCount, variable i_intAspirationMixVolume, variable i_intDispenseMixCount, variable i_intDispenseMixVolume, variable i_blnReuseTips, variable i_strTrackingFileStatus, variable i_blnIsSampleOrReagent ) void { }
function PIP_SupernatentRemoval( device & ML_STAR, sequence i_seqAspirationPosition, sequence i_seqDispensePosition, variable i_strLiquidClass1, variable i_strLiquidClass2, variable i_fltTotalVolumeInWells, variable i_fltAdditionalRemoval, variable i_strTrackingFileStatus ) void { }
function TIP_DisplayUsage( device & ML_STAR ) void { }
function TIP_EditTipSequences( device & ML_STAR, variable i_blnEditable, variable i_intTipsNeeded1000uL, variable i_intTipsNeeded300uL, variable i_intTipsNeeded50uL ) void { }
function TIP_TipConsolidation( device & ML_STAR ) void { }
function TRP_GripperArm( device & ML_STAR, sequence & i_seqSourcePosition, sequence & i_seqDestinationPosition, variable i_blnParkArm, variable i_blnGripOrientation ) void { }
function TRP_GripperPaddles( device & ML_STAR, sequence i_seqSourcePosition, sequence i_seqDestinationPosition, variable i_blnCheckPlateAtSource, variable i_blnCheckPlateAtDestination, variable i_blnEjectGrippers ) void { }
function _Abstract(  ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=PacificBio$$valid=0$$time=2024-07-10 13:28$$checksum=c9d4dac1$$length=087$$
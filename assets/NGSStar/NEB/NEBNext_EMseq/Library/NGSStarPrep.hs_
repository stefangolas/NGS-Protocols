
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 21.11.2019 17:25:22

#pragma once
#ifndef HSL_RUNTIME
namespace NGSSTARPREP {
function _InitLibrary() { }
function _ExitLibrary() { }
function CPAC_CheckTemperature( variable i_intCPACTemp ) void { }
function CPAC_CheckTemperatureMinimum( variable i_intCPACTemp ) void { }
function CPAC_Init(  ) void { }
function CPAC_SetTemperature( variable i_intCPACTemp ) void { }
function CPAC_Terminate(  ) void { }
function DATA_ReadInputWorklistExcelFormat( variable & io_strSamplePlateFile, sequence & io_seqSourcePlateTemplate, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex1IDs[], variable & io_arrIndex2SeqPositions[], variable & io_arrIndex2IDs[], variable & io_arrALPseqLabID[], variable & io_arrALPseqPositions[], variable & o_IndexLabwareFormat ) void { }
function DATA_ReadNormFile( device & ML_STAR, variable i_strNormalizationFile, variable & o_fltTotalBufferVolume_uL, variable & io_intNumberOfSamples ) void { }
function DATA_ReadSamplePlateFile( variable & io_strSamplePlateFile, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex2SeqPositions[], variable & io_arrALPseqPositions[], variable i_strTempSamplePlateFileName ) void { }
function DATA_ReadSampleSheet( variable & io_strSourceFileSampleSheet, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex2SeqPositions[], variable & io_arrALPseqPositions[], variable i_strTempSampleSheetFileName ) void { }
function HHS_GetTemperature( variable i_intHHS ) void { }
function HHS_Init( variable & o_intHHSDeviceNo1, variable & o_intHHSDeviceNo2, variable & o_intHHSDeviceNo3, variable & o_intHHSDeviceNo4, variable & o_intHHSDeviceNo5 ) void { }
function HHS_SetTemperature( variable i_intHHS, variable i_fltTemperature ) void { }
function HHS_Shake( variable i_intHHS, variable i_intSpeed, variable i_intShakingDuration ) void { }
function HHS_Terminate( variable i_intHHSDeviceNo1, variable i_intHHSDeviceNo2, variable i_intHHSDeviceNo3, variable i_intHHSDeviceNo4, variable i_intHHSDeviceNo5 ) void { }
function HandOverSimulationModeForAllLocalSMTs( variable i_blnSimulationON ) void { }
function LiquidWasteSensor_Init( variable i_intComPort ) void { }
function ODTC_CloseDoor( variable i_IntDeviceNumber ) void { }
function ODTC_DownloadProtocol( variable i_IntDeviceNumber, variable i_strProtocollFullFileName ) void { }
function ODTC_ExecuteProtocol( variable i_IntDeviceNumber, variable i_strProtocollFullFileName, variable i_strNameOfProtocollOnDevice, variable & o_intTimeForProtocol, variable & o_intRequestIDForActiveProtocol, variable i_blnShortenPreheatingMethodsTo40Seconds ) void { }
function ODTC_Init( variable i_strDeviceAddress, variable & o_intDeviceNum, variable i_strLocalIPAdress ) void { }
function ODTC_OpenDoor( variable i_IntDeviceNumber ) void { }
function ODTC_ReadActualTemperature( variable i_IntDeviceNumber, variable i_intTimeForProtocoll ) void { }
function ODTC_Terminate( variable i_intDeviceNum ) void { }
function ODTC_WaitForLidAndBlockCorrectTemperature( variable i_IntDeviceNumber, variable i_RequestedBlockTemperature, variable i_RequestedLidTemperature ) void { }
function ODTC_WaitForStartedProtocolToFinish( variable i_IntDeviceNumber, variable i_intTimeOut, variable i_intRequestIDToWaitFor ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Windows10$$valid=0$$time=2019-11-21 17:25$$checksum=f008e317$$length=086$$
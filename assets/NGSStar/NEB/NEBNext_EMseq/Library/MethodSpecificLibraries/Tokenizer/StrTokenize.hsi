// {{{ 2 "IncludeGuard" "PragmaOnce"
#pragma once
// }} ""
#include "HSLStrLib.hsl"
#include "HSLTrcLib.hsl"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
#include "HSLMETEDLib.hs_"
#include "HSLMECCLib.hs_"
// }} ""
// {{{ 2 "LibraryNamespace" "Begin"
namespace STRTOKENIZE {
// }} ""
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{{ 2 "SubmethodForwardDeclaration" ""
function StrTokenize( variable strIn, variable strDelimiter, variable & arrTokens[], variable bAttendEmptyTokens ) void ;
// }} ""
function _InitLibrary() {
// {{ 2 "AutoInitBlock" ""
// }} ""
}
function _ExitLibrary() {
// {{ 2 "AutoExitBlock" ""
// }} ""
}
// {{{ 5 "StrTokenize" "Begin"
function StrTokenize( variable strIn, variable strDelimiter, variable & arrTokens[], variable bAttendEmptyTokens ) void {
// }} ""
private variable posCurrent;
private variable posLast;
private variable strToAdd;
private variable strEdit;
// {{ 5 "StrTokenize" "InitLocals"
// }} ""
// {{ 1 1 0 "40f83796_e0a6_45fb_bdfac23e9e04e799" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
posCurrent = -1;
// }} ""
// {{ 2 1 0 "cb9a86a9_eff5_461d_b6d8c3a95ff3bde6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
posLast = -1;
// }} ""
// {{ 3 1 0 "42d6b1c8_9878_46e2_bdf0b5cb0397c20b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
strToAdd = "";
// }} ""
// {{ 4 1 0 "34ebdf61_3010_4c32_8dd0622ea91b0234" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
strEdit = strIn;
// }} ""
if( StrGetLength(strEdit) == 0 || StrGetLength(strDelimiter) == 0 )
   return;

posLast = StrGetLength(strEdit);
posCurrent = StrFind(strEdit, strDelimiter);

while (-1 != posCurrent && posLast > 0)
{
   //get tokens before next delimiter char
   strToAdd = StrLeft(strEdit, posCurrent);
   StrTrimRight(strToAdd, "");
   StrTrimLeft (strToAdd, "");

   //add token to our output list
   if( StrGetLength(strToAdd) > 0 )
   {
      arrTokens.AddAsLast(strToAdd);
      //Trace(GetFunctionName(), " adding string to output list: $", strToAdd, "$", "" );
   }
   else
   {
      if( bAttendEmptyTokens )// empty string should also be added
      {
         arrTokens.AddAsLast(strToAdd);
         //Trace(GetFunctionName(), " adding string to output list: $", strToAdd, "$", "" );
      }
   }

   //prepare next loop by removing obsolete characters
   strEdit = StrRight(strEdit, posLast - posCurrent - StrGetLength(strDelimiter) );
   //Trace(GetFunctionName(), " next string = ", strEdit );

   //find next "non-delimiter"
   posCurrent = StrFind(strEdit, strDelimiter);
   posLast = StrGetLength(strEdit);
   //Trace(GetFunctionName(), " next pos = ", posCurrent );

}//end while

//no delimiter left
//add the last part of the string to our output list
if (-1 == posCurrent)// && posLast > 0
{
   if( posLast == 0 && !bAttendEmptyTokens )
      return;

   StrTrimRight(strEdit, "");
   StrTrimLeft (strEdit, "");

   //Trace(GetFunctionName(), " no delimiter left - adding string to output list: $", strEdit, "$", "" );

   arrTokens.AddAsLast(strEdit);
}

// {{{ 5 "StrTokenize" "End"
}
// }} ""
/* {{ 2 "SubmethodInsertLine" "" */ // }} ""
// {{{ 2 "LibraryNamespace" "End"
} // library namespace
// }} ""
// $$author=enriqueb$$valid=0$$time=2015-06-23 20:43$$checksum=10c58c5e$$length=087$$
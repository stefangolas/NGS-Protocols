// {{{ 2 "IncludeGuard" "PragmaOnce"
#pragma once
// }} ""
#include "HslHamHeaterShakerLib.hsl"
#include "HSLStrLib.hsl"
#include "HSLSensorLib.hsl"
#include "HSLInhecoTEC\\HSLInhecoTECLib.hsl"
#include "Inheco ODTC\\Inheco ODTC.hsl"
#include "ASWStandard\\TraceLevel\\TraceLevel.hsl"
#include "HSLMthLib.hsl"
#include "HSLExtensions\\File.hsl"
#include "RemoveTextDelimiters\\RemoveTextDelimitersFromAsciiTextFile.hsl"
#include "HSLSeqLib.hsl"
#include "HSLAppsLib.hsl"
#include "HSLUtilLib2.hsl"
#include "ASWStandard\\ASWGlobal\\ASWGlobal.hsl"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
#include "HSLMETEDLib.hs_"
#include "HSLMECCLib.hs_"
#include "HSLPTLLib.hsl"
// }} ""
// {{{ 2 "LibraryNamespace" "Begin"
namespace NGSSTARPREP {
// }} ""
variable _blnSimulationModeON;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{{ 2 "SubmethodForwardDeclaration" ""
private function Abstract(  ) void ;
function CPAC_CheckTemperature( variable i_intCPACTemp ) void ;
function CPAC_CheckTemperatureMinimum( variable i_intCPACTemp ) void ;
function CPAC_Init(  ) void ;
function CPAC_SetTemperature( variable i_intCPACTemp ) void ;
function CPAC_Terminate(  ) void ;
function DATA_ReadInputWorklistExcelFormat( variable & io_strSamplePlateFile, sequence & io_seqSourcePlateTemplate, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex1IDs[], variable & io_arrIndex2SeqPositions[], variable & io_arrIndex2IDs[], variable & io_arrALPseqLabID[], variable & io_arrALPseqPositions[], variable & o_IndexLabwareFormat ) void ;
function DATA_ReadNormFile( device & ML_STAR, variable i_strNormalizationFile, variable & o_fltTotalBufferVolume_uL, variable & io_intNumberOfSamples ) void ;
function DATA_ReadSamplePlateFile( variable & io_strSamplePlateFile, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex2SeqPositions[], variable & io_arrALPseqPositions[], variable i_strTempSamplePlateFileName ) void ;
function DATA_ReadSampleSheet( variable & io_strSourceFileSampleSheet, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex2SeqPositions[], variable & io_arrALPseqPositions[], variable i_strTempSampleSheetFileName ) void ;
function HHS_GetTemperature( variable i_intHHS ) void ;
function HHS_Init( variable & o_intHHSDeviceNo1, variable & o_intHHSDeviceNo2, variable & o_intHHSDeviceNo3, variable & o_intHHSDeviceNo4, variable & o_intHHSDeviceNo5 ) void ;
function HHS_SetTemperature( variable i_intHHS, variable i_fltTemperature ) void ;
function HHS_Shake( variable i_intHHS, variable i_intSpeed, variable i_intShakingDuration ) void ;
function HHS_Terminate( variable i_intHHSDeviceNo1, variable i_intHHSDeviceNo2, variable i_intHHSDeviceNo3, variable i_intHHSDeviceNo4, variable i_intHHSDeviceNo5 ) void ;
function HandOverSimulationModeForAllLocalSMTs( variable i_blnSimulationON ) void ;
function LiquidWasteSensor_Init( variable i_intComPort ) void ;
function ODTC_CloseDoor( variable i_IntDeviceNumber ) void ;
function ODTC_DownloadProtocol( variable i_IntDeviceNumber, variable i_strProtocollFullFileName ) void ;
function ODTC_ExecuteProtocol( variable i_IntDeviceNumber, variable i_strProtocollFullFileName, variable i_strNameOfProtocollOnDevice, variable & o_intTimeForProtocol, variable & o_intRequestIDForActiveProtocol, variable i_blnShortenPreheatingMethodsTo40Seconds ) void ;
function ODTC_Init( variable i_strDeviceAddress, variable & o_intDeviceNum, variable i_strLocalIPAdress ) void ;
function ODTC_OpenDoor( variable i_IntDeviceNumber ) void ;
function ODTC_ReadActualTemperature( variable i_IntDeviceNumber, variable i_intTimeForProtocoll ) void ;
function ODTC_Terminate( variable i_intDeviceNum ) void ;
function ODTC_WaitForLidAndBlockCorrectTemperature( variable i_IntDeviceNumber, variable i_RequestedBlockTemperature, variable i_RequestedLidTemperature ) void ;
function ODTC_WaitForStartedProtocolToFinish( variable i_IntDeviceNumber, variable i_intTimeOut, variable i_intRequestIDToWaitFor ) void ;
private function _CPAC_ReportErrorText( variable strErrorCode ) void ;
private function _ODTC_HandleReturnValue( variable i_blnSuccess, variable i_strFunctionName, variable i_intReturnValue, variable i_strMessage ) void ;
private function _Version(  ) void ;
// }} ""
function _InitLibrary() {
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
// }} ""
}
function _ExitLibrary() {
// {{ 2 "AutoExitBlock" ""
// }} ""
}
// {{{ 5 "Abstract" "Begin"
private function Abstract(  ) void {
// }} ""
// {{ 5 "Abstract" "InitLocals"
// }} ""
// {{ 1 1 0 "509d7292_b6b0_435c_bae69f362412c872" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("*********************************************************************\nSubmethod Library:  NGSStarPrep\nWritten By:  Stephan Grosch, Hamilton Germany GmbH, Germany, Martinsried\nDate:  October 10, 2017 (By Stephan Grosch)\nVersion:  1.9\n\nVersion Notes:\n1. see _Version\n\n*********************************************************************"));
// }} ""
// {{{ 5 "Abstract" "End"
}
// }} ""
// {{{ 5 "HHS_Init" "Begin"
function HHS_Init( variable & o_intHHSDeviceNo1, variable & o_intHHSDeviceNo2, variable & o_intHHSDeviceNo3, variable & o_intHHSDeviceNo4, variable & o_intHHSDeviceNo5 ) void {
// }} ""
private variable DialogReturn;
private variable loopCounter1;
private dialog customDialog16324C0A7D744f09B0E9D8A02FEC6145;
private dialog customDialog908A24D9FE9148a9A61C024C298883AD;
private variable blnDisableHHS5;
private variable intErrorCodeHHS;
private variable intErrorCodeHHS1;
private variable intErrorCodeHHS2;
private variable intErrorCodeHHS3;
private variable intErrorCodeHHS4;
private variable intErrorCodeHHS5;
// {{ 5 "HHS_Init" "InitLocals"
o_intHHSDeviceNo1 = 0;
o_intHHSDeviceNo2 = 0;
o_intHHSDeviceNo3 = 0;
o_intHHSDeviceNo4 = 0;
o_intHHSDeviceNo5 = 0;
// }} ""
// {{ 350 1 0 "fe50aa2d_6b67_473c_a12af98908532cae" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  HHS_Init <<<<<<<<<<"));
// }} ""
// {{ 351 1 0 "2cb61096_e3f6_4fe1_86ea2fc2d1a46661" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (1 == 1)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{{ 352 1 0 "f0d9d706_4e22_46d1_a2e1447421a79c36" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::SetSimulation(_blnSimulationModeON);
// }} ""
// {{ 353 1 0 "7bf5c12e_3a22_42e5_a6a3bab7ddae01bf" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
blnDisableHHS5 = 0;
// }} ""
// {{ 354 1 0 "cd12f10d_6633_4f25_b4d675b29cb2192a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intErrorCodeHHS = 0;
// }} ""
// {{{ 355 1 0 "ba217922_dbe8_4406_95de40b5c50bb18c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS1 = HSLHamHeaterShaker::CreateUsbDevice(1, o_intHHSDeviceNo1);
// }} ""
// {{{ 356 1 0 "8ca43cb1_3557_472a_b536599a81943c35" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS2 = HSLHamHeaterShaker::CreateUsbDevice(2, o_intHHSDeviceNo2);
// }} ""
// {{{ 357 1 0 "766f1092_4165_4f84_ac721800c05a0c63" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS3 = HSLHamHeaterShaker::CreateUsbDevice(3, o_intHHSDeviceNo3);
// }} ""
// {{{ 358 1 0 "ab4d2225_881b_4d2b_b9e575a826718c4b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS4 = HSLHamHeaterShaker::CreateUsbDevice(4, o_intHHSDeviceNo4);
// }} ""
// {{ 359 1 0 "f4eea505_10dc_4a7d_922609fa215416b8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnDisableHHS5 != 1)
{
// }} ""
// {{{ 360 1 0 "bd84a388_58a6_4b42_90e251664e6ceea9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS5 = HSLHamHeaterShaker::CreateUsbDevice(5, o_intHHSDeviceNo5);
// }} ""
// {{ 361 1 0 "f4eea505_10dc_4a7d_922609fa215416b8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 362 1 0 "305beb61_6bfe_45cd_ae9b14070daf1252" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS1 != 0)
{
// }} ""
Trace ("Error on HHS1:  ", intErrorCodeHHS1);
// {{ 364 1 0 "305beb61_6bfe_45cd_ae9b14070daf1252" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 365 1 0 "d299a61b_3f53_421e_8655f3804122decc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS2 != 0)
{
// }} ""
Trace ("Error on HHS2:  ", intErrorCodeHHS2);
// {{ 367 1 0 "d299a61b_3f53_421e_8655f3804122decc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 368 1 0 "d285d099_6f23_4073_b0e8a37b6a30b8e3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS3 != 0)
{
// }} ""
Trace ("Error on HHS3:  ", intErrorCodeHHS3);
// {{ 370 1 0 "d285d099_6f23_4073_b0e8a37b6a30b8e3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 371 1 0 "4c7dac6b_b6d5_4086_8e4ecb941eff395b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS4 != 0)
{
// }} ""
Trace ("Error on HHS4:  ", intErrorCodeHHS4);
// {{ 373 1 0 "4c7dac6b_b6d5_4086_8e4ecb941eff395b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 374 1 0 "99b21db9_e3ea_4318_bdcd36d1590f70f1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnDisableHHS5 != 1)
{
// }} ""
// {{ 375 1 0 "1eeae52d_e5c9_4545_b9cca4bc4926ab24" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS5 != 0)
{
// }} ""
Trace ("Error on HHS5:  ", intErrorCodeHHS5);
// {{ 377 1 0 "1eeae52d_e5c9_4545_b9cca4bc4926ab24" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 378 1 0 "99b21db9_e3ea_4318_bdcd36d1590f70f1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
intErrorCodeHHS = intErrorCodeHHS1 + intErrorCodeHHS2 + intErrorCodeHHS3 + intErrorCodeHHS4 + intErrorCodeHHS5;
// {{ 380 1 0 "e60bc498_0df3_4566_a42b4b5e491f361d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS > 0)
{
// }} ""
// {{ 381 1 0 "45a943a9_4c99_450a_9a968dcdb170d7ae" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n\nHHS Error codes:\n1 - Fatal Error\n2 - Node not Initialized\n3 - Device not connected\n4 - CAN error\n5 - EEProm error\n6 - Unknown command\n7 - Unknown parameter\n8 - Parameter out of range\n9 - Voltage error\n10 - Stop \n11 - Wrong address\n13 - Shaker init failed\n14 - Shaker not initialized\n15 - Shaker step loss\n17 - Plate lock init failure\n18 - Plate lock step loss\n26 - Unknown firmware error\n\n"));
// }} ""
// {{ 382 1 0 "1e68892c_dcd7_4120_bcc27e8f733d5665" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog908A24D9FE9148a9A61C024C298883AD.InitCustomDialog( "1e68892c_dcd7_4120_bcc27e8f733d5665" );
customDialog908A24D9FE9148a9A61C024C298883AD.SetCustomDialogProperty( "textBlock3.Text", intErrorCodeHHS );
customDialog908A24D9FE9148a9A61C024C298883AD.ShowCustomDialog();
DialogReturn = customDialog908A24D9FE9148a9A61C024C298883AD.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 383 1 0 "9c2d3571_e21e_40c2_8e74f2c68453d2b3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (DialogReturn == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 384 1 0 "6d2774e5_9649_4ea9_98ab4ea1a95b9379" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 385 1 0 "9c2d3571_e21e_40c2_8e74f2c68453d2b3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 386 1 0 "e60bc498_0df3_4566_a42b4b5e491f361d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 387 1 0 "dbc08acc_93ed_4585_9f11368e0474923f" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 388 1 0 "e60bc498_0df3_4566_a42b4b5e491f361d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 389 1 0 "2cb61096_e3f6_4fe1_86ea2fc2d1a46661" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 390 1 0 "53000482_a125_4447_912dc9069b498487" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS1 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo1, 1);
// }} ""
// {{{ 391 1 0 "7c0b10dd_bce4_4fe3_9d90698a5a6d320f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS1 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo1, 0);
// }} ""
// {{{ 392 1 0 "3f26f97b_1c21_4974_afe726384b750466" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS2 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo2, 1);
// }} ""
// {{{ 393 1 0 "c1bb60da_fc03_45be_81415627ed974840" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS2 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo2, 0);
// }} ""
// {{{ 394 1 0 "26d77072_7cc8_4e27_af8d93b347ed3dbb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS3 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo3, 1);
// }} ""
// {{{ 395 1 0 "5b982ee9_4570_40e3_ac0da1099ff7eae8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS3 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo3, 0);
// }} ""
// {{{ 396 1 0 "b79856ad_6534_471c_889598539ce6c7f8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS4 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo4, 1);
// }} ""
// {{{ 397 1 0 "e1cf61f6_882f_417b_b1fdc5c00a5190f3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS4 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo4, 0);
// }} ""
// {{ 398 1 0 "ae1e5b14_a8b3_4d3d_ab9e66aad2937c60" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnDisableHHS5 != 1)
{
// }} ""
// {{{ 399 1 0 "9cfe9ce1_ceac_4c30_bb62b87155e66d02" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS5 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo5, 1);
// }} ""
// {{{ 400 1 0 "7c0ff546_4ffa_4a0f_9ff39b1e068c65f6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intErrorCodeHHS5 = HSLHamHeaterShaker::SetPlateLock(o_intHHSDeviceNo5, 0);
// }} ""
// {{ 401 1 0 "ae1e5b14_a8b3_4d3d_ab9e66aad2937c60" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 402 1 0 "825485d2_1dbc_4b02_b8aa4cc3fc088c00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS1 != 0)
{
// }} ""
Trace ("Error on HHS1:  ", intErrorCodeHHS1);
// {{ 404 1 0 "825485d2_1dbc_4b02_b8aa4cc3fc088c00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 405 1 0 "60ec6d14_9545_43e1_b75841b3c3a2e10d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS2 != 0)
{
// }} ""
Trace ("Error on HHS2:  ", intErrorCodeHHS2);
// {{ 407 1 0 "60ec6d14_9545_43e1_b75841b3c3a2e10d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 408 1 0 "3e0035f0_aa87_4a7a_a78aa93b4cbf3735" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS3 != 0)
{
// }} ""
Trace ("Error on HHS3:  ", intErrorCodeHHS3);
// {{ 410 1 0 "3e0035f0_aa87_4a7a_a78aa93b4cbf3735" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 411 1 0 "c2860307_0239_433b_b33609d5ee34ccc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS4 != 0)
{
// }} ""
Trace ("Error on HHS4:  ", intErrorCodeHHS4);
// {{ 413 1 0 "c2860307_0239_433b_b33609d5ee34ccc0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 414 1 0 "2997f4fc_0667_4ce5_b9dfbd624fab323b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnDisableHHS5 != 1)
{
// }} ""
// {{ 415 1 0 "f1169005_8d6b_41c8_9c0b313e06ac820e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS5 != 0)
{
// }} ""
Trace ("Error on HHS5:  ", intErrorCodeHHS5);
// {{ 417 1 0 "f1169005_8d6b_41c8_9c0b313e06ac820e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 418 1 0 "2997f4fc_0667_4ce5_b9dfbd624fab323b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
intErrorCodeHHS = intErrorCodeHHS1 + intErrorCodeHHS2 + intErrorCodeHHS3 + intErrorCodeHHS4 + intErrorCodeHHS5;
// {{ 420 1 0 "e400bc6e_64a4_40df_8925b4bb99943104" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intErrorCodeHHS > 0)
{
// }} ""
// {{ 421 1 0 "b306da4e_b131_4c0b_ada94ce5b4535084" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n\nHHS Error codes:\n1 - Fatal Error\n2 - Node not Initialized\n3 - Device not connected\n4 - CAN error\n5 - EEProm error\n6 - Unknown command\n7 - Unknown parameter\n8 - Parameter out of range\n9 - Voltage error\n10 - Stop \n11 - Wrong address\n13 - Shaker init failed\n14 - Shaker not initialized\n15 - Shaker step loss\n17 - Plate lock init failure\n18 - Plate lock step loss\n26 - Unknown firmware error\n\n"));
// }} ""
// {{ 422 1 0 "3f74cea7_3ec8_4d34_9638b8054396db4f" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog16324C0A7D744f09B0E9D8A02FEC6145.InitCustomDialog( "3f74cea7_3ec8_4d34_9638b8054396db4f" );
customDialog16324C0A7D744f09B0E9D8A02FEC6145.SetCustomDialogProperty( "textBlock3.Text", intErrorCodeHHS );
customDialog16324C0A7D744f09B0E9D8A02FEC6145.ShowCustomDialog();
DialogReturn = customDialog16324C0A7D744f09B0E9D8A02FEC6145.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 423 1 0 "069229ff_2fa1_481f_8df577782d40e9f1" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 424 1 0 "e400bc6e_64a4_40df_8925b4bb99943104" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 425 1 0 "2f579893_6887_4ac2_9972aef7c71dc6fb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: HHS_Init <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "HHS_Init" "End"
}
// }} ""
// {{{ 5 "CPAC_Init" "Begin"
function CPAC_Init(  ) void {
// }} ""
private variable answer_CPACerror;
private dialog customDialog3A389BA63BB14e14A6078A50EA039612;
private dialog customDialog538033F6F25E4b3989DA13B8FC5C4CA3;
private variable answer_CPACcheck;
private variable strInitCPAC;
private variable strErrorCode;
private variable strErrorText;
private variable strFirmWareVersion;
private variable strLastError;
// {{ 5 "CPAC_Init" "InitLocals"
// }} ""
// {{ 45 1 0 "43be9ef0_2e4f_49cf_811ade04da5dde4f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Start Submethod : CPAC_Init <<<<<<<<<<"));
// }} ""
// {{{ 46 1 0 "6470a343_0dfa_4d2e_8bd06643dbf37cab" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::Initialize(0, _blnSimulationModeON, strInitCPAC);
// }} ""
// {{ 47 1 0 "7883ee8a_178f_483a_bb6a16ce7138d8ad" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == 0)
{
// }} ""
// {{ 48 1 0 "2756812a_cf20_4775_ba4ad7bd931574f0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (strInitCPAC != "000")
{
// }} ""
// {{{ 49 1 0 "6e711abb_a660_4ecd_8431692d53f5d7bd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetLastError(strLastError);
// }} ""
// {{ 50 1 0 "ba47fa10_4aae_4dda_b1b9bbcb96b522fb" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog538033F6F25E4b3989DA13B8FC5C4CA3.InitCustomDialog( "ba47fa10_4aae_4dda_b1b9bbcb96b522fb" );
customDialog538033F6F25E4b3989DA13B8FC5C4CA3.SetCustomDialogProperty( "textBlock3.Text", strLastError );
customDialog538033F6F25E4b3989DA13B8FC5C4CA3.ShowCustomDialog();
answer_CPACcheck = customDialog538033F6F25E4b3989DA13B8FC5C4CA3.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{{ 51 1 0 "19b7bbd9_b640_4330_95a80ca37b38c9c7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::Initialize(0, 0, strInitCPAC);
// }} ""
// {{ 52 1 0 "cb26ea7b_6241_45a0_a31c98d1f376deec" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (strInitCPAC != "000")
{
// }} ""
// {{{ 53 1 0 "d36901f6_54f6_4a82_bb2752b55819413a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetDescriptionForErrorCode(strInitCPAC, strErrorText);
// }} ""
// {{ 54 1 0 "e31a2359_7bd8_4c97_900630c37e24008b" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog3A389BA63BB14e14A6078A50EA039612.InitCustomDialog( "e31a2359_7bd8_4c97_900630c37e24008b" );
customDialog3A389BA63BB14e14A6078A50EA039612.SetCustomDialogProperty( "textBlock3.Text", strErrorText );
customDialog3A389BA63BB14e14A6078A50EA039612.ShowCustomDialog();
answer_CPACcheck = customDialog3A389BA63BB14e14A6078A50EA039612.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 55 1 0 "489bdcf5_fbba_41bb_96813cc7ddac0e44" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACerror == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 56 1 0 "3ebecf1c_af68_49fe_9a0833e9a89cc59b" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 57 1 0 "489bdcf5_fbba_41bb_96813cc7ddac0e44" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 58 1 0 "7acd77cd_c53b_4945_b1be088ce8b2395e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACerror == ASWGLOBAL::DIALOG::IGNORE)
{
// }} ""
// {{ 59 1 0 "5852c25f_20a9_4c20_b20e6e4535b4d3ea" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("************ WARNING! Method will continue with the CPAC not working correctly ************"));
// }} ""
// {{ 60 1 0 "7acd77cd_c53b_4945_b1be088ce8b2395e" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 61 1 0 "cb26ea7b_6241_45a0_a31c98d1f376deec" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 62 1 0 "2756812a_cf20_4775_ba4ad7bd931574f0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 63 1 0 "f87ac9ab_69f4_4404_8c995e745ae87f5b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::SetTraceLevel(1);
// }} ""
// {{{ 64 1 0 "8a701d9f_9821_4a98_9e6cb446b7c96195" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetFirmwareVersion(0, 1, strFirmWareVersion, strErrorCode);
// }} ""
Trace ("Firmware version for CPAC:  ", strFirmWareVersion);
// {{{ 66 1 0 "d7c9ace1_2240_4996_a0b873c4b4a910c1" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
// {{ 67 1 0 "7883ee8a_178f_483a_bb6a16ce7138d8ad" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 68 1 0 "b9a9197d_a55d_44f2_bcaf56a2d18d025c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - CPAC INIT simulated"));
// }} ""
// {{ 69 1 0 "7883ee8a_178f_483a_bb6a16ce7138d8ad" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 70 1 0 "195eecab_e8d8_4c0e_b0e77e2e8649de0b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete : CPAC_Init <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "CPAC_Init" "End"
}
// }} ""
// {{{ 5 "HHS_Shake" "Begin"
function HHS_Shake( variable i_intHHS, variable i_intSpeed, variable i_intShakingDuration ) void {
// }} ""
private timer Shaking;
private variable fltActualShakingDurationHHS;
private variable intCheckForEarlyStop;
// {{ 5 "HHS_Shake" "InitLocals"
// }} ""
// {{ 441 1 0 "41dbbc29_a367_4edd_8cc67d2f91cdf08c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  HHS_Shake <<<<<<<<<<"));
// }} ""
Trace ("***** Now shaking on HHS", i_intHHS, " at ", i_intSpeed, "rpm for ", i_intShakingDuration, "seconds..."); 
// {{ 443 1 0 "7fbb9222_d0f0_46d3_8f21e7bee49d35ee" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 444 1 0 "717e06c5_53b2_4873_838e982d86b50fde" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StartShaker(i_intHHS, i_intSpeed);
// }} ""
// {{ 445 1 0 "95a29e2a_1069_4bfe_b5f352705f637f45" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == Shaking.SetTimer(i_intShakingDuration) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 446 1 0 "ec952522_d2bd_4568_b18c2e8aaa02bc39" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
intCheckForEarlyStop = Shaking.WaitTimer(hslTrue, hslTrue);
if (0 == intCheckForEarlyStop)
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 447 1 0 "399880f8_833f_4ede_baf13c62970e9c69" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intCheckForEarlyStop == 3)
{
// }} ""
// {{ 448 1 0 "638d6382_e328_4df5_8a3af26febdc2285" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** WARNING!  The shaking was stopped prematurely by the operator! *****"));
// }} ""
// {{ 449 1 0 "399880f8_833f_4ede_baf13c62970e9c69" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 450 1 0 "ad9de68c_3cca_420c_8dfb9ad323cddbdc" "{B31F3540-5D80-11d4-A5EB-0050DA737D89}"
fltActualShakingDurationHHS = Shaking.GetElapsedTime();
// }} ""
Trace ("***** Actual Shaking Duration (seconds):  ", fltActualShakingDurationHHS);
// {{{ 452 1 0 "5e65cd45_8584_4180_9b56b57ad60d1583" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopShaker(i_intHHS);
// }} ""
// {{ 453 1 0 "7fbb9222_d0f0_46d3_8f21e7bee49d35ee" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 454 1 0 "fe5220d3_1af3_4db3_9dc975fcb84baf5c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - HHS SHAKE simulated"));
// }} ""
// {{ 455 1 0 "7fbb9222_d0f0_46d3_8f21e7bee49d35ee" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 456 1 0 "d46349d9_7e8e_4914_ba2c3aebf8201784" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  HHS_Shake <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "HHS_Shake" "End"
}
// }} ""
// {{{ 5 "HHS_SetTemperature" "Begin"
function HHS_SetTemperature( variable i_intHHS, variable i_fltTemperature ) void {
// }} ""
// {{ 5 "HHS_SetTemperature" "InitLocals"
// }} ""
// {{ 427 1 0 "7ba6893c_0032_4de6_be36dd7f545d1349" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  HHS_SetTemperature <<<<<<<<<<"));
// }} ""
// {{ 428 1 0 "34934c0f_05eb_49fa_ae897183d32cc0e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 429 1 0 "4f1ca8ee_1390_4e29_bf3305f8a7a52a33" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(i_intHHS);
// }} ""
// {{ 430 1 0 "b6a70e5f_1e46_40b1_bcebace29d071de2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_fltTemperature != 0)
{
// }} ""
Trace ("***** HHS number ", i_intHHS, " is being set to ", i_fltTemperature, " C");
// {{{ 432 1 0 "be7f8512_9250_4374_a4c249e079beb0fc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StartTempCtrl(i_intHHS, i_fltTemperature, 0);
// }} ""
// {{ 433 1 0 "b6a70e5f_1e46_40b1_bcebace29d071de2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
Trace ("***** HHS number ", i_intHHS, " is not being controlled, as it is desired to be at room temperature.");
// {{ 435 1 0 "b6a70e5f_1e46_40b1_bcebace29d071de2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 436 1 0 "34934c0f_05eb_49fa_ae897183d32cc0e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 437 1 0 "33a4d691_1185_4848_a6937b22b19fe91b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - HHS set temperature"));
// }} ""
// {{ 438 1 0 "34934c0f_05eb_49fa_ae897183d32cc0e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 439 1 0 "58d5ab49_4ae6_43e1_b2579ada46a0ac3e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  HHS_SetTemperature <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "HHS_SetTemperature" "End"
}
// }} ""
// {{{ 5 "HHS_Terminate" "Begin"
function HHS_Terminate( variable i_intHHSDeviceNo1, variable i_intHHSDeviceNo2, variable i_intHHSDeviceNo3, variable i_intHHSDeviceNo4, variable i_intHHSDeviceNo5 ) void {
// }} ""
// {{ 5 "HHS_Terminate" "InitLocals"
// }} ""
// {{ 458 1 0 "5f07e86b_cd2c_41b0_bc2eac0d403e6edb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod: HHS_Terminate <<<<<<<<<<"));
// }} ""
// {{ 459 1 0 "99b657fe_943a_4e62_8e1f132b18b1713a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{ 460 1 0 "3e4314c5_fc15_4fd9_b13792b385d4a33d" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 461 1 0 "07c6e5c1_e1a1_4bc7_82bbd8fdf445906c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopAllShaker();
// }} ""
// {{ 462 1 0 "3e4314c5_fc15_4fd9_b13792b385d4a33d" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 463 1 0 "860f334f_6ebb_4c7a_b21a1ae4b18a464c" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
Trace ("***** All HHS are not being controlled, as it is desired to be at room temperature.");
// {{ 465 1 0 "4ab9a684_fbca_41b5_bfac27fd11535a13" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_intHHSDeviceNo1 != ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 466 1 0 "5550a6cb_c977_4131_9c8c3ccb39c3cdfa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(i_intHHSDeviceNo1);
// }} ""
// {{ 467 1 0 "4ab9a684_fbca_41b5_bfac27fd11535a13" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 468 1 0 "797fd320_695a_4205_a3c9f8d7a94bf096" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_intHHSDeviceNo2 != ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 469 1 0 "7fe14f4f_7d2f_4d1b_bd7d34bab4dcbc8c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(i_intHHSDeviceNo2);
// }} ""
// {{ 470 1 0 "797fd320_695a_4205_a3c9f8d7a94bf096" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 471 1 0 "aba5e4e3_d28e_4b83_9d7dd71c5c6031c6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_intHHSDeviceNo3 != ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 472 1 0 "a6ef34d2_9503_468a_abe8d73165a83d20" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(i_intHHSDeviceNo3);
// }} ""
// {{ 473 1 0 "aba5e4e3_d28e_4b83_9d7dd71c5c6031c6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 474 1 0 "5be3adb5_8cf7_413d_860b78e878dceee8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_intHHSDeviceNo4 != ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 475 1 0 "d6e661c7_3dc0_47d9_a86d1334899b6507" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(i_intHHSDeviceNo4);
// }} ""
// {{ 476 1 0 "5be3adb5_8cf7_413d_860b78e878dceee8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 477 1 0 "0c28ced3_c4d5_496e_8f7736d115c37932" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_intHHSDeviceNo5 != ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 478 1 0 "86cf0b37_59a5_4a43_89491b4b27909278" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(i_intHHSDeviceNo5);
// }} ""
// {{ 479 1 0 "0c28ced3_c4d5_496e_8f7736d115c37932" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 480 1 0 "860f334f_6ebb_4c7a_b21a1ae4b18a464c" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 481 1 0 "d47da660_cd53_4d10_bffc06d519fd359f" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 482 1 0 "79bf51ca_4638_49d5_a558e74f3e74ceae" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::Terminate();
// }} ""
// {{ 483 1 0 "d47da660_cd53_4d10_bffc06d519fd359f" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 484 1 0 "99b657fe_943a_4e62_8e1f132b18b1713a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 485 1 0 "55176363_7657_49f4_95f8217119dc0c82" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - Termination simulated"));
// }} ""
// {{ 486 1 0 "99b657fe_943a_4e62_8e1f132b18b1713a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 487 1 0 "f2d90106_fe52_4736_933e7575619ae7ca" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: HHS_Terminate <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "HHS_Terminate" "End"
}
// }} ""
// {{{ 5 "CPAC_SetTemperature" "Begin"
function CPAC_SetTemperature( variable i_intCPACTemp ) void {
// }} ""
private variable fltCPACTemperature;
private variable fltActualTemperatureCPAC;
private variable strErrorCode;
// {{ 5 "CPAC_SetTemperature" "InitLocals"
// }} ""
// {{ 72 1 0 "c6922b9d_3516_48e3_af9f3d5b8cc747a0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  CPAC_SetTemperature <<<<<<<<<<"));
// }} ""
// {{ 73 1 0 "85b94b4a_8b28_470a_b0f6ce550ce93ea2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 74 1 0 "8083477d_aa0e_471f_aa3bc1fd68443262" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, 1, 1, fltActualTemperatureCPAC, strErrorCode);
// }} ""
Trace ("Current CPAC Temperature (in tenths of degrees):  ", fltActualTemperatureCPAC);
// {{{ 76 1 0 "cb8ac8d5_2d83_4375_9cb49110de6f8fc9" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
// {{ 77 1 0 "8bbd2253_0229_45b8_a04d01ff77c003e4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 78 1 0 "ef2ea7d5_c49f_4787_9f19f8001e9e1946" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltCPACTemperature = i_intCPACTemp / (1.0 * 1.0);
// }} ""
// {{{ 79 1 0 "3c537bd5_27e0_4869_b6424f2ed0587693" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::SetTargetTemperature(0, 1, fltCPACTemperature, strErrorCode);
// }} ""
// {{{ 80 1 0 "46ee75aa_ee1b_4ff0_922479c3c8d04e16" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
Trace ("CPAC Temperature float variable set to:  ", fltCPACTemperature);

// {{{ 82 1 0 "edc03af2_dc58_4ec3_87611f2c5bf94cca" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::StartTemperatureControl(0, 1, strErrorCode);
// }} ""
// {{{ 83 1 0 "62268f57_cbc2_4ee1_ab4a6241bfda2663" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
// {{ 84 1 0 "85b94b4a_8b28_470a_b0f6ce550ce93ea2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 85 1 0 "86f636c4_c62a_4137_9160b9ecd61664b1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - CPAC set temperature"));
// }} ""
// {{ 86 1 0 "85b94b4a_8b28_470a_b0f6ce550ce93ea2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 87 1 0 "375bb2ff_2b93_44fe_9e3e0e7e38be53c1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  CPAC_SetTemperature <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "CPAC_SetTemperature" "End"
}
// }} ""
// {{{ 5 "CPAC_Terminate" "Begin"
function CPAC_Terminate(  ) void {
// }} ""
private variable strErrorCode;
private variable blnTerminate;
// {{ 5 "CPAC_Terminate" "InitLocals"
// }} ""
// {{ 89 1 0 "a725a992_fb26_439c_be6a8554cb9693b0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod: CPAC_Terminate <<<<<<<<<<"));
// }} ""
// {{ 90 1 0 "a4940bb8_c268_47a8_aef44b121cd6eaf8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 91 1 0 "c6226424_e3d4_48b8_b8706ad32d4b0507" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::StopTemperatureControl(0, 1, strErrorCode);
// }} ""
// {{{ 92 1 0 "962c85cb_9d00_468e_89a5c64d8dfd055f" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 93 1 0 "00a75f63_b253_4108_98c6a851aee5b1cf" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::Terminate(1);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{{ 94 1 0 "ac9afa08_6b00_4975_8ea6bc1cc947dde8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnTerminate = HSLInhecoTECLib::Terminate(1);
// }} ""
// {{ 95 1 0 "a4940bb8_c268_47a8_aef44b121cd6eaf8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 96 1 0 "0bf7c5dd_dfc9_4ec7_803227f1b5f8b442" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - CPAC termination"));
// }} ""
// {{ 97 1 0 "a4940bb8_c268_47a8_aef44b121cd6eaf8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 98 1 0 "ee5c9292_93a7_4a2b_9cef0926294bf0c8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: CPAC_Terminate <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "CPAC_Terminate" "End"
}
// }} ""
// {{{ 5 "LiquidWasteSensor_Init" "Begin"
function LiquidWasteSensor_Init( variable i_intComPort ) void {
// }} ""
private variable DialogReturn;
private variable strTextblock;
private dialog customDialog27DDD85129FC48f8B1CBA186ED304F8A;
private dialog customDialogA8A08B2E95CA47398C6500F9A9481611;
private variable IntEndlessLoopCounter;
private variable intSuccsess;
private variable blnSolidWasteContainerIsPresent;
private variable blnStartMonitoringStarted;
private variable blnRetValue;
private dialog customDialog890602527646469681D4DB14AACC9B2E;
private variable intSensorStatus;
// {{ 5 "LiquidWasteSensor_Init" "InitLocals"
// }} ""
// {{ 494 1 0 "8c29134a_8e0d_4633_9dc366ec740218eb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  LiquidWasteSensor_Init <<<<<<<<<<"));
// }} ""
// {{ 495 1 0 "811a8722_f5e0_41b7_ae87afe5eee6bea9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 496 1 0 "2171742f_98f9_4c47_b15de11b010c65f7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnRetValue = SensorLib::Initialize(i_intComPort);
// }} ""
Trace ("------- return value of INIT Sensor: ", blnRetValue);

// {{ 498 1 0 "70aab027_8582_4f54_9f76109304b2c658" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnRetValue == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
Trace ("------- com port: ", i_intComPort);

// {{ 500 1 0 "f1612fb9_e58e_4174_b6ec40047d2aa49e" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
blnStartMonitoringStarted = ASWGLOBAL::BOOL::FALSE;
// }} ""
// {{ 501 1 0 "570fee95_e808_414a_8963357d000f315a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
IntEndlessLoopCounter = 0;
while (1 == 1)
{
IntEndlessLoopCounter = IntEndlessLoopCounter + 1;
// }} ""
// {{ 502 1 0 "724a1806_a282_4eae_a51b54663112a8fc" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intSuccsess = 0;
// }} ""
// {{{ 503 1 0 "0779bdb6_8250_4509_9dee1118ffef3f6a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intSensorStatus = SensorLib::CheckLiquid();
// }} ""
// {{ 504 1 0 "007c2138_3c6f_4a5e_bf450eede8969353" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intSensorStatus == 0)
{
// }} ""
// {{ 505 1 0 "bd05afad_a00b_48b2_b5a9cd92da5d1f51" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
strTextblock = Translate("Sensor activated. Liquid level reached the maximum level.    Or check cable connection to senor.");
// }} ""
// {{ 506 1 0 "eb8bfcc0_de9f_4613_926e615a223b0ac1" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog27DDD85129FC48f8B1CBA186ED304F8A.InitCustomDialog( "eb8bfcc0_de9f_4613_926e615a223b0ac1" );
customDialog27DDD85129FC48f8B1CBA186ED304F8A.SetCustomDialogProperty( "textBlock3.Text", strTextblock );
customDialog27DDD85129FC48f8B1CBA186ED304F8A.ShowCustomDialog();
DialogReturn = customDialog27DDD85129FC48f8B1CBA186ED304F8A.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 507 1 0 "230941af_8372_4618_964e0d4093fa99c0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (DialogReturn == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 508 1 0 "d5c3ea10_b58c_47b4_9bc6a7de780ba996" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 509 1 0 "230941af_8372_4618_964e0d4093fa99c0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 510 1 0 "007c2138_3c6f_4a5e_bf450eede8969353" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
Trace ("------- Check liquid waste senor has been perfomed: Liquid level below maximum of carboy.");

// {{ 512 1 0 "45dc398a_7ffe_447b_86829017f150244e" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
intSuccsess = intSuccsess + 1;
// }} ""
// {{ 513 1 0 "007c2138_3c6f_4a5e_bf450eede8969353" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 514 1 0 "e113ffd0_ab09_4884_b1dd6feb285f1c02" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnSolidWasteContainerIsPresent = SensorLib::CheckSolidWaste();
// }} ""
Trace ("------- blnSolidWasteContainerIsPresent: ", blnSolidWasteContainerIsPresent);

// {{ 516 1 0 "b065277e_e878_4613_b6c8873f779c413c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnSolidWasteContainerIsPresent == 0)
{
// }} ""
// {{ 517 1 0 "12526d82_f756_4a17_90ec7cc97116e8bd" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
strTextblock = Translate("Sensor activated. Solid waste not present.");
// }} ""
// {{ 518 1 0 "6f168494_00ba_4fdb_9bac76a2623cd365" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialogA8A08B2E95CA47398C6500F9A9481611.InitCustomDialog( "6f168494_00ba_4fdb_9bac76a2623cd365" );
customDialogA8A08B2E95CA47398C6500F9A9481611.SetCustomDialogProperty( "textBlock3.Text", strTextblock );
customDialogA8A08B2E95CA47398C6500F9A9481611.ShowCustomDialog();
DialogReturn = customDialogA8A08B2E95CA47398C6500F9A9481611.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 519 1 0 "c7b1511b_e056_471d_957643edb8366e0b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (DialogReturn == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 520 1 0 "330dd3ed_65ac_4682_9aa35355fc0c3681" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 521 1 0 "c7b1511b_e056_471d_957643edb8366e0b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 522 1 0 "b065277e_e878_4613_b6c8873f779c413c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
Trace ("------- Check solid waste senor has been perfomed: solid waste is present.");

// {{ 524 1 0 "a6b34904_1c6d_4d17_af2068ff01e16f32" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
intSuccsess = intSuccsess + 1;
// }} ""
// {{ 525 1 0 "b065277e_e878_4613_b6c8873f779c413c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 526 1 0 "24f52eb1_a1ba_465c_8828dc7f4f3babba" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intSuccsess == 2)
{
// }} ""
// {{ 527 1 0 "4ccf6c13_7735_4560_97c488b730bb3d85" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Liquid waste below maximum AND solid waste present --> loop break activated.\n"));
// }} ""
// {{ 528 1 0 "84bec3e0_3cb0_4a4f_99177d2ad796786d" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 529 1 0 "24f52eb1_a1ba_465c_8828dc7f4f3babba" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("------- IntEndlessLoopCounter: ", IntEndlessLoopCounter);

// {{ 531 1 0 "570fee95_e808_414a_8963357d000f315a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 532 1 0 "70aab027_8582_4f54_9f76109304b2c658" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
Trace ("------- Init liquid / solid waste senor has been perfomed: No comunication --> check com port settings. Or restart computer and powerswitch MLStar");

// {{ 534 1 0 "494012e8_d185_4072_84870b50bbd832e9" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog890602527646469681D4DB14AACC9B2E.InitCustomDialog( "494012e8_d185_4072_84870b50bbd832e9" );
customDialog890602527646469681D4DB14AACC9B2E.ShowCustomDialog();
DialogReturn = customDialog890602527646469681D4DB14AACC9B2E.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 535 1 0 "11ea1785_e3f8_46dd_9058672da5642db4" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 536 1 0 "70aab027_8582_4f54_9f76109304b2c658" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 537 1 0 "811a8722_f5e0_41b7_ae87afe5eee6bea9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
Trace ("------- Check liquid / solid waste senor has been perfomed in simulation mode: Liquid level below maximum of carboy and solid waste is present.");

// {{ 539 1 0 "811a8722_f5e0_41b7_ae87afe5eee6bea9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 540 1 0 "4f70c9e8_6b58_4562_b2c7b15ffb579b7f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  LiquidWasteSensor_Init <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "LiquidWasteSensor_Init" "End"
}
// }} ""
// {{{ 5 "_CPAC_ReportErrorText" "Begin"
private function _CPAC_ReportErrorText( variable strErrorCode ) void {
// }} ""
private variable strDecodedErrorText;
// {{ 5 "_CPAC_ReportErrorText" "InitLocals"
// }} ""
// {{ 716 1 0 "30b58dda_0ca4_4673_a40c0a09532592ec" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (strErrorCode != "TEC_0")
{
// }} ""
// {{ 717 1 0 "abdceca3_8182_4b91_8a4423337421d480" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (strErrorCode != "000")
{
// }} ""
// {{{ 718 1 0 "5e260902_e53b_4f7b_817eb6732811746e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetDescriptionForErrorCode(strErrorCode, strDecodedErrorText);
// }} ""
Trace ("CPAC ERROR CODE:  ", strErrorCode);
Trace ("CPAC ERROR DECODED MESSSAGE:  ", strDecodedErrorText);
// {{ 720 1 0 "abdceca3_8182_4b91_8a4423337421d480" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 721 1 0 "30b58dda_0ca4_4673_a40c0a09532592ec" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "_CPAC_ReportErrorText" "End"
}
// }} ""
// {{{ 5 "CPAC_CheckTemperature" "Begin"
function CPAC_CheckTemperature( variable i_intCPACTemp ) void {
// }} ""
private variable ret_ActualTemp_float;
private variable strGetTypeOfCurrentVariable;
private variable fltActualTemperatureCPAC;
private variable strErrorCode;
// {{ 5 "CPAC_CheckTemperature" "InitLocals"
// }} ""
// {{ 3 1 0 "f45fff9d_e39e_472d_a6dbdeec04c6c2ef" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  CPAC_CheckTemperature <<<<<<<<<<"));
// }} ""
// {{ 4 1 0 "9d13117f_af29_49d5_8e9bc19a0b9f4ed2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == 0)
{
// }} ""
// {{ 5 1 0 "c0541d42_974b_4e3d_869609622203bda8" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
ret_ActualTemp_float = 0.0;
// }} ""
// {{{ 6 1 0 "7255d10c_04a0_48f8_ba920bdcb8917230" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, 1, 1, fltActualTemperatureCPAC, strErrorCode);
// }} ""
// {{{ 7 1 0 "dea12187_d828_4170_8e3e9adb2ae179b5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strGetTypeOfCurrentVariable = StrGetType(fltActualTemperatureCPAC);
// }} ""
Trace ("Expected max CPAC temperature:  ", i_intCPACTemp);
Trace ("Get actual CPAC temperature:  ", fltActualTemperatureCPAC);
Trace ("Get type of current variable (get temp):  ", strGetTypeOfCurrentVariable);
// {{{ 9 1 0 "ce1fd5a7_d5b4_4f8a_a89f9d865214d9ae" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
// {{ 10 1 0 "9d13117f_af29_49d5_8e9bc19a0b9f4ed2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 11 1 0 "c50a93f6_8fc0_41c0_8c320b51d50ba748" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - CPAC check temperature simulated"));
// }} ""
// {{ 12 1 0 "9d13117f_af29_49d5_8e9bc19a0b9f4ed2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 13 1 0 "e445c50a_1f0f_4efa_a81b4638efe55166" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  CPAC_CheckTemperature <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "CPAC_CheckTemperature" "End"
}
// }} ""
// {{{ 5 "HHS_GetTemperature" "Begin"
function HHS_GetTemperature( variable i_intHHS ) void {
// }} ""
private variable fltActualTemperatureHHS;
// {{ 5 "HHS_GetTemperature" "InitLocals"
// }} ""
// {{ 340 1 0 "dfa25cab_f11d_4076_9b40295d34a6e6e1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>> Submethod:  HHS_GetTemperature <<<<<"));
// }} ""
// {{ 341 1 0 "ca9ba055_36ff_45d9_8ce775b31b1f29b8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 342 1 0 "0796c31e_5efd_4501_a7aeb98c57eebfd7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::GetTemperature(i_intHHS, fltActualTemperatureHHS);
// }} ""
Trace ("***** The current temperature for HHS", i_intHHS, " is ", fltActualTemperatureHHS, "C *****");
// {{ 344 1 0 "ca9ba055_36ff_45d9_8ce775b31b1f29b8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 345 1 0 "155b7807_9d7f_4bf1_91392f71f1a991a5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - HHS get temperature"));
// }} ""
Trace ("***** The current temperature for HHS", i_intHHS, " is ", fltActualTemperatureHHS, "C *****");
// {{ 347 1 0 "ca9ba055_36ff_45d9_8ce775b31b1f29b8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 348 1 0 "7ffb10a8_803a_4217_a03bb589e71f6a25" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>> Submethod Complete:  HHS_GetTemperature <<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "HHS_GetTemperature" "End"
}
// }} ""
// {{{ 5 "_Version" "Begin"
private function _Version(  ) void {
// }} ""
// {{ 5 "_Version" "InitLocals"
// }} ""
// {{ 735 1 0 "357e075a_3894_4c74_9cf43375f226f8f2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 736 1 0 "93d273dd_294d_4129_8ff7a48dba857f03" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 737 1 0 "947dddd0_5ac8_4ba5_a51af0b535aaf22a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 738 1 0 "1b7f2081_26b8_4754_8d1a44dca13c0a18" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 739 1 0 "919fa404_3ef5_4b04_8261e8ce515997e8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 740 1 0 "82a22598_7340_4403_a4c41e2e9d88bd87" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 741 1 0 "f3f4284f_62fb_442b_9a350e11fbc5ffd4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 742 1 0 "27051e23_818c_440c_bcc96c428c1c7f7b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 743 1 0 "79343696_7f6f_4c8f_848c1e4a91fbd584" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 744 1 0 "26ab8d76_edc4_4acb_ae36f8da30e5a45e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 5 "_Version" "End"
}
// }} ""
// {{{ 5 "CPAC_CheckTemperatureMinimum" "Begin"
function CPAC_CheckTemperatureMinimum( variable i_intCPACTemp ) void {
// }} ""
private variable loopCounter1;
private variable answer_CPACcheck;
private timer timer1;
private dialog customDialog9F39AB50CB4144fc849BC55B929BAB17;
private variable strGetTypeOfCurrentVariable;
private variable fltActualTemperatureCPAC;
private variable strErrorCode;
// {{ 5 "CPAC_CheckTemperatureMinimum" "InitLocals"
// }} ""
// {{ 15 1 0 "bc3d3b99_c31a_4cca_a02877a655726af1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  CPAC_CheckTemperatureMinimum <<<<<<<<<<"));
// }} ""
// {{ 16 1 0 "799411d0_47a7_4aa6_bcb49a5b05a9c9f9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == 0)
{
// }} ""
// {{ 17 1 0 "d5d11e18_56d3_4ea4_86cc914c3e3188d2" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
fltActualTemperatureCPAC = 0.0;
// }} ""
// {{{ 18 1 0 "129273ce_89f3_49b8_b0dc8f95a6184477" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, 1, 1, fltActualTemperatureCPAC, strErrorCode);
// }} ""
// {{{ 19 1 0 "fdc93b68_9976_4626_a83062e62991bbe0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strGetTypeOfCurrentVariable = StrGetType(fltActualTemperatureCPAC);
// }} ""
Trace ("Expected max CPAC temperature:  ", i_intCPACTemp);
Trace ("Get actual CPAC temperature:  ", fltActualTemperatureCPAC);
Trace ("Get type of current variable (get temp):  ", strGetTypeOfCurrentVariable);
// {{{ 21 1 0 "0100ac8c_efff_46f7_82541addc574c0c1" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
// {{ 22 1 0 "0c401110_a7bc_4a76_a64ddc9241596a46" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (fltActualTemperatureCPAC > i_intCPACTemp)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 23 1 0 "df4ed746_4927_4f3c_a17de29eee1f7ba2" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer1.SetTimer(10) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 24 1 0 "c9673fb2_7bb4_4b86_818df43747184598" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer1.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 25 1 0 "0bd64f6a_edb1_475f_bdb3b1bb4a10d4aa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, 1, 1, fltActualTemperatureCPAC, strErrorCode);
// }} ""
// {{{ 26 1 0 "efd4b886_e1e0_4ea1_a007b5ab44468477" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_CPAC_ReportErrorText(strErrorCode);
// }} ""
Trace ("Current CPAC temperature:  ", fltActualTemperatureCPAC);
// {{ 28 1 0 "297829f6_644c_4af4_b86f3f1cada56c28" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (loopCounter1 > 60)
{
// }} ""
// {{ 29 1 0 "47e84b8c_f590_4d22_a739acfdc478830d" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog9F39AB50CB4144fc849BC55B929BAB17.InitCustomDialog( "47e84b8c_f590_4d22_a739acfdc478830d" );
customDialog9F39AB50CB4144fc849BC55B929BAB17.ShowCustomDialog();
answer_CPACcheck = customDialog9F39AB50CB4144fc849BC55B929BAB17.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 30 1 0 "297829f6_644c_4af4_b86f3f1cada56c28" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 31 1 0 "889f894f_be8f_4bab_96a2de5a499dfac0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACcheck == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 32 1 0 "6950814d_389c_4c65_a414d1d932879626" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 33 1 0 "7eb2126b_9443_4ab5_9a06e803e03c4df9" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 34 1 0 "889f894f_be8f_4bab_96a2de5a499dfac0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 35 1 0 "35385c9f_5051_47e4_85f5ce094fa32ac3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACcheck == ASWGLOBAL::DIALOG::IGNORE)
{
// }} ""
// {{ 36 1 0 "6d5409fb_99a0_4e82_8dca289d823f5a97" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 37 1 0 "c250c452_a4a5_4140_94b6ee960817524d" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 38 1 0 "35385c9f_5051_47e4_85f5ce094fa32ac3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 39 1 0 "0c401110_a7bc_4a76_a64ddc9241596a46" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 40 1 0 "799411d0_47a7_4aa6_bcb49a5b05a9c9f9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 41 1 0 "99b6a8c6_e5e5_4c4d_9cb17693037348d8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("SIMULATION MODE ON - CPAC check Temperature minimum simulated"));
// }} ""
// {{ 42 1 0 "799411d0_47a7_4aa6_bcb49a5b05a9c9f9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 43 1 0 "2618f970_ec67_4230_924c878d2b131288" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  CPAC_CheckTemperatureMinimum <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "CPAC_CheckTemperatureMinimum" "End"
}
// }} ""
// {{{ 5 "ODTC_Init" "Begin"
function ODTC_Init( variable i_strDeviceAddress, variable & o_intDeviceNum, variable i_strLocalIPAdress ) void {
// }} ""
private variable strDeviceID;
private variable strState;
private variable blnReturn;
private variable intReturnValue;
private variable strCurrentTime;
private variable blnLocked;
private variable strMessage;
private variable strPmsID;
private variable strTrace;
// {{ 5 "ODTC_Init" "InitLocals"
o_intDeviceNum = 0;
// }} ""
// {{ 565 1 0 "8275f3ef_5b28_4337_9231fb314061cad8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>>  Start Submethod : ODTC_Init<<<<<<<<<<"));
// }} ""
Trace ("_blnSimulationModeON:  ", _blnSimulationModeON);
Trace ("i_strLocalIPAdress:  ", i_strLocalIPAdress);
Trace ("i_strDeviceAddress:  ", i_strDeviceAddress);
// {{ 567 1 0 "0e7053ba_45c4_4f12_af6110c1cde87065" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 568 1 0 "829074f6_7826_4df4_b418e30781f021c8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Inheco_ODTC::Standard::SetTraceLevel(TRACE_LEVEL_DEBUG);
// }} ""
// {{{ 569 1 0 "1f7af9a9_9805_40e6_965f2bfb837c4f9d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::Connect(i_strLocalIPAdress, i_strDeviceAddress, Translate(""), _blnSimulationModeON, o_intDeviceNum, strMessage);
// }} ""
// {{{ 570 1 0 "1a59a3d5_5522_44ca_b83df57dbd1f2852" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::Initialize", intReturnValue, strMessage);
// }} ""
// {{ 571 1 0 "0e7053ba_45c4_4f12_af6110c1cde87065" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 572 1 0 "196a8c30_7cb5_46b0_8ca46d3714d26409" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 573 1 0 "66a43e75_4304_45f5_a2cbb13938b134f8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::Reset(o_intDeviceNum, _blnSimulationModeON, 120, Translate(""), Translate(""), Translate(""), intReturnValue, strMessage);
// }} ""
// {{{ 574 1 0 "593d23c1_10a0_43fd_85db09f993bd7ff6" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::ResetDevice", intReturnValue, strMessage);
// }} ""
// {{ 575 1 0 "196a8c30_7cb5_46b0_8ca46d3714d26409" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 576 1 0 "44382184_5b18_4b8d_ae40672092f8e01f" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 577 1 0 "e606e183_e706_4042_acf08ff7a06a1d43" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::Initialize(o_intDeviceNum, Translate(""), intReturnValue, strMessage);
// }} ""
// {{{ 578 1 0 "7d24f34c_d714_4f25_90fd99d0398907cf" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::InitializeDevice", intReturnValue, strMessage);
// }} ""
// {{ 579 1 0 "44382184_5b18_4b8d_ae40672092f8e01f" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 580 1 0 "158da4bd_c3fb_4dc2_becd58466bc27dfb" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 581 1 0 "2e9e5aaf_8b95_48d6_b11270041b85bb66" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::GetStatus(o_intDeviceNum, strDeviceID, strState, blnLocked, strPmsID, strCurrentTime, intReturnValue, strMessage);
// }} ""
// {{{ 582 1 0 "62526d87_0332_4ec1_a249c3b151bbad33" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat12("strDeviceID = ", strDeviceID, ", strState = ", strState, ", blnLocked = ", blnLocked, ", strPMSID = ", strPmsID, ", strCurrentDeviceTime = ", strCurrentTime, ", intReturnValue = ", intReturnValue);
// }} ""
// {{{ 583 1 0 "ad04aea4_67e1_4eea_948a0098643468fa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat4(strTrace, ", strMessage = ", strMessage, "");
// }} ""
// {{{ 584 1 0 "475c228a_23d8_4ae1_a8b895458fc20b71" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::GetStatus", intReturnValue, strTrace);
// }} ""
// {{ 585 1 0 "158da4bd_c3fb_4dc2_becd58466bc27dfb" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 586 1 0 "e4bc709a_f27f_4a82_8328ad084c9a27c8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete : ODTC_Init <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_Init" "End"
}
// }} ""
// {{{ 5 "_ODTC_HandleReturnValue" "Begin"
private function _ODTC_HandleReturnValue( variable i_blnSuccess, variable i_strFunctionName, variable i_intReturnValue, variable i_strMessage ) void {
// }} ""
private variable strMethodName;
private variable strTrace;
private variable retValueDialog;
private dialog customDialog3DE2FE67E07C4460BD895A52CBC24A20;
// {{ 5 "_ODTC_HandleReturnValue" "InitLocals"
// }} ""
// {{ 723 1 0 "896e4d36_eb4a_4c77_b86316f1a7bd5b38" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_blnSuccess == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
// {{{ 724 1 0 "09aa30f3_2410_424d_9692d1c306e36bf3" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat4("SiLA message was '", i_strMessage, "', SiLA return value was ", i_intReturnValue);
// }} ""
Trace ("***** Trace successful message = ", strTrace);
// {{{ 726 1 0 "cfd07da2_a088_4592_a1a50db48857f897" "{9EC997CD-FD3B-4280-811B-49E99DCF062C}"
return;
// }} ""
// {{ 727 1 0 "896e4d36_eb4a_4c77_b86316f1a7bd5b38" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{{ 728 1 0 "b1d8a6e2_c01e_4009_87cd7ff5b4f64d49" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat4("SiLA message was '", i_strMessage, "', SiLA return value was ", i_intReturnValue);
// }} ""
// {{ 729 1 0 "59f98e4a_a204_40df_9e39418b73b3022d" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialog3DE2FE67E07C4460BD895A52CBC24A20.InitCustomDialog( "59f98e4a_a204_40df_9e39418b73b3022d" );
customDialog3DE2FE67E07C4460BD895A52CBC24A20.SetCustomDialogProperty( "textBlock3.Text", i_strFunctionName );
customDialog3DE2FE67E07C4460BD895A52CBC24A20.SetCustomDialogProperty( "textBlock4.Text", strMethodName );
customDialog3DE2FE67E07C4460BD895A52CBC24A20.SetCustomDialogProperty( "textBlock5.Text", strTrace );
customDialog3DE2FE67E07C4460BD895A52CBC24A20.ShowCustomDialog();
retValueDialog = customDialog3DE2FE67E07C4460BD895A52CBC24A20.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 730 1 0 "09735068_8945_42e2_917cf154721ea6e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (retValueDialog == ASWGLOBAL::DIALOG::CANCEL)
{
// }} ""
// {{ 731 1 0 "ce43f7ee_b3ea_47a8_a36201b6ad1493d0" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 732 1 0 "09735068_8945_42e2_917cf154721ea6e1" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 733 1 0 "896e4d36_eb4a_4c77_b86316f1a7bd5b38" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "_ODTC_HandleReturnValue" "End"
}
// }} ""
// {{{ 5 "ODTC_Terminate" "Begin"
function ODTC_Terminate( variable i_intDeviceNum ) void {
// }} ""
private variable blnReturn;
private variable intReturnValue;
private variable strMessage;
// {{ 5 "ODTC_Terminate" "InitLocals"
// }} ""
// {{ 621 1 0 "13c465cb_c9d9_42ec_b5543d12bebfc225" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Start Submethod : ODTC_Terminate <<<<<<<<<<"));
// }} ""
// {{ 622 1 0 "b230da8f_7750_4c13_b67d448e181d1a61" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (_blnSimulationModeON == ASWGLOBAL::BOOL::FALSE)
{
// }} ""
// {{{ 623 1 0 "d196b6b6_dbb9_4f93_afca7cf7ea8645bc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::StopMethod(i_intDeviceNum, Translate(""), intReturnValue, strMessage);
// }} ""
// {{{ 624 1 0 "0f3be33c_2535_4da1_b5231dc65213e005" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::StopMethod", intReturnValue, strMessage);
// }} ""
// {{{ 625 1 0 "1b422bbd_8911_479b_8fec9933a466894f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::Terminate(i_intDeviceNum, strMessage);
// }} ""
// {{{ 626 1 0 "beb2cfbf_b91f_41fb_82e98f9a6cb5f706" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::Terminate", intReturnValue, strMessage);
// }} ""
// {{ 627 1 0 "b230da8f_7750_4c13_b67d448e181d1a61" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 628 1 0 "cd57b9cb_ab92_40f1_a667ceeb0d36a29f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>>  Submethod Complete : ODTC_Terminate <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_Terminate" "End"
}
// }} ""
// {{{ 5 "ODTC_OpenDoor" "Begin"
function ODTC_OpenDoor( variable i_IntDeviceNumber ) void {
// }} ""
private variable blnReturn;
private variable intReturnValue;
private variable strMessage;
// {{ 5 "ODTC_OpenDoor" "InitLocals"
// }} ""
// {{ 588 1 0 "a60916bf_4556_42bb_84631e4752331d54" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_OpenDoor:  Start Submethod <<<<<<<<<<"));
// }} ""
// {{{ 589 1 0 "86ec8020_803c_44b3_bc12f6e0b0afedc4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::OpenDoor(i_IntDeviceNumber, Translate(""), intReturnValue, strMessage);
// }} ""
// {{{ 590 1 0 "1b6d5655_2d16_4530_a3d394a866c16f44" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::OpenDoor", intReturnValue, strMessage);
// }} ""
// {{ 591 1 0 "e643da2a_543d_4919_b5402583df15bfb9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_OpenDoor:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_OpenDoor" "End"
}
// }} ""
// {{{ 5 "ODTC_CloseDoor" "Begin"
function ODTC_CloseDoor( variable i_IntDeviceNumber ) void {
// }} ""
private variable blnReturn;
private variable intReturnValue;
private variable strMessage;
// {{ 5 "ODTC_CloseDoor" "InitLocals"
// }} ""
// {{ 542 1 0 "51c61649_a891_4e39_a00caa1c3637fe3e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_CloseDoor:  Start Submethod <<<<<<<<<<"));
// }} ""
// {{{ 543 1 0 "3530b44c_99f1_4a9e_9966bebbd577b543" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::CloseDoor(i_IntDeviceNumber, Translate(""), intReturnValue, strMessage);
// }} ""
// {{{ 544 1 0 "db3278bc_30fa_4ff3_80ae3df7344a8633" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::CloseDoor", intReturnValue, strMessage);
// }} ""
// {{ 545 1 0 "b7ce6179_3218_4429_916e6245a5febbd2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_CloseDoor:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_CloseDoor" "End"
}
// }} ""
// {{{ 5 "ODTC_WaitForStartedProtocolToFinish" "Begin"
function ODTC_WaitForStartedProtocolToFinish( variable i_IntDeviceNumber, variable i_intTimeOut, variable i_intRequestIDToWaitFor ) void {
// }} ""
private variable strDeviceID;
private variable strState;
private variable blnReturn;
private variable intReturnValue;
private variable strCurrentTime;
private variable blnLocked;
private variable strMessage;
private variable strPmsID;
private variable strTrace;
private variable intTimeToWait;
// {{ 5 "ODTC_WaitForStartedProtocolToFinish" "InitLocals"
// }} ""
// {{ 702 1 0 "a9b2e985_0486_46a4_ab1d8c3b0b7cc6a6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_WaitForStartedProtocolToFinish:  Start Submethod <<<<<<<<<<"));
// }} ""
// {{ 703 1 0 "58ca3db9_cbed_4fa5_8c671d275a38846d" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
intTimeToWait = i_intTimeOut + 20;
// }} ""
// {{{ 704 1 0 "8478f63e_8836_4228_96b3f1d9ddb9906e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat2("Effective time to wait before an error is triggered = ", intTimeToWait);
// }} ""
Trace ("***** Message = ", strTrace);
// {{{ 706 1 0 "43b9687c_2ed7_49c0_8a2e8e8d9e63490a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::WaitForEndOfExecuteMethod(i_IntDeviceNumber, intTimeToWait, i_intRequestIDToWaitFor, intReturnValue, strMessage);
// }} ""
// {{{ 707 1 0 "e46b67ba_0324_426e_b6e8a0ca78098e34" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::WaitForStartedProtocolToFinish", intReturnValue, strMessage);
// }} ""
// {{ 708 1 0 "a97dd4bb_f09c_4808_8373f02518c6ed91" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 709 1 0 "e397f369_4462_4634_a6ea9dc1bce8e77c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::GetStatus(i_IntDeviceNumber, strDeviceID, strState, blnLocked, strPmsID, strCurrentTime, intReturnValue, strMessage);
// }} ""
// {{{ 710 1 0 "8b8cea76_2a57_471c_bf7c34c67a0ca0da" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat12("strDeviceID = ", strDeviceID, ", strState = ", strState, ", blnLocked = ", blnLocked, ", strPMSID = ", strPmsID, ", strCurrentDeviceTime = ", strCurrentTime, ", intReturnValue = ", intReturnValue);
// }} ""
// {{{ 711 1 0 "fbb2e732_e2a5_4c21_b25322bae8882bd0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat4(strTrace, ", strMessage = ", strMessage, "");
// }} ""
// {{{ 712 1 0 "45423de8_03c6_4ebe_a31fa04c09bfe5b7" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::GetStatus", intReturnValue, strTrace);
// }} ""
// {{ 713 1 0 "a97dd4bb_f09c_4808_8373f02518c6ed91" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 714 1 0 "d3d7c60d_7bec_49b1_94769c4d8a54f02d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_WaitForStartedProtocolToFinish:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_WaitForStartedProtocolToFinish" "End"
}
// }} ""
// {{{ 5 "ODTC_ReadActualTemperature" "Begin"
function ODTC_ReadActualTemperature( variable i_IntDeviceNumber, variable i_intTimeForProtocoll ) void {
// }} ""
private variable strDeviceID;
private variable strState;
private variable blnReturn;
private variable strTime;
private variable fltElapsedTime;
private variable intReturnValue;
private variable strCurrentTime;
private variable blnLocked;
private variable strMessage;
private variable strPmsID;
private timer hdlDelay;
private timer hdlWaitForFinish;
private variable strArrTemperatureNames[];
private variable fltArrTemperature[];
private variable strTrace;
// {{ 5 "ODTC_ReadActualTemperature" "InitLocals"
// }} ""
// {{ 593 1 0 "7057ab8e_5585_45fd_af4e30e52b658608" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_ReadActualTemperature:  Start Submethod <<<<<<<<<<"));
// }} ""
// {{ 594 1 0 "c2c3cff5_8d95_43e2_84e4648a88b5ffbb" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hdlWaitForFinish.SetTimer(hslInfinite) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 595 1 0 "33397695_ef72_46d0_87534818d2ce36a8" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
while (ASWGLOBAL::BOOL::TRUE == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
// {{ 596 1 0 "04de929e_3bab_4a9b_b0da82cd782186e4" "{B31F3540-5D80-11d4-A5EB-0050DA737D89}"
fltElapsedTime = hdlWaitForFinish.GetElapsedTime();
// }} ""
// {{ 597 1 0 "b0fe5754_3fd5_48b4_b7e0159acba403f8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (fltElapsedTime >= i_intTimeForProtocoll)
{
// }} ""
// {{ 598 1 0 "3704de95_3946_4c53_ba476287f84b9881" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 599 1 0 "b0fe5754_3fd5_48b4_b7e0159acba403f8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 600 1 0 "ef3a2381_c9d0_4db0_a59e2d0def4b6db6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::ReadActualTemperature(i_IntDeviceNumber, Translate(""), strTime, fltArrTemperature, strArrTemperatureNames, intReturnValue, strMessage);
// }} ""
// {{{ 601 1 0 "73aeaab7_f4aa_4d01_86f552a6da0aa848" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::SetTraceLevel(TRACE_LEVEL_DEBUG);
// }} ""
// {{{ 602 1 0 "564d8e50_8b3d_42bf_8f99b107a0c1be1d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::TraceArraysFaceToFace(TRACE_LEVEL_DEBUG, "fltArrTemperature", "strArrTemperatureNames", fltArrTemperature, strArrTemperatureNames);
// }} ""
// {{{ 603 1 0 "a1763c43_a328_4646_9e8433edefc84f32" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat8("strTime = ", strTime, ", intReturnValue = ", intReturnValue, ", strMessage = ", strMessage, "", "");
// }} ""
// {{ 604 1 0 "ab39c609_f3e0_40ef_8a2e8ef82d531cf3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intReturnValue == 12)
{
// }} ""
// {{ 605 1 0 "3eea2fda_5bb9_46c6_b104a885b54d110a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
Trace ("***** ReadActualTemperature failed But Error 2005 or error 2006 warning will be ignored Device will continue operation, intReturnValue = ", intReturnValue);
Trace ("***** Message = ", strMessage);
// {{ 607 1 0 "0bf8ce2d_9c2c_4142_935332468bbb26a7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
blnReturn = ASWGLOBAL::BOOL::TRUE;
// }} ""
// {{ 608 1 0 "ab39c609_f3e0_40ef_8a2e8ef82d531cf3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 609 1 0 "86cccf22_7799_4efd_95e585065015df56" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::ReadActualTemperature", intReturnValue, strTrace);
// }} ""
// {{ 610 1 0 "b2cdc24f_38ef_4dd0_b756235fdf9a0042" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hdlDelay.SetTimer(5) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 611 1 0 "1abde5d0_92e6_41f5_86f46e3e6e8d2168" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == hdlDelay.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 612 1 0 "33397695_ef72_46d0_87534818d2ce36a8" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 613 1 0 "1cf38839_fe73_4924_80a4b134ffe995a2" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 614 1 0 "6524c9f1_6dcb_4b3c_ae5a965720075e36" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::GetStatus(i_IntDeviceNumber, strDeviceID, strState, blnLocked, strPmsID, strCurrentTime, intReturnValue, strMessage);
// }} ""
// {{{ 615 1 0 "d696c75f_4d9d_4931_b80fa11c63976819" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat12("strDeviceID = ", strDeviceID, ", strState = ", strState, ", blnLocked = ", blnLocked, ", strPMSID = ", strPmsID, ", strCurrentDeviceTime = ", strCurrentTime, ", intReturnValue = ", intReturnValue);
// }} ""
// {{{ 616 1 0 "5fb7bded_1f7d_4742_971f737ee67b1353" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat4(strTrace, ", strMessage = ", strMessage, "");
// }} ""
// {{{ 617 1 0 "3a9066e9_8998_46c4_88727d3ce02422f4" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::GetStatus", intReturnValue, strTrace);
// }} ""
// {{ 618 1 0 "1cf38839_fe73_4924_80a4b134ffe995a2" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 619 1 0 "fe893cf3_7600_4f1a_9dc85db3865d0d2a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_ReadActualTemperature:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_ReadActualTemperature" "End"
}
// }} ""
// {{{ 5 "ODTC_ExecuteProtocol" "Begin"
function ODTC_ExecuteProtocol( variable i_IntDeviceNumber, variable i_strProtocollFullFileName, variable i_strNameOfProtocollOnDevice, variable & o_intTimeForProtocol, variable & o_intRequestIDForActiveProtocol, variable i_blnShortenPreheatingMethodsTo40Seconds ) void {
// }} ""
private variable blnReturn;
private variable intReturnValue;
private variable strMessage;
private variable strTrace;
private variable intPriority;
// {{ 5 "ODTC_ExecuteProtocol" "InitLocals"
o_intTimeForProtocol = 0;
o_intRequestIDForActiveProtocol = 0;
// }} ""
// {{ 553 1 0 "de9493ab_fcf4_4f2e_acbb18ccf06eac41" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_ExecuteProtocol:  Start Submethod <<<<<<<<<<"));
// }} ""
Trace ("------- ODTC device script to be perfomed: ", i_strProtocollFullFileName);

// {{ 555 1 0 "72697823_dbad_420b_b216673fcfa50a75" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (i_blnShortenPreheatingMethodsTo40Seconds == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
// {{ 556 1 0 "379396fa_cab6_4186_b2f090d5a0f88a9e" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intPriority = 10000;
// }} ""
// {{ 557 1 0 "72697823_dbad_420b_b216673fcfa50a75" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 558 1 0 "da5a5f06_06a9_4ea5_9424f7f141f43f3a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intPriority = 10;
// }} ""
// {{ 559 1 0 "72697823_dbad_420b_b216673fcfa50a75" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 560 1 0 "d4eac722_e853_4325_86118b367162273d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::ExecuteMethod(i_IntDeviceNumber, Translate(""), i_strNameOfProtocollOnDevice, intPriority, o_intTimeForProtocol, o_intRequestIDForActiveProtocol, intReturnValue, strMessage);
// }} ""
// {{{ 561 1 0 "9da73d85_463c_4f3c_b67d964355d3ea19" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat8("o_intTimeForProtocol= ", o_intTimeForProtocol, ", o_intRequestIDForActiveProtocol = ", o_intRequestIDForActiveProtocol, ", intReturnValue = ", intReturnValue, ", strMessage = ", strMessage);
// }} ""
// {{{ 562 1 0 "dd9d628d_bbf6_4131_a7d7156d482a8329" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::ExecuteProtocol", intReturnValue, strTrace);
// }} ""
// {{ 563 1 0 "68149d3c_a5f7_44a9_bec118e41440167b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_ExecuteProtocol:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_ExecuteProtocol" "End"
}
// }} ""
// {{{ 5 "HandOverSimulationModeForAllLocalSMTs" "Begin"
function HandOverSimulationModeForAllLocalSMTs( variable i_blnSimulationON ) void {
// }} ""
// {{ 5 "HandOverSimulationModeForAllLocalSMTs" "InitLocals"
// }} ""
// {{ 489 1 0 "02af7d93_168c_43a8_a4faaf684cab28fc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod: HandOverSimulationModeForAllLocalSMTs <<<<<<<<<<"));
// }} ""
// {{ 490 1 0 "cea8da3c_f400_4942_9520c5317206f342" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
_blnSimulationModeON = i_blnSimulationON;
// }} ""
Trace ("Simulation mode for NGSStarPrep SMT:  ", _blnSimulationModeON);
// {{ 492 1 0 "6d02715e_16cf_4973_ad531c5c72e2a5f7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: HandOverSimulationModeForAllLocalSMTs <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "HandOverSimulationModeForAllLocalSMTs" "End"
}
// }} ""
// {{{ 5 "DATA_ReadNormFile" "Begin"
function DATA_ReadNormFile( device & ML_STAR, variable i_strNormalizationFile, variable & o_fltTotalBufferVolume_uL, variable & io_intNumberOfSamples ) void {
// }} ""
private dialog customDialogE29F6DB22E534e589A0D4A50265393F1;
private variable Answer_WarningVolume;
private file file1;
private variable fltBufferVolume;
private variable fltTotalBufferVolume_uL;
private variable fltSampleConcentration;
private variable strWellID_Source;
private variable strWellID_Pool;
private variable intCounterLinesInTheFile;
// {{ 5 "DATA_ReadNormFile" "InitLocals"
o_fltTotalBufferVolume_uL = 0;
// }} ""
// {{ 164 1 0 "6780fbac_4f59_4b2b_9402e771d1f3028c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  DATA_ReadNormFile <<<<<<<<<<"));
// }} ""
// {{ 165 1 0 "ac2b9900_6bb9_4508_9a697bfe0fdcf1b9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Get the values from the Normalization File.  \nAssumptions:\nThe File must be a comma separated txt or csv file. \nThe file must have at least 2 columns, headed by \"SourceWell\" and \"Volume\" (buffer volume)\nThe volume of buffer required per well must be less than or equal to 600.\n\n"));
// }} ""
// {{ 166 1 0 "d308073f_beac_4a20_9b6966c31e6d16f6" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file1.AddField("SourceWell", strWellID_Source, hslString, 255);
file1.AddField("nM", fltSampleConcentration, hslFloat);
file1.AddField("PoolWell", strWellID_Pool, hslString, 255);
if( 0 == file1.Open(i_strNormalizationFile + " " + "Sheet1$", hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strNormalizationFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 167 1 0 "c508ae0a_4c51_4240_8c3246553a9f9d31" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
fltTotalBufferVolume_uL = 0;
// }} ""
// {{ 168 1 0 "0c7b7a09_3349_45c6_966f3ca7015f99c2" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
intCounterLinesInTheFile = 0;
while (
   (file1.Eof() == 0)
)
{
intCounterLinesInTheFile = intCounterLinesInTheFile + 1;
// }} ""
// {{ 169 1 0 "a81e68be_0778_4b20_ac302135ba04ce7c" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file1.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 170 1 0 "213f27f7_76ab_42b1_9ec6f7336607727b" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltBufferVolume = fltSampleConcentration - 10;
// }} ""
// {{{ 171 1 0 "e5c15121_dfd4_4350_abc636393db17cbd" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
fltBufferVolume = MthRound(fltBufferVolume, 1);
// }} ""
Trace ("Source well ", strWellID_Source, ", Concentration (nM) = ", fltSampleConcentration, ", so Buffer Volume is ", fltBufferVolume, "ul.");
// {{ 173 1 0 "f541a9ff_f16a_4bc4_bad74f76238f5640" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltTotalBufferVolume_uL = fltTotalBufferVolume_uL + fltBufferVolume;
// }} ""
// {{ 174 1 0 "a53e4f0e_f49f_407e_a50a8a6f5962dfe2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (fltBufferVolume > 600)
{
// }} ""
// {{ 175 1 0 "2ea86b35_0239_4cb0_8258ed7a51e1aff6" "{998A7CCC-4374-484D-A6ED-E8A4F0EB71BA}"
customDialogE29F6DB22E534e589A0D4A50265393F1.InitCustomDialog( "2ea86b35_0239_4cb0_8258ed7a51e1aff6" );
customDialogE29F6DB22E534e589A0D4A50265393F1.SetCustomDialogProperty( "textBlock3.Text", strWellID_Source );
customDialogE29F6DB22E534e589A0D4A50265393F1.ShowCustomDialog();
Answer_WarningVolume = customDialogE29F6DB22E534e589A0D4A50265393F1.GetCustomDialogProperty( "ReturnValue" );
// }} ""
// {{ 176 1 0 "b3218807_eac0_4b4e_b57ed7dc6adf4946" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Answer_WarningVolume == ASWGLOBAL::DIALOG::OK)
{
// }} ""
// {{ 177 1 0 "9d456129_8af6_4c83_87eab8def6d0f72e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 178 1 0 "9202bc31_03fe_49f6_bf4c2f830a6e539c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
fltBufferVolume = 600;
// }} ""
Trace ("WARNING!  For source well ", strWellID_Source, ", ", fltBufferVolume, "ul total buffer will be pipetted.");
// {{ 180 1 0 "b3218807_eac0_4b4e_b57ed7dc6adf4946" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 181 1 0 "175fcfb0_860b_4888_a1972eaa9f7c2e7e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 182 1 0 "ba27e600_c356_4ead_952020032356a921" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 183 1 0 "b3218807_eac0_4b4e_b57ed7dc6adf4946" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 184 1 0 "a53e4f0e_f49f_407e_a50a8a6f5962dfe2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 185 1 0 "0c7b7a09_3349_45c6_966f3ca7015f99c2" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 186 1 0 "81d0feb0_a8db_42b8_86e2268c5d747345" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file1.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file1.RemoveFields();
// }} ""
// {{ 187 1 0 "1dbb50c7_e942_4e5c_8d58caa5774531ce" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
io_intNumberOfSamples = intCounterLinesInTheFile;
// }} ""
// {{ 188 1 0 "8740eb75_a361_4799_a8b8af5114311a54" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltTotalBufferVolume_uL = fltTotalBufferVolume_uL / 1000;
// }} ""
// {{{ 189 1 0 "b3f00b80_ddc2_428e_b43be3b3c96b69be" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
fltTotalBufferVolume_uL = MthCeiling(fltTotalBufferVolume_uL);
// }} ""
// {{ 190 1 0 "ae7ec6ea_1032_4d98_850d3ec7cc9f3bee" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_fltTotalBufferVolume_uL = fltTotalBufferVolume_uL;
// }} ""
Trace ("Total Buffer Volume (mL) = ", fltTotalBufferVolume_uL);
Trace ("Number of samples = ", io_intNumberOfSamples);
// {{ 192 1 0 "a479bf72_caef_4ba4_a71acc668f3d2fb0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  DATA_ReadNormFile <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "DATA_ReadNormFile" "End"
}
// }} ""
// {{{ 5 "DATA_ReadSamplePlateFile" "Begin"
function DATA_ReadSamplePlateFile( variable & io_strSamplePlateFile, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex2SeqPositions[], variable & io_arrALPseqPositions[], variable i_strTempSamplePlateFileName ) void {
// }} ""
private variable strFileName;
private variable i_strTempSamplePlateFileName2;
private variable LoopCounter1;
private variable loopCounter1;
private variable strDirectoryName;
private file file1;
private file file2;
private file file3;
private variable strColumn1data;
private variable strColumn2data;
private variable strColumn3data;
private variable strColumn4data;
private variable strColumn1_Well;
private variable strColumn2_ID;
private variable strColumn3_Index1;
private variable strColumn4_Index2;
private variable strColumn5_Row;
private variable intColumn6_Column;
private variable strColumn6_Column;
private variable strIndex1_ID;
private variable strIndex2_ID;
private variable strWellID_Row;
private variable intWellID_Column;
private variable strWellIDconcat;
private variable strIndex1_Position;
private variable strIndex2_Position;
private variable strSQLStatement;
// {{ 5 "DATA_ReadSamplePlateFile" "InitLocals"
o_intNumberOfSamples = 0;
o_intIndexesUsedSetting = 0;
// }} ""
// {{ 194 1 0 "0117b6fb_03d8_475a_919b6301373e4b7a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  DATA_ReadSamplePlateFile <<<<<<<<<<"));
// }} ""
// {{{ 195 1 0 "9374d022_b46d_4c6b_b2915a502c77caa0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strDirectoryName = HSLExtensions::File::GetDirectoryName(i_strTempSamplePlateFileName);
// }} ""
// {{{ 196 1 0 "fcca74ee_ee22_4dff_94c8429eec3ffc2c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strFileName = HSLExtensions::File::GetFileNameWithoutExtension(i_strTempSamplePlateFileName);
// }} ""
// {{{ 197 1 0 "c2422d31_705d_49bd_a6d071a7552020d5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
i_strTempSamplePlateFileName2 = StrConcat4(strDirectoryName, Translate("\\"), strFileName, Translate("2.xls"));
// }} ""
Trace ("Temp Sample Plate File Name 1:  ", i_strTempSamplePlateFileName);
Trace ("Temp Sample Plate File Name 2:  ", i_strTempSamplePlateFileName2);

// {{ 199 1 0 "99a7efa8_eb4f_4a79_b8f091e6998b7f52" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_6564D0B5EAD44848B33C424CFFC19ECE ;
err.Clear();
// }} ""
// {{{ 200 1 0 "46a14666_7448_4642_bb99328013ec8fb1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLExtensions::File::Delete(i_strTempSamplePlateFileName);
// }} ""
// {{{ 201 1 0 "09a42432_bf81_43de_887ad54bf398510f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLExtensions::File::Delete(i_strTempSamplePlateFileName2);
// }} ""
// {{ 202 1 0 "99a7efa8_eb4f_4a79_b8f091e6998b7f52" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_6564D0B5EAD44848B33C424CFFC19ECE : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 203 1 0 "99a7efa8_eb4f_4a79_b8f091e6998b7f52" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 204 1 0 "3fc5dbef_9218_453e_8fbcacf47607c45b" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 205 1 0 "49e310a7_50a6_430d_908cca84b016b64f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Write the original data to an xls file and find the number of indexes used."));
// }} ""
// {{ 206 1 0 "3debd8ac_046e_4d8a_ba01fced778b603c" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file1.AddField(1, strColumn1data, hslString, 255);
file1.AddField(2, strColumn2data, hslString, 255);
file1.AddField(3, strColumn3data, hslString, 255);
file1.AddField(4, strColumn4data, hslString, 255);
file1.SetDelimiter(hslTabDelimited);
if( 0 == file1.Open(io_strSamplePlateFile, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, io_strSamplePlateFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 207 1 0 "5b7aed41_5b82_4185_8996896ec8d9f9e4" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Well", strColumn1data, hslString, 255);
file2.AddField("SampleID", strColumn2data, hslString, 255);
file2.AddField("Index1", strColumn3data, hslString, 255);
file2.AddField("Index2", strColumn4data, hslString, 255);
if( 0 == file2.Open(i_strTempSamplePlateFileName + " " + "Sheet1", hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSamplePlateFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 208 1 0 "0584faed_5fa0_4dfe_86e22e9a52f7731a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (file1.Eof() == 0)
)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 209 1 0 "545f7ac6_6449_4b47_848f82b5ad703835" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file1.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 210 1 0 "a54125a4_af18_441a_8e2c88e467ba4bc3" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 211 1 0 "33d9129b_7acb_4bb8_b2d0c58939e6318c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (strColumn1data == "IndexReads")
{
// }} ""
// {{ 212 1 0 "c067a48f_b164_45c6_ba1014439e95197a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Found the number of indexes"));
// }} ""
// {{ 213 1 0 "0cb8c127_5107_471b_905e0eb869ad4cf6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_intIndexesUsedSetting = strColumn2data;
// }} ""
// {{ 214 1 0 "33d9129b_7acb_4bb8_b2d0c58939e6318c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 215 1 0 "0584faed_5fa0_4dfe_86e22e9a52f7731a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 216 1 0 "4a74f6f5_e13c_4420_8ced92a56c26707b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file1.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file1.RemoveFields();
// }} ""
// {{ 217 1 0 "1875d718_a681_424e_b7d8ce4a4d86c652" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 218 1 0 "3fc5dbef_9218_453e_8fbcacf47607c45b" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 219 1 0 "cd19cffa_6ea7_4ee4_bfd184d3e07dd95d" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 220 1 0 "04b007e1_7ea6_48a2_8a47aa9db09a8708" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 221 1 0 "797febd9_f40f_4180_bd588231d4eb4f3d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strSQLStatement = StrConcat4(Translate("SELECT * FROM ["), Translate("Sheet1$"), Translate("] WHERE [SampleID] IS NOT NULL"), Translate(""));
// }} ""
// {{ 222 1 0 "4d25895f_681b_4259_bce1e45fdd29efe6" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.SetExtendedProperties( "IMEX=1");
file2.AddField("Well", strColumn1_Well, hslString, 255);
file2.AddField("SampleID", strColumn2_ID, hslString, 255);
file2.AddField("Index1", strColumn3_Index1, hslString, 255);
file2.AddField("Index2", strColumn4_Index2, hslString, 255);
if( 0 == file2.Open(i_strTempSamplePlateFileName + " " + "Sheet1$", hslRead, strSQLStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSamplePlateFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 223 1 0 "0ce3b395_6171_4467_bef30067efc94b65" "{B31F3535-5D80-11d4-A5EB-0050DA737D89}"
file2.Seek(5, hslCurrent);
// }} ""
// {{ 224 1 0 "6b9afe3a_7c80_45ed_a7c2b294e648021a" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file3.AddField("Well", strColumn1_Well, hslString, 255);
file3.AddField("SampleID", strColumn2_ID, hslString, 255);
file3.AddField("Index1", strColumn3_Index1, hslString, 255);
file3.AddField("Index2", strColumn4_Index2, hslString, 255);
file3.AddField("Row", strColumn5_Row, hslString, 255);
file3.AddField("Column", intColumn6_Column, hslInteger);
if( 0 == file3.Open(i_strTempSamplePlateFileName2 + " " + "Sheet1", hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSamplePlateFileName2, "HxMetEdCompCmd");
}
// }} ""
// {{ 225 1 0 "cdac6cc9_2296_473a_b448a638f2e6afc2" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LoopCounter1 = 0;
while (
   (file2.Eof() == 0)
)
{
LoopCounter1 = LoopCounter1 + 1;
// }} ""
// {{ 226 1 0 "a336f31f_6411_4e45_9ba6aaf8b132c977" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 227 1 0 "30ad4403_66bf_41c7_8f25396f41a47b33" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strColumn5_Row = StrLeft(strColumn1_Well, 1);
// }} ""
// {{{ 228 1 0 "3bd25637_4d02_4290_900f929178c584e9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strColumn6_Column = StrRight(strColumn1_Well, 2);
// }} ""
// {{{ 229 1 0 "6d074f3f_be56_4f64_8f4450da8bc7e14e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intColumn6_Column = StrIVal(strColumn6_Column);
// }} ""
// {{ 230 1 0 "0edecdde_339f_47cf_9dd3619e76fd3d60" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file3.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 231 1 0 "cdac6cc9_2296_473a_b448a638f2e6afc2" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 232 1 0 "c528f86e_1324_4731_a41e4d603b5cc862" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 233 1 0 "95c102cc_3551_4285_9a264a4c1ff318c9" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file3.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file3.RemoveFields();
// }} ""
// {{ 234 1 0 "cd19cffa_6ea7_4ee4_bfd184d3e07dd95d" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 235 1 0 "4a0dab13_e4a8_4b11_8c0a27a97acd4f47" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 236 1 0 "2d73a7a9_9f00_468d_95d6d69fee8c5d6e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 237 1 0 "6aec28cb_2818_449b_a9e05bf3eabf5951" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file3.AddField("Well", strWellIDconcat, hslString, 255);
file3.AddField("SampleID", strColumn2_ID, hslString, 255);
file3.AddField("Index1", strIndex1_ID, hslString, 255);
file3.AddField("Index2", strIndex2_ID, hslString, 255);
file3.AddField("Row", strWellID_Row, hslString, 255);
file3.AddField("Column", intWellID_Column, hslInteger);
if( 0 == file3.Open(i_strTempSamplePlateFileName2 + " " + "Sheet1$", hslRead, "SELECT * FROM [Sheet1$] ORDER BY [Column] ASC, [Row] ASC") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSamplePlateFileName2, "HxMetEdCompCmd");
}
// }} ""
// {{ 238 1 0 "6d523e12_d95d_4fad_94a4681cca6ff069" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex1SeqPositions.SetSize(0);
// }} ""
// {{ 239 1 0 "aebcad8c_c2dc_4934_be27ebe4b526ba15" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex2SeqPositions.SetSize(0);
// }} ""
// {{ 240 1 0 "c7ac834a_530d_4a7a_9ac26ac6b1f4831e" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrALPseqPositions.SetSize(0);
// }} ""
// {{{ 241 1 0 "151bf680_4fae_4d9f_9a1ed5782eb834ab" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
o_intIndexesUsedSetting = StrIVal(o_intIndexesUsedSetting);
// }} ""
// {{ 242 1 0 "87247cf7_4aa7_4653_83620f30d5ad044e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
o_intNumberOfSamples = 0;
while (
   (file3.Eof() == 0)
)
{
o_intNumberOfSamples = o_intNumberOfSamples + 1;
// }} ""
// {{ 243 1 0 "0300e702_e9e3_411a_9108dee13f9c390d" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file3.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 244 1 0 "451e6c92_3268_4ddb_974a19f008dfc8d1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 245 1 0 "fc45155e_0d51_4432_b995686d388f0109" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strWellIDconcat = StrConcat2(strWellID_Row, intWellID_Column);
// }} ""
// {{ 246 1 0 "388a58f2_d115_4ede_a43183d728f0f918" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrALPseqPositions.AddAsLast(strWellIDconcat);
// }} ""
// {{ 247 1 0 "4711ac24_d98c_4a5d_a22ce5c4aa814bfd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting >= 1)
{
// }} ""
// {{ 248 1 0 "b1c8007a_54be_4099_b51c7a6693b47e94" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 249 1 0 "ffbc80fe_826a_4e96_a68325fe3572223b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex1_Position = StrRight(strIndex1_ID, 2);
// }} ""
// {{{ 250 1 0 "b9b6734f_8412_4dd8_9267b96714415a18" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex1_Position = StrTrimLeft(strIndex1_Position, Translate("0"));
// }} ""
// {{ 251 1 0 "e5dab10a_c613_4c69_ac4743c09410a2c0" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex1SeqPositions.AddAsLast(strIndex1_Position);
// }} ""
// {{ 252 1 0 "4711ac24_d98c_4a5d_a22ce5c4aa814bfd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 253 1 0 "6305eff5_5ef3_4350_87c786fa22989c67" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting >= 2)
{
// }} ""
// {{ 254 1 0 "c371c989_023f_4f79_b466370d7e73662c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 255 1 0 "eeebd32e_51e5_431c_94f367f9ca47f294" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex2_Position = StrRight(strIndex2_ID, 2);
// }} ""
// {{{ 256 1 0 "fc595031_cc96_4cdb_8252ea4098506c6e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex2_Position = StrTrimLeft(strIndex2_Position, Translate("0"));
// }} ""
// {{ 257 1 0 "b09ce074_19ec_4c87_b18ee945838fba67" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex2SeqPositions.AddAsLast(strIndex2_Position);
// }} ""
// {{ 258 1 0 "6305eff5_5ef3_4350_87c786fa22989c67" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("Well:  ", strWellIDconcat, " ----- Index1 ID:  ", strIndex1_ID, " ----- Index2 ID:  ", strIndex2_ID);
// {{ 260 1 0 "87247cf7_4aa7_4653_83620f30d5ad044e" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 261 1 0 "d66a47da_bc8d_4991_b8217caa96a774d3" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file3.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file3.RemoveFields();
// }} ""
// {{ 262 1 0 "4a0dab13_e4a8_4b11_8c0a27a97acd4f47" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 263 1 0 "51c89c57_edc8_48e6_8a1dc12bb9935948" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: DATA_ReadSamplePlateFile <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "DATA_ReadSamplePlateFile" "End"
}
// }} ""
// {{{ 5 "DATA_ReadSampleSheet" "Begin"
function DATA_ReadSampleSheet( variable & io_strSourceFileSampleSheet, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex2SeqPositions[], variable & io_arrALPseqPositions[], variable i_strTempSampleSheetFileName ) void {
// }} ""
private variable strDirectoryOfTempSampleSheetFileName;
private variable LoopCounter1;
private variable strFullpathSchemaIniFile;
private file file1;
private file file2;
private variable strColumn1data;
private variable strIndex1_ID;
private variable strIndex2_ID;
private variable strIndex1_Position;
private variable strIndex2_Position;
private variable intLineWellDataHeader;
private variable strWellID;
private variable strWellID_Column;
private variable strWellID_Row;
private variable intReturnValueFound0;
private variable intResultReplacement;
private variable intResultStringFound;
// {{ 5 "DATA_ReadSampleSheet" "InitLocals"
o_intNumberOfSamples = 0;
o_intIndexesUsedSetting = 0;
// }} ""
// {{ 265 1 0 "d4cb68d2_9864_43a9_b5e4ad1163ca166c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  DATA_ReadSampleSheet <<<<<<<<<<"));
// }} ""
Trace ("Temp Sample Sheet File Name 1:  ", i_strTempSampleSheetFileName);

// {{ 267 1 0 "8e5b23f5_182b_4741_95420e1fe6a815c7" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file1.AddField("F1", strColumn1data, hslString, 255);
file1.SetDelimiter(hslTabDelimited);
if( 0 == file1.Open(io_strSourceFileSampleSheet, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, io_strSourceFileSampleSheet, "HxMetEdCompCmd");
}
// }} ""
// {{ 268 1 0 "f341dbd8_c88e_4621_aebd5540a83ad405" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField(1, strColumn1data, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open(i_strTempSampleSheetFileName, hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSampleSheetFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 269 1 0 "c8f38280_e697_4415_bc0bb0d41ee0ad75" "{B31F3535-5D80-11d4-A5EB-0050DA737D89}"
file1.Seek(1, hslCurrent);
// }} ""
// {{ 270 1 0 "0e15c428_11a2_4272_bb7c4b0c3497fe86" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Read and trace out the data from the Sample Sheet:"));
// }} ""
// {{ 271 1 0 "5568e70b_64b7_412b_a7be071d7d076108" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LoopCounter1 = 0;
while (
   (file1.Eof() == 0)
)
{
LoopCounter1 = LoopCounter1 + 1;
// }} ""
// {{ 272 1 0 "7dcefcfe_4c1c_4572_9f70b35cc570a877" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file1.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
Trace (strColumn1data);
// {{ 274 1 0 "472a2088_c3ab_4cdb_966ff7fd350d1745" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 275 1 0 "b9cb9013_9ad4_4b17_bde678b22bdedc16" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intResultStringFound = StrFind(strColumn1data, Translate("Sample_Well"));
// }} ""
// {{ 276 1 0 "b54b83a2_9467_4371_b7c0fcea1e528c31" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intResultStringFound != -1)
{
// }} ""
// {{ 277 1 0 "67957536_00cc_4366_8c18eafbdd9a662b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Found the line with the headers for the well data...."));
// }} ""
// {{ 278 1 0 "8c0f5120_49e5_4e52_8b4728bf6b12dc39" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intLineWellDataHeader = LoopCounter1;
// }} ""
// {{ 279 1 0 "dbd7566c_67b6_406d_82783be5c4e69e63" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Header row found.  Determine how many, if any, indexes will be used in this run."));
// }} ""
// {{{ 280 1 0 "972b1e51_fb90_4cde_8eaaa04b42c9f123" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intResultReplacement = StrReplace(strColumn1data, Translate("Index_ID"), Translate(""));
// }} ""
Trace ("***** (Found ", intResultReplacement, " Index ID(s).)");
// {{ 282 1 0 "325c1b3a_9569_4c1d_8da28ca970c1d7a6" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_intIndexesUsedSetting = intResultReplacement;
// }} ""
// {{ 283 1 0 "b54b83a2_9467_4371_b7c0fcea1e528c31" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 284 1 0 "4e24417a_aaf5_4b61_b16e5ca885e89bf7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intLineWellDataHeader > 0)
{
// }} ""
// {{ 285 1 0 "c8ba2ba8_7d14_4779_9d02be36e2d6a053" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 286 1 0 "73640e0a_70a3_4114_8dfabf7a8026b043" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 287 1 0 "4e24417a_aaf5_4b61_b16e5ca885e89bf7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 288 1 0 "5568e70b_64b7_412b_a7be071d7d076108" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 289 1 0 "7fe8540c_c173_419e_a1864d1d64de5312" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file1.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file1.RemoveFields();
// }} ""
// {{ 290 1 0 "355819a5_2370_4af3_a605ea57dd48d912" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 291 1 0 "6463be7d_8848_4c96_a4d68fceda0936ee" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 292 1 0 "408bca66_12a1_4160_a5871b51a228cfd5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(i_strTempSampleSheetFileName);
// }} ""
// {{{ 293 1 0 "5a123a98_a829_440b_86ee2ac6d30c4db1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strDirectoryOfTempSampleSheetFileName = HSLExtensions::File::GetDirectoryName(i_strTempSampleSheetFileName);
// }} ""
// {{{ 294 1 0 "6547896d_6941_433c_8e8f557dbe4dbb90" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strFullpathSchemaIniFile = StrConcat2(i_strTempSampleSheetFileName, Translate("\\schema.ini"));
// }} ""
// {{{ 295 1 0 "d9edbb88_31a4_4854_92b866251c3c0eeb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLExtensions::File::Delete(strFullpathSchemaIniFile);
// }} ""
// {{ 296 1 0 "e55a6965_22c9_4cf1_a997d6dd753f0ea6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Reread the file to get the number of samples and any index data."));
// }} ""
// {{ 297 1 0 "88a651c6_7452_4ae5_8789d0ce26b07b0f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting == 0)
{
// }} ""
// {{ 298 1 0 "ff10c30c_1efa_4cd1_927282d53694d4d1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** No \"Index_ID\" found.  Adapter Indexes will not be used in this run."));
// }} ""
// {{ 299 1 0 "2ec51d16_75ee_4273_bf7c99c02e649dc9" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Sample_Well", strWellID, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open(i_strTempSampleSheetFileName, hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSampleSheetFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 300 1 0 "88a651c6_7452_4ae5_8789d0ce26b07b0f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 301 1 0 "1ff28292_4423_45a2_af62e3766be7070b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting == 1)
{
// }} ""
// {{ 302 1 0 "02d7ead2_ebad_4841_be10a7bbe4f1c6c0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** One Index Found *****"));
// }} ""
// {{ 303 1 0 "e0b559e2_9ed4_48e4_b645330753d6cd7c" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Sample_Well", strWellID, hslString, 255);
file2.AddField("I7_", strIndex1_ID, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open(i_strTempSampleSheetFileName, hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSampleSheetFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 304 1 0 "1ff28292_4423_45a2_af62e3766be7070b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 305 1 0 "19df7a34_a67c_426a_a369a702c41ae259" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting == 2)
{
// }} ""
// {{ 306 1 0 "fb7a55e0_185c_41fd_99f901cbcedfbb1d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Two Indexes Found *****"));
// }} ""
// {{ 307 1 0 "51234255_860d_4de2_b778d4d83ff4f3e2" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Sample_Well", strWellID, hslString, 255);
file2.AddField("I7_", strIndex1_ID, hslString, 255);
file2.AddField("I5_", strIndex2_ID, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open(i_strTempSampleSheetFileName, hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, i_strTempSampleSheetFileName, "HxMetEdCompCmd");
}
// }} ""
// {{ 308 1 0 "19df7a34_a67c_426a_a369a702c41ae259" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 309 1 0 "dcde40cf_f6ae_486e_9e13f11dd7388d71" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex1SeqPositions.SetSize(0);
// }} ""
// {{ 310 1 0 "65f7fa7b_6742_4d80_9c7a56be0b75f5b4" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex2SeqPositions.SetSize(0);
// }} ""
// {{ 311 1 0 "12e95253_0d8d_47ec_98f15a3d930371c3" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrALPseqPositions.SetSize(0);
// }} ""
// {{ 312 1 0 "bbc0fb4e_696d_4c9c_97e907429ebb4b5c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
o_intNumberOfSamples = 0;
while (
   (file2.Eof() == 0)
)
{
o_intNumberOfSamples = o_intNumberOfSamples + 1;
// }} ""
// {{ 313 1 0 "585cb43a_1de3_4f1f_9b34457d54a8d313" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 314 1 0 "6ca846a1_cfb5_4059_9fd161dbfa93d5ea" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
intReturnValueFound0 = StrFind(strWellID, Translate("0"));
// }} ""
// {{ 315 1 0 "3cc2094f_ca76_400b_b9b65be4c3892d24" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intReturnValueFound0 != -1)
{
// }} ""
// {{ 316 1 0 "e88c9661_e91c_4bbd_9c47ac47a95351f0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 317 1 0 "3fc74a53_a765_4032_8ec34d25634f0ec9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strWellID_Row = StrLeft(strWellID, 1);
// }} ""
// {{{ 318 1 0 "815f92d4_2c55_49ac_ba90774db8faa3f0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strWellID_Column = StrRight(strWellID, 2);
// }} ""
// {{{ 319 1 0 "84fd8776_6a0c_4991_bc6c5c614b1fa080" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strWellID_Column = StrIVal(strWellID_Column);
// }} ""
// {{{ 320 1 0 "d84e3b8a_cf44_408a_81b1184b191e3ae2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strWellID = StrConcat2(strWellID_Row, strWellID_Column);
// }} ""
// {{ 321 1 0 "3cc2094f_ca76_400b_b9b65be4c3892d24" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 322 1 0 "9dcd0d65_5c0e_4f8f_a8bd6c91ccfc1f7e" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrALPseqPositions.AddAsLast(strWellID);
// }} ""
// {{ 323 1 0 "ac327f65_d120_401e_aed2afdc391b869a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting >= 1)
{
// }} ""
// {{ 324 1 0 "8bac7ef4_a89b_4f3f_9da232e3e1b984ed" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 325 1 0 "8ffe97c3_e0c1_40b5_9200aaf477464544" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex1_Position = StrRight(strIndex1_ID, 2);
// }} ""
// {{{ 326 1 0 "4c04418e_0dd9_4a98_81448964453a0b74" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex1_Position = StrTrimLeft(strIndex1_Position, Translate("0"));
// }} ""
// {{ 327 1 0 "fdd81a6f_01e3_404b_8295f26a63ba5608" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex1SeqPositions.AddAsLast(strIndex1_Position);
// }} ""
// {{ 328 1 0 "ac327f65_d120_401e_aed2afdc391b869a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 329 1 0 "d9672b7c_da4f_4272_a2119319640bb543" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (o_intIndexesUsedSetting >= 2)
{
// }} ""
// {{ 330 1 0 "6b517508_56d3_4889_9f90ab51d39823d3" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 331 1 0 "dac9ec5e_4270_45b0_a52431deae8ae6ad" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex2_Position = StrRight(strIndex2_ID, 2);
// }} ""
// {{{ 332 1 0 "26000965_71ee_4f69_808f970732c36859" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strIndex2_Position = StrTrimLeft(strIndex2_Position, Translate("0"));
// }} ""
// {{ 333 1 0 "b2318144_9fc9_435a_9b917a9f8cec7fe9" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex2SeqPositions.AddAsLast(strIndex2_Position);
// }} ""
// {{ 334 1 0 "d9672b7c_da4f_4272_a2119319640bb543" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("Well:  ", strWellID, "  Index1 Position in carrier:  ", strIndex1_Position, "  Index2 Position in carrier:  ", strIndex2_Position);
// {{ 336 1 0 "bbc0fb4e_696d_4c9c_97e907429ebb4b5c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 337 1 0 "368175f1_301a_424d_b6629bd3e74fcb2a" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 338 1 0 "cd808927_cdbd_4b74_a651644b71214b07" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  DATA_ReadSampleSheet <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "DATA_ReadSampleSheet" "End"
}
// }} ""
// {{{ 5 "ODTC_DownloadProtocol" "Begin"
function ODTC_DownloadProtocol( variable i_IntDeviceNumber, variable i_strProtocollFullFileName ) void {
// }} ""
private variable blnReturn;
private variable intReturnValue;
private variable strMessage;
// {{ 5 "ODTC_DownloadProtocol" "InitLocals"
// }} ""
// {{ 547 1 0 "e78be8e5_e9f5_45c3_827731b51f0c76c4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_DownloadProtocol:  Start Submethod <<<<<<<<<<"));
// }} ""
Trace ("------- ODTC device script to be perfomed: ", i_strProtocollFullFileName);

// {{{ 549 1 0 "2ad49997_0c49_4d67_b956b490c278a82e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::DownloadProtocol(i_IntDeviceNumber, Translate(""), i_strProtocollFullFileName, intReturnValue, strMessage);
// }} ""
// {{{ 550 1 0 "bd194606_9e0d_4c15_be4dd35bba00e541" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::DownloadProtocol", intReturnValue, strMessage);
// }} ""
// {{ 551 1 0 "7b3f1ce7_9013_4221_b220334262356bf5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_DownloadProtocol:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_DownloadProtocol" "End"
}
// }} ""
// {{{ 5 "DATA_ReadInputWorklistExcelFormat" "Begin"
function DATA_ReadInputWorklistExcelFormat( variable & io_strSamplePlateFile, sequence & io_seqSourcePlateTemplate, variable & o_intNumberOfSamples, variable & o_intIndexesUsedSetting, variable & io_arrIndex1SeqPositions[], variable & io_arrIndex1IDs[], variable & io_arrIndex2SeqPositions[], variable & io_arrIndex2IDs[], variable & io_arrALPseqLabID[], variable & io_arrALPseqPositions[], variable & o_IndexLabwareFormat ) void {
// }} ""
private variable fileInputWkl_Sample_ID;
private variable fileInputWkl_Sample_Position;
private variable fileInputWkl_Index1_Pos;
private variable fileInputWkl_Index2_Pos;
private variable loopCounter2;
private variable fileInputWkl_Index2_ID;
private variable fileInputWkl_Index1_ID;
private file fileInputWkl;
private variable io_arrSampleSeqPositions[];
private variable io_arrSampleID[];
private variable io_arrIndex1ID[];
private variable io_arrIndex2ID[];
private variable intSizeArrIndex2Positions;
private variable intSizeArrIndex1Positions;
private variable strTempLabIDSrcSeq;
private variable blnPositionFound;
private variable intReturnFromArray;
private variable loopCounter3;
private variable loopCounter4;
private variable arr_strCoordinateLetter[];
private variable strCoordinate;
private variable arr_strCoordinates[];
// {{ 5 "DATA_ReadInputWorklistExcelFormat" "InitLocals"
o_intNumberOfSamples = 0;
o_intIndexesUsedSetting = 0;
o_IndexLabwareFormat = 0;
// }} ""
// {{ 100 1 0 "24bdcf10_1174_48fd_a4c4af836cfe855e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> Submethod:  DATA_ReadInputWorklistExcelFormat <<<<<<<<<<"));
// }} ""
// {{ 101 1 0 "7a349a36_e6dd_456e_87f648d611a31757" "{B31F353A-5D80-11d4-A5EB-0050DA737D89}"
io_seqSourcePlateTemplate.SetCurrentPosition(1);
// }} ""
// {{{ 102 1 0 "99a50ed5_2ae8_4787_a400a19b0c4a49cb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTempLabIDSrcSeq = SeqGetLabwareId(io_seqSourcePlateTemplate);
// }} ""
// {{ 103 1 0 "9ffc4a84_b697_4e4c_b951a1394eaaa7e6" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrSampleID.SetSize(0);
// }} ""
// {{ 104 1 0 "da9bda07_1fa3_4db5_abd51d044927f05c" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrSampleSeqPositions.SetSize(0);
// }} ""
// {{ 105 1 0 "7a4404d7_6675_4203_9d6d7165192575f5" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex1ID.SetSize(0);
// }} ""
// {{ 106 1 0 "b3e72c7d_83ff_4a6f_a6948962579df73e" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex1SeqPositions.SetSize(0);
// }} ""
// {{ 107 1 0 "c3638047_18bb_4dc6_85875e07e779cac7" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex2ID.SetSize(0);
// }} ""
// {{ 108 1 0 "b3a16178_258e_4b17_9fdc5fcd874a910d" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrIndex2SeqPositions.SetSize(0);
// }} ""
// {{ 109 1 0 "668aa7cd_bd12_4841_a50d10baf7c3f8f1" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
io_arrALPseqLabID.SetSize(0);
// }} ""
// {{ 110 1 0 "baea9615_1037_445b_8a7cbf84fc9acc1a" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
fileInputWkl.AddField("Sample_ID", fileInputWkl_Sample_ID, hslString, 255);
fileInputWkl.AddField("Sample_Position", fileInputWkl_Sample_Position, hslString, 255);
fileInputWkl.AddField("Index1_ID", fileInputWkl_Index1_ID, hslString, 255);
fileInputWkl.AddField("Index1_Pos", fileInputWkl_Index1_Pos, hslString, 255);
fileInputWkl.AddField("Index2_ID", fileInputWkl_Index2_ID, hslString, 255);
fileInputWkl.AddField("Index2_Pos", fileInputWkl_Index2_Pos, hslString, 255);
if( 0 == fileInputWkl.Open(io_strSamplePlateFile + " " + "Sheet1$", hslRead, "Select * from [Sheet1$] where [Sample_Position] is not null") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, io_strSamplePlateFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 111 1 0 "749be0a7_e68a_474e_9d8bad724ebce350" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter2 = 0;
while (
   (fileInputWkl.Eof() == 0)
)
{
loopCounter2 = loopCounter2 + 1;
// }} ""
// {{{ 112 1 0 "f2eccc2b_911b_4104_84608058f371e5c8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
APPSLIB::TraceValues(Translate("Records in Excel File: "), loopCounter2, Translate(""), Translate(""), Translate(""), Translate(""), Translate(""), Translate(""));
// }} ""
// {{ 113 1 0 "5a64a089_4ced_47b8_a1d66f8355fd6eeb" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == fileInputWkl.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 114 1 0 "3db16a9b_e71a_49a4_b602f0ff24e2cfa5" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrSampleID.AddAsLast(fileInputWkl_Sample_ID);
// }} ""
// {{ 115 1 0 "ed2d96dc_9f17_4c45_9f9ddfb28af0ebe9" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrALPseqLabID.AddAsLast(strTempLabIDSrcSeq);
// }} ""
// {{ 116 1 0 "64d40451_1811_428e_b991b73a40d00c74" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrALPseqPositions.AddAsLast(fileInputWkl_Sample_Position);
// }} ""
// {{ 117 1 0 "baa2ff04_0ac2_4dd8_940927b602153f73" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex1IDs.AddAsLast(fileInputWkl_Index1_ID);
// }} ""
// {{ 118 1 0 "06f9f0d5_7af2_4d49_bac9f0a81d279a32" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex1SeqPositions.AddAsLast(fileInputWkl_Index1_Pos);
// }} ""
// {{ 119 1 0 "7f2862c2_173c_40cf_b5f1e0bc7c4bd6c8" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex2IDs.AddAsLast(fileInputWkl_Index2_ID);
// }} ""
// {{ 120 1 0 "1968a92c_00e0_41f9_8b32727380a21558" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
io_arrIndex2SeqPositions.AddAsLast(fileInputWkl_Index2_Pos);
// }} ""
// {{ 121 1 0 "749be0a7_e68a_474e_9d8bad724ebce350" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 122 1 0 "e8f644ae_1273_4f21_9e87f7baa4b79238" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Util2::Debug::TraceArray_3(Translate(" Arrays of Positions for Samples and Indexes"), io_arrALPseqPositions, io_arrIndex1SeqPositions, io_arrIndex2SeqPositions);
// }} ""
// {{{ 123 1 0 "30ae439f_7dc6_454e_aa1efdcba5375180" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Util2::Debug::TraceArray_3(Translate(" Arrays of ID for Samples and Indexes"), io_arrSampleID, io_arrIndex1IDs, io_arrIndex2IDs);
// }} ""
// {{ 124 1 0 "0d303bcf_4565_4df4_9914b09454456200" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 125 1 0 "aee67446_75a3_496b_8b9e8872621c890c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 126 1 0 "7fabcb87_7a75_49de_bc5bbf284173e4d4" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_strCoordinateLetter.SetSize(0);
// }} ""
// {{ 127 1 0 "78cadb19_0b44_48ac_a19a57fe097c3625" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("A"));
// }} ""
// {{ 128 1 0 "5255045b_062a_4e26_a54d105e7b5edaa1" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("B"));
// }} ""
// {{ 129 1 0 "ead93bd9_17a5_49cf_bf83c8f8f4733ab5" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("C"));
// }} ""
// {{ 130 1 0 "1b3eb4c0_7d0c_48d4_928d0bf99d10894d" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("D"));
// }} ""
// {{ 131 1 0 "4bdb7240_35f7_4409_9de2b7f3c47b02f6" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("E"));
// }} ""
// {{ 132 1 0 "b467081f_cf53_43f0_836efd8352894486" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("F"));
// }} ""
// {{ 133 1 0 "c04b049c_385b_484d_9fe288ff0457e3ed" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("G"));
// }} ""
// {{ 134 1 0 "c342dd8b_5cb0_46af_90ce4e2cdd8d2cef" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinateLetter.AddAsLast(Translate("H"));
// }} ""
// {{ 135 1 0 "3001587f_a5fa_43ea_ae9711b0c3aee21b" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_strCoordinates.SetSize(0);
// }} ""
// {{ 136 1 0 "eaea557f_5d49_4923_a39813c6cb3cac6a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter3 = 0; loopCounter3 < 12;)
{
loopCounter3 = loopCounter3 + 1;
// }} ""
// {{ 137 1 0 "d1d51b03_7b18_4781_b37933f159b10e51" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter4 = 0; loopCounter4 < 8;)
{
loopCounter4 = loopCounter4 + 1;
// }} ""
// {{{ 138 1 0 "0e4e5e27_93be_4c2e_92dad699ed340119" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strCoordinate = StrConcat2(arr_strCoordinateLetter.ElementAt( loopCounter4 -1), loopCounter3);
// }} ""
// {{ 139 1 0 "8b447bcf_cf24_4a78_93cffacab9321d49" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_strCoordinates.AddAsLast(strCoordinate);
// }} ""
// {{ 140 1 0 "d1d51b03_7b18_4781_b37933f159b10e51" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 141 1 0 "eaea557f_5d49_4923_a39813c6cb3cac6a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 142 1 0 "0d303bcf_4565_4df4_9914b09454456200" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 143 1 0 "02922b50_65b0_42c8_b8c54dcee8fa6aae" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnPositionFound = APPSLIB::ArrayLookup(arr_strCoordinates, io_arrIndex1SeqPositions.ElementAt( 1 -1), intReturnFromArray);
// }} ""
// {{ 144 1 0 "6d034321_a999_42bf_930d1bebbd747cb6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (blnPositionFound == ASWGLOBAL::BOOL::TRUE)
{
// }} ""
// {{ 145 1 0 "a126992c_18ae_4fb5_a4e73ad03db9b449" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_IndexLabwareFormat = Translate("plate");
// }} ""
// {{ 146 1 0 "6d034321_a999_42bf_930d1bebbd747cb6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 147 1 0 "477310cb_f03d_4ca3_a52169d7ba381a83" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_IndexLabwareFormat = Translate("tube");
// }} ""
// {{ 148 1 0 "6d034321_a999_42bf_930d1bebbd747cb6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 149 1 0 "e9da07dd_0395_4efb_bb73f0da5ceb5d8c" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
o_intNumberOfSamples=io_arrSampleID.GetSize();
// }} ""
// {{ 150 1 0 "396f1d9d_3108_430d_83b15eb282a5997b" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
intSizeArrIndex1Positions=io_arrIndex1SeqPositions.GetSize();
// }} ""
// {{ 151 1 0 "2f376a36_d222_47a5_8ec3fbb167d3691a" "{72EACF88-8D49-43e3-92C8-2F90E81E3260}"
intSizeArrIndex2Positions=io_arrIndex2SeqPositions.GetSize();
// }} ""
// {{ 152 1 0 "e646e2f1_5509_407c_bedb9e3e284be08a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intSizeArrIndex2Positions != 0)
{
// }} ""
// {{ 153 1 0 "36e0ad9d_ba81_43cd_a835f8506c0ad03f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_intIndexesUsedSetting = 2;
// }} ""
// {{ 154 1 0 "e646e2f1_5509_407c_bedb9e3e284be08a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 155 1 0 "c8ef5439_7686_4b23_9b553b333abdb05d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intSizeArrIndex1Positions == 0)
{
// }} ""
// {{ 156 1 0 "d80d8ab2_f35e_424f_b35c578821ba2cd7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_intIndexesUsedSetting = 0;
// }} ""
// {{ 157 1 0 "c8ef5439_7686_4b23_9b553b333abdb05d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 158 1 0 "72023d08_a29b_452f_9ab69eb60421db84" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
o_intIndexesUsedSetting = 1;
// }} ""
// {{ 159 1 0 "c8ef5439_7686_4b23_9b553b333abdb05d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 160 1 0 "e646e2f1_5509_407c_bedb9e3e284be08a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 161 1 0 "aa58406b_5a21_4c64_951bb852ecc49c93" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != fileInputWkl.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
fileInputWkl.RemoveFields();
// }} ""
// {{ 162 1 0 "6985deac_6b31_4429_852b4cf21107fcea" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: DATA_ReadSamplePlateFile <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "DATA_ReadInputWorklistExcelFormat" "End"
}
// }} ""
// {{{ 5 "ODTC_WaitForLidAndBlockCorrectTemperature" "Begin"
function ODTC_WaitForLidAndBlockCorrectTemperature( variable i_IntDeviceNumber, variable i_RequestedBlockTemperature, variable i_RequestedLidTemperature ) void {
// }} ""
private variable strState;
private variable strDeviceID;
private variable blnReturn;
private variable strTrace;
private variable intReturnValue;
private variable strCurrentTime;
private variable blnLocked;
private variable strMessage;
private variable strPmsID;
private variable strTime;
private variable arrStrActualTemperatures[];
private variable arrFltActualTemperatures[];
private variable fltActualLidTemperature;
private variable fltActualMountTemperature;
private variable fltMaxAllowedLidTemperature;
private variable fltMinAllowedLidTemperature;
private variable fltMinAllowedMountTemperature;
private variable fltMaxAllowedMountTemperature;
private variable loopCounter1;
private timer timerWaitForTemperature;
private variable intLidTemperature;
private variable intMountTemperature;
private variable intTemperatureLidMount;
private variable repeatLoop;
private variable intEvaluatingTemperature;
private dialog dialogHandleE987E43C8B284960A88BFC06F15088AB;
// {{ 5 "ODTC_WaitForLidAndBlockCorrectTemperature" "InitLocals"
// }} ""
// {{ 630 1 0 "29ade8d2_0e69_4518_a9894aaa2f237bf2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>---------------------------------------------------------------------------------------------->\n>>>>>>>>>> ODTC_WaitForLidAndBlockCorrectTemperature:  Start Submethod <<<<<<<<<<"));
// }} ""
Trace ("------- Requested Block Temperature: ", i_RequestedBlockTemperature);
Trace ("------- Requested Lid   Temperature: ", i_RequestedLidTemperature);
// {{ 632 1 0 "13956815_df9f_4cf3_83453db352a4053d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 633 1 0 "b956fde8_c7b4_49fa_9a1a13bc1fe28540" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltMaxAllowedLidTemperature = i_RequestedLidTemperature + 15;
// }} ""
// {{ 634 1 0 "0793bc43_c86a_4cba_b2227d19e0edb1d7" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltMinAllowedLidTemperature = i_RequestedLidTemperature - 5;
// }} ""
// {{ 635 1 0 "3d098461_1b08_4405_be8c57a82f720a0f" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltMaxAllowedMountTemperature = i_RequestedBlockTemperature + 0.5;
// }} ""
// {{ 636 1 0 "19547261_30a9_4398_adfdde7ee11c27ba" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
fltMinAllowedMountTemperature = i_RequestedBlockTemperature - 0.5;
// }} ""
// {{ 637 1 0 "537c572f_0316_4e5b_b669b32e4993971e" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 638 1 0 "5f80537e_4519_4d22_85bb70aa8dd4f3b9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnReturn = Inheco_ODTC::Standard::GetStatus(i_IntDeviceNumber, strDeviceID, strState, blnLocked, strPmsID, strCurrentTime, intReturnValue, strMessage);
// }} ""
// {{{ 639 1 0 "c4f9590e_48a4_4945_afe249506c5d6cd8" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat12("strDeviceID = ", strDeviceID, ", strState = ", strState, ", blnLocked = ", blnLocked, ", strPMSID = ", strPmsID, ", strCurrentDeviceTime = ", strCurrentTime, ", intReturnValue = ", intReturnValue);
// }} ""
// {{{ 640 1 0 "a4638a31_3210_446b_95a3c589dc6ea40c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
strTrace = StrConcat4(strTrace, ", strMessage = ", strMessage, "");
// }} ""
// {{{ 641 1 0 "bcf6ca18_5937_4b23_a21d59cd3be9b4a5" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "INHECOODTCCONTROLLER::GetStatus", intReturnValue, strTrace);
// }} ""
// {{ 642 1 0 "537c572f_0316_4e5b_b669b32e4993971e" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 643 1 0 "f27f4fb3_c06c_4d45_aabcf0e244169175" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 644 1 0 "c7d1663d_12f3_4c61_9930db1cf429ce72" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Inheco_ODTC::Standard::ReadActualTemperature(i_IntDeviceNumber, Translate(""), strTime, arrFltActualTemperatures, arrStrActualTemperatures, intReturnValue, strMessage);
// }} ""
// {{{ 645 1 0 "64798407_cc8b_4c65_918d255440e5ce7c" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "Inheco_ODTC::Standard::ReadActualTemperature", intReturnValue, strMessage);
// }} ""
// {{ 646 1 0 "8025bd1a_ad8c_4777_9ad801cdf986e3b7" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
fltActualLidTemperature=arrFltActualTemperatures.GetAt(4-1);
// }} ""
// {{ 647 1 0 "371d39dc_2dcd_438d_bc29d49a6a048f89" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
fltActualMountTemperature=arrFltActualTemperatures.GetAt(6-1);
// }} ""
Trace ("------- Actual Block Temperature: ", fltActualMountTemperature);
Trace ("------- Actual Lid   Temperature: ", fltActualLidTemperature);
// {{ 649 1 0 "fa7a50ea_fe05_4f87_8b70050192185a0d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
repeatLoop = 1;
// }} ""
// {{ 650 1 0 "efda7956_15ce_4a01_a80bb87d9e5451d2" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intEvaluatingTemperature = 0;
// }} ""
// {{ 651 1 0 "c07d0f9f_f3de_4789_893c2f43ec5edbfe" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 652 1 0 "5aac2eeb_d086_4657_9a95807fe2057d7b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (1 == 1)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 653 1 0 "743f685a_1723_42cc_b449144cc1f8cf1c" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timerWaitForTemperature.SetTimer(10) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 654 1 0 "eb05e37b_86d8_450b_9011e3d612cdbbd0" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timerWaitForTemperature.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 655 1 0 "9d95554f_1bdf_4ea9_82e5a824045d0a7b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intMountTemperature = 0;
// }} ""
// {{ 656 1 0 "0eee24f7_078d_430d_bc00cfc5a96d4774" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intLidTemperature = 0;
// }} ""
// {{{ 657 1 0 "92b2f11e_4c82_4a1b_b8240084d455fc59" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Inheco_ODTC::Standard::ReadActualTemperature(i_IntDeviceNumber, Translate(""), strTime, arrFltActualTemperatures, arrStrActualTemperatures, intReturnValue, strMessage);
// }} ""
// {{{ 658 1 0 "16714ca4_fa8f_40f1_b9f03456a9956fb1" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_ODTC_HandleReturnValue(blnReturn, "Inheco_ODTC::Standard::ReadActualTemperature", intReturnValue, strMessage);
// }} ""
// {{ 659 1 0 "b9faa5dc_7ab2_42a4_ac7be9708f636032" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
fltActualLidTemperature=arrFltActualTemperatures.GetAt(4-1);
// }} ""
// {{ 660 1 0 "1fe3ad05_021c_484f_87b474610d0c1250" "{67A8F1C9-6546-41e9-AD2F-3C54F7818853}"
fltActualMountTemperature=arrFltActualTemperatures.GetAt(6-1);
// }} ""
Trace ("------- Actual Block Temperature: ", fltActualMountTemperature);
Trace ("------- Actual Lid   Temperature: ", fltActualLidTemperature);
Trace ("------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- -------");
// {{ 662 1 0 "abc322f0_7b19_4561_a52a0a14f96d7313" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (fltActualLidTemperature >= fltMinAllowedLidTemperature)
{
// }} ""
// {{ 663 1 0 "89408bc4_3a3b_45ec_acf38662cc8bd894" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (fltActualLidTemperature <= fltMaxAllowedLidTemperature)
{
// }} ""
// {{ 664 1 0 "ff1732fa_73ae_463c_b0f838065ee5a633" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intLidTemperature = 1;
// }} ""
// {{ 665 1 0 "89408bc4_3a3b_45ec_acf38662cc8bd894" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 666 1 0 "ab87ee30_01eb_4760_973e828929dc06ad" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intLidTemperature = 0;
// }} ""
// {{ 667 1 0 "89408bc4_3a3b_45ec_acf38662cc8bd894" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 668 1 0 "abc322f0_7b19_4561_a52a0a14f96d7313" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 669 1 0 "e4067b9c_13f2_47a0_bbfa713c2758dee0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intLidTemperature = 0;
// }} ""
// {{ 670 1 0 "abc322f0_7b19_4561_a52a0a14f96d7313" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 671 1 0 "1409a313_d3bb_450f_807a4e64f3cf8ca4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intLidTemperature == 0)
{
// }} ""
Trace ("-------  Requested Lid Temperature = ",i_RequestedLidTemperature," not reached yet. Current Lid Temperature ", fltActualLidTemperature );
Trace ("------- Minimum Lid Temperature allowed: ", fltMinAllowedLidTemperature);
Trace ("------- Maximum Lid Temperature allowed: ", fltMaxAllowedLidTemperature);
Trace ("------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- -------");
// {{ 673 1 0 "1409a313_d3bb_450f_807a4e64f3cf8ca4" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 674 1 0 "3d91e087_e728_4625_bcd9b947988eeb13" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (fltActualMountTemperature >= fltMinAllowedMountTemperature)
{
// }} ""
// {{ 675 1 0 "e3b405b9_996f_4145_986660f207c7593c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (fltActualMountTemperature <= fltMaxAllowedMountTemperature)
{
// }} ""
// {{ 676 1 0 "74e06c70_7136_4e19_8c3c69985f5d23b2" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intMountTemperature = 1;
// }} ""
// {{ 677 1 0 "e3b405b9_996f_4145_986660f207c7593c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 678 1 0 "4a5f21b1_ca56_4558_81848adbd6b7b1d0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intMountTemperature = 0;
// }} ""
// {{ 679 1 0 "e3b405b9_996f_4145_986660f207c7593c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 680 1 0 "3d91e087_e728_4625_bcd9b947988eeb13" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 681 1 0 "fcd17c70_25c0_4584_9b9a3c1ddccd62b3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intMountTemperature = 0;
// }} ""
// {{ 682 1 0 "3d91e087_e728_4625_bcd9b947988eeb13" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 683 1 0 "b9f68fb8_f0b9_4ecc_bce2947374fa9615" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intMountTemperature == 0)
{
// }} ""
Trace ("-------  Requested Block Temperature = ",i_RequestedBlockTemperature," not reached yet. Current Block Temperature ", fltActualMountTemperature );
Trace ("------- Minimum Block Temperature allowed: ", fltMinAllowedMountTemperature);
Trace ("------- Maximum Block Temperature allowed: ", fltMaxAllowedMountTemperature);
Trace ("------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- ------- -------");
// {{ 685 1 0 "b9f68fb8_f0b9_4ecc_bce2947374fa9615" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 686 1 0 "272235fa_a9d6_4c7c_a86c171c481081b1" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
intTemperatureLidMount = intLidTemperature + intMountTemperature;
// }} ""
// {{ 687 1 0 "7146cded_5bfe_4257_a5aef9d97c6e0ca8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intTemperatureLidMount == 2)
{
// }} ""
Trace ("------- Temperatures for Block and Lid have been reached. Now evaluating stability...");
// {{ 689 1 0 "a395c6f2_8aa5_479c_91a30e55830199a8" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
intEvaluatingTemperature = intEvaluatingTemperature + 1;
// }} ""
// {{ 690 1 0 "3b538048_80d2_40cb_81110ebd54be7b0f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 691 1 0 "421200e1_6d31_4d56_a0bdf55dc2a1bce7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intEvaluatingTemperature == 3)
{
// }} ""
// {{ 692 1 0 "0e9e4c06_35e2_4cc2_8f38a420928074b6" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 693 1 0 "421200e1_6d31_4d56_a0bdf55dc2a1bce7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 694 1 0 "7146cded_5bfe_4257_a5aef9d97c6e0ca8" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 695 1 0 "d5d78641_cad9_4a5b_ae7994f1e5d1d19d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (loopCounter1 == 50)
{
// }} ""
// {{ 696 1 0 "a6d9d44c_ece3_4599_a81eaf6ff7127134" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleE987E43C8B284960A88BFC06F15088AB.SetOutput(Translate(" ERROR Could not reach temperatures"));
dialogHandleE987E43C8B284960A88BFC06F15088AB.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, 5);
// }} ""
// {{ 697 1 0 "e420698f_0a60_41ce_b32ea48da1c45cb3" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 698 1 0 "d5d78641_cad9_4a5b_ae7994f1e5d1d19d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 699 1 0 "5aac2eeb_d086_4657_9a95807fe2057d7b" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 700 1 0 "e5481857_b4b3_44b0_8d23a2bfbfe986e4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> ODTC_WaitForLidAndBlockCorrectTemperature:  Submethod Complete <<<<<<<<<<\n<-----------------------------------------------------------------------------------------------------<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"));
// }} ""
// {{{ 5 "ODTC_WaitForLidAndBlockCorrectTemperature" "End"
}
// }} ""
/* {{ 2 "SubmethodInsertLine" "" */ // }} ""
// {{{ 2 "LibraryNamespace" "End"
} // library namespace
// }} ""
// $$author=Windows10$$valid=0$$time=2019-11-21 17:25$$checksum=535370a2$$length=088$$